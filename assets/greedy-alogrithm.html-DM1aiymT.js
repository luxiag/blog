import{_ as t,c as n,b as e,o as a}from"./app-DmuFHWsy.js";const l={};function o(p,s){return a(),n("div",null,s[0]||(s[0]=[e(`<h2 id="教室调度问题" tabindex="-1"><a class="header-anchor" href="#教室调度问题"><span>教室调度问题</span></a></h2><table><thead><tr><th>课程</th><th>开始时间</th><th>结束时间</th></tr></thead><tbody><tr><td>美术</td><td>9AM</td><td>10AM</td></tr><tr><td>英语</td><td>9:30AM</td><td>10:30AM</td></tr><tr><td>数学</td><td>10AM</td><td>11AM</td></tr><tr><td>计算机</td><td>10:30AM</td><td>11:30AM</td></tr><tr><td>音乐</td><td>11AM</td><td>12PM</td></tr></tbody></table><p>(1) 选出结束最早的课，它就是要在这间教室上的第一堂课。</p><p>(2) 接下来，必须选择第一堂课结束后才开始的课。同样，你选择结束最早的课，这将是要 在这间教室上的第二堂课。</p><table><thead><tr><th>课程</th><th>开始时间</th><th>结束时间</th><th></th></tr></thead><tbody><tr><td>美术</td><td>9AM</td><td>10AM</td><td>✅</td></tr><tr><td>英语</td><td>9:30AM</td><td>10:30AM</td><td>❌</td></tr><tr><td>数学</td><td>10AM</td><td>11AM</td><td>✅</td></tr><tr><td>计算机</td><td>10:30AM</td><td>11:30AM</td><td>❌</td></tr><tr><td>音乐</td><td>11AM</td><td>12PM</td><td>✅</td></tr></tbody></table><h2 id="跳跃游戏" tabindex="-1"><a class="header-anchor" href="#跳跃游戏"><span>跳跃游戏</span></a></h2><p>来源：https://leetcode.cn/problems/jump-game-ii/description/</p><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">给你一个非负整数数组 nums ，你最初位于数组的第一个位置。</span></span>
<span class="line"><span style="color:#F8F8F2;">数组中的每个元素代表你在该位置可以跳跃的最大长度。</span></span>
<span class="line"><span style="color:#F8F8F2;">你的目标是使用最少的跳跃次数到达数组的最后一个位置。</span></span>
<span class="line"><span style="color:#F8F8F2;">假设你总是可以到达数组的最后一个位置。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">输入: nums = [</span><span style="color:#FF79C6;">2,3,1,1,4</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">输出: 2</span></span>
<span class="line"><span style="color:#F8F8F2;">解释: 跳到最后一个位置的最小跳跃数是 2。</span></span>
<span class="line"><span style="color:#F8F8F2;">从下标为 0 跳到下标为 1 的位置，跳 1 步，然后跳 3 步到达数组的最后一个位置。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>来源：https://leetcode.cn/problems/jump-game-ii/solutions/230241/tiao-yue-you-xi-ii-by-leetcode-solution/</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> jump</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">nums</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  let</span><span style="color:#F8F8F2;"> length </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> nums.length;</span></span>
<span class="line"><span style="color:#FF79C6;">  let</span><span style="color:#F8F8F2;"> end </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">  let</span><span style="color:#F8F8F2;"> maxPosition </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">  let</span><span style="color:#F8F8F2;"> steps </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">  for</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;"> length </span><span style="color:#FF79C6;">-</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">; i</span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">    //每次在上次能跳到的范围（end）内选择一个能跳的最远的位置</span></span>
<span class="line"><span style="color:#F8F8F2;">    maxPosition </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#50FA7B;">max</span><span style="color:#F8F8F2;">(maxPosition, i </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> nums[i]);</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (i </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> end) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      end </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> maxPosition;</span></span>
<span class="line"><span style="color:#F8F8F2;">      steps</span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> steps;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10)]))}const r=t(l,[["render",o],["__file","greedy-alogrithm.html.vue"]]),i=JSON.parse('{"path":"/algorithm/greedy-alogrithm.html","title":"贪婪算法","lang":"en-US","frontmatter":{"title":"贪婪算法","date":"2022-10-02T00:00:00.000Z","category":["算法"],"tag":["算法图解"],"description":"教室调度问题 (1) 选出结束最早的课，它就是要在这间教室上的第一堂课。 (2) 接下来，必须选择第一堂课结束后才开始的课。同样，你选择结束最早的课，这将是要 在这间教室上的第二堂课。 跳跃游戏 来源：https://leetcode.cn/problems/jump-game-ii/description/ 来源：https://leetcode.c...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/algorithm/greedy-alogrithm.html"}],["meta",{"property":"og:title","content":"贪婪算法"}],["meta",{"property":"og:description","content":"教室调度问题 (1) 选出结束最早的课，它就是要在这间教室上的第一堂课。 (2) 接下来，必须选择第一堂课结束后才开始的课。同样，你选择结束最早的课，这将是要 在这间教室上的第二堂课。 跳跃游戏 来源：https://leetcode.cn/problems/jump-game-ii/description/ 来源：https://leetcode.c..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2022-12-01T08:27:40.000Z"}],["meta",{"property":"article:tag","content":"算法图解"}],["meta",{"property":"article:published_time","content":"2022-10-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-01T08:27:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"贪婪算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-02T00:00:00.000Z\\",\\"dateModified\\":\\"2022-12-01T08:27:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"教室调度问题","slug":"教室调度问题","link":"#教室调度问题","children":[]},{"level":2,"title":"跳跃游戏","slug":"跳跃游戏","link":"#跳跃游戏","children":[]}],"git":{"createdTime":1665068249000,"updatedTime":1669883260000,"contributors":[{"name":"luxiang","email":"luxiag@qq.com","commits":1},{"name":"卢祥","email":"example@qq.com","commits":1}]},"readingTime":{"minutes":1.35,"words":404},"filePathRelative":"algorithm/greedy-alogrithm.md","localizedDate":"October 2, 2022","excerpt":"<h2>教室调度问题</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>课程</th>\\n<th>开始时间</th>\\n<th>结束时间</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>美术</td>\\n<td>9AM</td>\\n<td>10AM</td>\\n</tr>\\n<tr>\\n<td>英语</td>\\n<td>9:30AM</td>\\n<td>10:30AM</td>\\n</tr>\\n<tr>\\n<td>数学</td>\\n<td>10AM</td>\\n<td>11AM</td>\\n</tr>\\n<tr>\\n<td>计算机</td>\\n<td>10:30AM</td>\\n<td>11:30AM</td>\\n</tr>\\n<tr>\\n<td>音乐</td>\\n<td>11AM</td>\\n<td>12PM</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{r as comp,i as data};
