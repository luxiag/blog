import{_ as O,e as r,f as c,g as _,y as B,F as L,u as M,r as y,n as A,i as P,z as w,o as u,v as I}from"./app-Dt3FNJM0.js";const j={__name:"virtual-list.html",setup(k,{expose:b}){b();const D=y(null),e=new Array(1e4).fill(0).map((t,s)=>({id:s,name:`第${s}个元素`})),v=A({list:[],height:20,startOffset:0}),C=t=>{const s=t.target.scrollTop||0,n=Math.floor(s/v.height),o=n+20;v.list=e.slice(n,o),v.startOffset=s-s%v.height};P(()=>{C({target:{scrollTop:0}})});const p=y(),m=y(),R=y(null),a=A({list:[],cachedPositions:[],height:20,startOffset:0,startIndex:0,originStartIndex:0,phantomHeight:0}),g=new Array(1e4).fill(0).map((t,s)=>({id:s,name:"123".repeat(Math.random()*100),bottom:s*a.height})),E=()=>{const t=[];for(let s=0;s<g.length;s++)t[s]={index:s,name:g[s].name,height:a.height,top:s*a.height,bottom:(s+1)*a.height,dValue:0};a.list=t.slice(0,20),a.cachedPositions=t},f=()=>{const t=m.value.childNodes;let s=null;t.forEach(d=>{if(!d||d.nodeType!==1)return;s||(s=d);const i=d.getBoundingClientRect(),{height:q}=i,h=d.dataset.index,x=a.cachedPositions[h].height-q;x&&(a.cachedPositions[h].height=q,a.cachedPositions[h].bottom-=x,a.cachedPositions[h].dValue=x)});let n=0;s&&(n=Number(s.dataset.index));const o=a.cachedPositions.length;let l=a.cachedPositions[n].dValue;a.cachedPositions[n].dValue=0;for(let d=n+1;d<o;d++){const i=a.cachedPositions[d];a.cachedPositions[d].top-=a.cachedPositions[d-1].bottom,a.cachedPositions[d].bottom=a.cachedPositions[d].bottom-l,i.dValue!==0&&(l+=i.dValue,i.dValue=0)}const F=a.cachedPositions[o-1].bottom;console.log(F,"height"),a.phantomHeight=F},H=t=>{const s=t.target.scrollTop||0,n=V(s);if(n===a.originStartIndex)return;a.originStartIndex=n,a.startIndex=n;const o=Math.min(n+20,a.cachedPositions.length+1),l=Math.max(n-5,0);a.list=a.cachedPositions.slice(l,o),a.startOffset=l>1?a.cachedPositions[l-1].bottom:0},V=t=>{const s=a.cachedPositions;let n=0,o=s.length-1,l=-1;for(;n<o;){l=Math.floor((n+o)/2);const d=s[l].bottom;if(d==t)return l;d<t?n=l+1:d>t&&(o=l-1)}const F=s[l];return F&&F.bottom<t&&(l+=1),l};w(()=>{f()});const S=()=>{E()};S(),P(()=>{f()});const T={fixedListRef:D,allList:e,fixedModel:v,fixedScrollEvent:C,phantomRef:p,waterListContainerRef:m,waterListRef:R,waterModel:a,allPhantomList:g,initCachedPositions:E,updateCachedPositions:f,waterScrollEvent:H,getStartIndex:V,initSetup:S,reactive:A,ref:y,onMounted:P,onUpdated:w};return Object.defineProperty(T,"__isScriptSetup",{enumerable:!1,value:!0}),T}},N=["data-index"];function Z(k,b,D,e,v,C){return u(),r("div",null,[b[1]||(b[1]=c("h1",{id:"固定列表",tabindex:"-1"},[c("a",{class:"header-anchor",href:"#固定列表"},[c("span",null,"固定列表")])],-1)),c("div",{class:"list",ref:"fixedListRef",onScroll:e.fixedScrollEvent},[c("div",{class:"list-containter",style:B({transform:`translate3d(0,${e.fixedModel.startOffset}px,0)`})},[(u(!0),r(L,null,M(e.fixedModel.list,p=>(u(),r("div",{class:"fixed-list-item",key:p.id},I(p.name),1))),128))],4),b[0]||(b[0]=c("div",{class:"list-place"},null,-1))],544),b[2]||(b[2]=_(`<ul data-v-b04c51bd><li data-v-b04c51bd>设置2个子元素，一个子元素是列表，一个子元素是占位元素</li><li data-v-b04c51bd>占位元素的高度是所有列表元素的总高度</li><li data-v-b04c51bd>列表元素的高度是固定的，所以列表元素的总高度也是固定的</li><li data-v-b04c51bd>当滚动时，根据滚动条的位置，计算出当前应该显示的列表元素的起始索引和结束索引</li></ul><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#282A36;color:#F8F8F2;" data-v-b04c51bd><pre class="shiki dracula vp-code" data-v-b04c51bd><code data-v-b04c51bd><span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>&lt;</span><span style="color:#FF79C6;" data-v-b04c51bd>div</span><span style="color:#50FA7B;font-style:italic;" data-v-b04c51bd> class</span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#F1FA8C;" data-v-b04c51bd>list</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-b04c51bd> ref</span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#F1FA8C;" data-v-b04c51bd>fixedListRef</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-b04c51bd> @scroll</span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#F1FA8C;" data-v-b04c51bd>fixedScrollEvent</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#F8F8F2;" data-v-b04c51bd>&gt;</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>  &lt;!-- 列表 --&gt;</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  &lt;</span><span style="color:#FF79C6;" data-v-b04c51bd>div</span><span style="color:#50FA7B;font-style:italic;" data-v-b04c51bd> class</span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#F1FA8C;" data-v-b04c51bd>list-containter</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-b04c51bd> :style</span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#F1FA8C;" data-v-b04c51bd>{transform: \`translate3d(0,\${startOffset}px,0)\`}</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#F8F8F2;" data-v-b04c51bd>&gt;</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    &lt;</span><span style="color:#FF79C6;" data-v-b04c51bd>div</span><span style="color:#50FA7B;font-style:italic;" data-v-b04c51bd> class</span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#F1FA8C;" data-v-b04c51bd>fixed-list-item</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-b04c51bd> v-for</span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#F1FA8C;" data-v-b04c51bd>ite in list</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-b04c51bd> :key</span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#F1FA8C;" data-v-b04c51bd>ite.id</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#F8F8F2;" data-v-b04c51bd>&gt;</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>     {{ite.name}}</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    &lt;/</span><span style="color:#FF79C6;" data-v-b04c51bd>div</span><span style="color:#F8F8F2;" data-v-b04c51bd>&gt;</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  &lt;/</span><span style="color:#FF79C6;" data-v-b04c51bd>div</span><span style="color:#F8F8F2;" data-v-b04c51bd>&gt;</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>  &lt;!-- 占位元素 计算整体高度 赋值 --&gt;</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  &lt;</span><span style="color:#FF79C6;" data-v-b04c51bd>div</span><span style="color:#50FA7B;font-style:italic;" data-v-b04c51bd> class</span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#F1FA8C;" data-v-b04c51bd>list-place</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-b04c51bd> :height</span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#F1FA8C;" data-v-b04c51bd>allHeight</span><span style="color:#E9F284;" data-v-b04c51bd>&quot;</span><span style="color:#F8F8F2;" data-v-b04c51bd>&gt;&lt;/</span><span style="color:#FF79C6;" data-v-b04c51bd>div</span><span style="color:#F8F8F2;" data-v-b04c51bd>&gt;</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>&lt;/</span><span style="color:#FF79C6;" data-v-b04c51bd>div</span><span style="color:#F8F8F2;" data-v-b04c51bd>&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-b04c51bd><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div></div></div><p data-v-b04c51bd>监听滚动事件，获取滚动高度和列表元素</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-b04c51bd><pre class="shiki dracula vp-code" data-v-b04c51bd><code data-v-b04c51bd><span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>const</span><span style="color:#50FA7B;" data-v-b04c51bd> scroll</span><span style="color:#FF79C6;" data-v-b04c51bd> =</span><span style="color:#F8F8F2;" data-v-b04c51bd> (</span><span style="color:#FFB86C;font-style:italic;" data-v-b04c51bd>e</span><span style="color:#F8F8F2;" data-v-b04c51bd>) </span><span style="color:#FF79C6;" data-v-b04c51bd>=&gt;</span><span style="color:#F8F8F2;" data-v-b04c51bd> {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> scrollTop </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> e.target.scrollTop </span><span style="color:#FF79C6;" data-v-b04c51bd>||</span><span style="color:#BD93F9;" data-v-b04c51bd> 0</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>  // 滚动高度 / 列表元素高度 = 起始索引</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> startIndex </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> Math.</span><span style="color:#50FA7B;" data-v-b04c51bd>floor</span><span style="color:#F8F8F2;" data-v-b04c51bd>(scrollTop </span><span style="color:#FF79C6;" data-v-b04c51bd>/</span><span style="color:#F8F8F2;" data-v-b04c51bd> height)</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> endIndex </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> startIndex </span><span style="color:#FF79C6;" data-v-b04c51bd>+</span><span style="color:#BD93F9;" data-v-b04c51bd> 20</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> list </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> allList.</span><span style="color:#50FA7B;" data-v-b04c51bd>slice</span><span style="color:#F8F8F2;" data-v-b04c51bd>(startIndex, endIndex)</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>  // 计算起始偏移量 = 滚动高度 - 滚动位置相对于当前列表项高度的偏移量</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> startOffset </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> scrollTop </span><span style="color:#FF79C6;" data-v-b04c51bd>-</span><span style="color:#F8F8F2;" data-v-b04c51bd> (scrollTop </span><span style="color:#FF79C6;" data-v-b04c51bd>%</span><span style="color:#F8F8F2;" data-v-b04c51bd> height)</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-b04c51bd><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div></div></div><h1 id="不固定列表" tabindex="-1" data-v-b04c51bd><a class="header-anchor" href="#不固定列表" data-v-b04c51bd><span data-v-b04c51bd>不固定列表</span></a></h1>`,5)),c("div",{class:"water-list",ref:"waterListRef",onScroll:e.waterScrollEvent},[c("div",{class:"phantomContainer",ref:"phantomRef",style:B({position:"relative",height:e.waterModel.phantomHeight+"px"})},null,4),c("div",{ref:"waterListContainerRef",style:B({transform:`translate3d(0,${e.waterModel.startOffset}px,0)`}),class:"water-list-items"},[(u(!0),r(L,null,M(e.waterModel.list,(p,m)=>(u(),r("div",{key:p.id,"data-index":m,class:"water-list-item"},[c("p",null," No. "+I(p.index),1),c("p",null,I(p.name),1)],8,N))),128))],4)],544),b[3]||(b[3]=_(`<ul data-v-b04c51bd><li data-v-b04c51bd>先假设每个元素的高度都是固定的，然后计算出所有元素的总高度</li><li data-v-b04c51bd>当元素渲染到dom时，获取到每个元素的真实高度，记录并重新计算元素的总高度</li><li data-v-b04c51bd>滚动时获取滚动高度，从记录的元素高度中找到当前应该显示的元素，计算出起始索引和结束索引</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-b04c51bd><pre class="shiki dracula vp-code" data-v-b04c51bd><code data-v-b04c51bd><span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>const</span><span style="color:#50FA7B;" data-v-b04c51bd> initCachedPositions</span><span style="color:#FF79C6;" data-v-b04c51bd> =</span><span style="color:#F8F8F2;" data-v-b04c51bd> () </span><span style="color:#FF79C6;" data-v-b04c51bd>=&gt;</span><span style="color:#F8F8F2;" data-v-b04c51bd> {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> cachedPositions </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> []</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>  // 假设每个元素的高度都是固定的</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> height </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#BD93F9;" data-v-b04c51bd> 20</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  for</span><span style="color:#F8F8F2;" data-v-b04c51bd> (</span><span style="color:#FF79C6;" data-v-b04c51bd>let</span><span style="color:#F8F8F2;" data-v-b04c51bd> i </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#BD93F9;" data-v-b04c51bd> 0</span><span style="color:#F8F8F2;" data-v-b04c51bd>; i </span><span style="color:#FF79C6;" data-v-b04c51bd>&lt;</span><span style="color:#F8F8F2;" data-v-b04c51bd> allPhantomList.length; i</span><span style="color:#FF79C6;" data-v-b04c51bd>++</span><span style="color:#F8F8F2;" data-v-b04c51bd>) {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    cachedPositions[i] </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>      index</span><span style="color:#FF79C6;" data-v-b04c51bd>:</span><span style="color:#F8F8F2;" data-v-b04c51bd> i,</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>      height</span><span style="color:#FF79C6;" data-v-b04c51bd>:</span><span style="color:#F8F8F2;" data-v-b04c51bd> height,</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>      top</span><span style="color:#FF79C6;" data-v-b04c51bd>:</span><span style="color:#F8F8F2;" data-v-b04c51bd> i </span><span style="color:#FF79C6;" data-v-b04c51bd>*</span><span style="color:#F8F8F2;" data-v-b04c51bd> height,</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>      bottom</span><span style="color:#FF79C6;" data-v-b04c51bd>:</span><span style="color:#F8F8F2;" data-v-b04c51bd> (i </span><span style="color:#FF79C6;" data-v-b04c51bd>+</span><span style="color:#BD93F9;" data-v-b04c51bd> 1</span><span style="color:#F8F8F2;" data-v-b04c51bd>) </span><span style="color:#FF79C6;" data-v-b04c51bd>*</span><span style="color:#F8F8F2;" data-v-b04c51bd> height,</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>      // 偏移量</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>      dValue</span><span style="color:#FF79C6;" data-v-b04c51bd>:</span><span style="color:#BD93F9;" data-v-b04c51bd> 0</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    }</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  }</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  list </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> cachedPositions.</span><span style="color:#50FA7B;" data-v-b04c51bd>slice</span><span style="color:#F8F8F2;" data-v-b04c51bd>(</span><span style="color:#BD93F9;" data-v-b04c51bd>0</span><span style="color:#F8F8F2;" data-v-b04c51bd>, </span><span style="color:#BD93F9;" data-v-b04c51bd>20</span><span style="color:#F8F8F2;" data-v-b04c51bd>)</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>}</span></span>
<span class="line" data-v-b04c51bd></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>const</span><span style="color:#50FA7B;" data-v-b04c51bd> updateCachedPositions</span><span style="color:#FF79C6;" data-v-b04c51bd> =</span><span style="color:#F8F8F2;" data-v-b04c51bd> () </span><span style="color:#FF79C6;" data-v-b04c51bd>=&gt;</span><span style="color:#F8F8F2;" data-v-b04c51bd> {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>  // 元素列表中的循环元素</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>  // 获取真实高度</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> nodes </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> waterListContainerRef.value.childNodes</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  let</span><span style="color:#F8F8F2;" data-v-b04c51bd> start </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#BD93F9;" data-v-b04c51bd> null</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  nodes.</span><span style="color:#50FA7B;" data-v-b04c51bd>forEach</span><span style="color:#F8F8F2;" data-v-b04c51bd>(</span><span style="color:#FFB86C;font-style:italic;" data-v-b04c51bd>node</span><span style="color:#FF79C6;" data-v-b04c51bd> =&gt;</span><span style="color:#F8F8F2;" data-v-b04c51bd> {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>    // nodeType = 1  为元素，反正获取空白等文本类型</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>    if</span><span style="color:#F8F8F2;" data-v-b04c51bd> (</span><span style="color:#FF79C6;" data-v-b04c51bd>!</span><span style="color:#F8F8F2;" data-v-b04c51bd>node </span><span style="color:#FF79C6;" data-v-b04c51bd>||</span><span style="color:#F8F8F2;" data-v-b04c51bd> node.nodeType </span><span style="color:#FF79C6;" data-v-b04c51bd>!==</span><span style="color:#BD93F9;" data-v-b04c51bd> 1</span><span style="color:#F8F8F2;" data-v-b04c51bd>) {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>      return</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    }</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>    if</span><span style="color:#F8F8F2;" data-v-b04c51bd> (</span><span style="color:#FF79C6;" data-v-b04c51bd>!</span><span style="color:#F8F8F2;" data-v-b04c51bd>start) {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>      start </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> node</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    }</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>    const</span><span style="color:#F8F8F2;" data-v-b04c51bd> rect </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> node.</span><span style="color:#50FA7B;" data-v-b04c51bd>getBoundingClientRect</span><span style="color:#F8F8F2;" data-v-b04c51bd>()</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>    const</span><span style="color:#F8F8F2;" data-v-b04c51bd> { height } </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> rect</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>    const</span><span style="color:#F8F8F2;" data-v-b04c51bd> index </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> node.dataset.index</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>    // 原来旧的固定高度</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>    const</span><span style="color:#F8F8F2;" data-v-b04c51bd> oldHeight </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> cachedPositions[index].height</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>    // 和正式高度的偏移量</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>    const</span><span style="color:#F8F8F2;" data-v-b04c51bd> dValue </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> oldHeight </span><span style="color:#FF79C6;" data-v-b04c51bd>-</span><span style="color:#F8F8F2;" data-v-b04c51bd> height;</span></span>
<span class="line" data-v-b04c51bd></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>    // 存在偏移量 更新数据</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>    if</span><span style="color:#F8F8F2;" data-v-b04c51bd> (dValue) {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>      cachedPositions[index].height </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> height</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>      cachedPositions[index].bottom </span><span style="color:#FF79C6;" data-v-b04c51bd>-=</span><span style="color:#F8F8F2;" data-v-b04c51bd> dValue</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>      cachedPositions[index].dValue </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> dValue</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    }</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  })</span></span>
<span class="line" data-v-b04c51bd></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>  // 重新计算总高度</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  let</span><span style="color:#F8F8F2;" data-v-b04c51bd> startIndex </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#BD93F9;" data-v-b04c51bd> 0</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  if</span><span style="color:#F8F8F2;" data-v-b04c51bd> (start) {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>    // 当前列表的渲染元素的起始索引</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    startIndex </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#50FA7B;" data-v-b04c51bd> Number</span><span style="color:#F8F8F2;" data-v-b04c51bd>(start.dataset.index)</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  }</span></span>
<span class="line" data-v-b04c51bd></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> cachedPositionsLen </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> cachedPositions.length</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>  // 获取偏移量</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  let</span><span style="color:#F8F8F2;" data-v-b04c51bd> cumulativeDiffHeight </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> cachedPositions[startIndex].dValue</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  cachedPositions[startIndex].dValue </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#BD93F9;" data-v-b04c51bd> 0</span></span>
<span class="line" data-v-b04c51bd></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  for</span><span style="color:#F8F8F2;" data-v-b04c51bd> (</span><span style="color:#FF79C6;" data-v-b04c51bd>let</span><span style="color:#F8F8F2;" data-v-b04c51bd> i </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> startIndex </span><span style="color:#FF79C6;" data-v-b04c51bd>+</span><span style="color:#BD93F9;" data-v-b04c51bd> 1</span><span style="color:#F8F8F2;" data-v-b04c51bd>; i </span><span style="color:#FF79C6;" data-v-b04c51bd>&lt;</span><span style="color:#F8F8F2;" data-v-b04c51bd> cachedPositionsLen; i</span><span style="color:#FF79C6;" data-v-b04c51bd>++</span><span style="color:#F8F8F2;" data-v-b04c51bd>) {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>    const</span><span style="color:#F8F8F2;" data-v-b04c51bd> item </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> cachedPositions[i]</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    cachedPositions[i].top </span><span style="color:#FF79C6;" data-v-b04c51bd>-=</span><span style="color:#F8F8F2;" data-v-b04c51bd> cachedPositions[i </span><span style="color:#FF79C6;" data-v-b04c51bd>-</span><span style="color:#BD93F9;" data-v-b04c51bd> 1</span><span style="color:#F8F8F2;" data-v-b04c51bd>].bottom</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    cachedPositions[i].bottom </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> cachedPositions[i].bottom </span><span style="color:#FF79C6;" data-v-b04c51bd>-</span><span style="color:#F8F8F2;" data-v-b04c51bd> cumulativeDiffHeight</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>    if</span><span style="color:#F8F8F2;" data-v-b04c51bd> (item.dValue </span><span style="color:#FF79C6;" data-v-b04c51bd>!==</span><span style="color:#BD93F9;" data-v-b04c51bd> 0</span><span style="color:#F8F8F2;" data-v-b04c51bd>) {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>      // 偏移量下面的元素计算要累计上面的偏移量 才是正确的偏移量</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>      cumulativeDiffHeight </span><span style="color:#FF79C6;" data-v-b04c51bd>+=</span><span style="color:#F8F8F2;" data-v-b04c51bd> item.dValue</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>      item.dValue </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#BD93F9;" data-v-b04c51bd> 0</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    }</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  }</span></span>
<span class="line" data-v-b04c51bd></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> height </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> cachedPositions[cachedPositionsLen </span><span style="color:#FF79C6;" data-v-b04c51bd>-</span><span style="color:#BD93F9;" data-v-b04c51bd> 1</span><span style="color:#F8F8F2;" data-v-b04c51bd>].bottom</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>  // 更新占位高度</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  phantomHeight </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> height</span></span>
<span class="line" data-v-b04c51bd></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>}</span></span>
<span class="line" data-v-b04c51bd></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>const</span><span style="color:#50FA7B;" data-v-b04c51bd> scroll</span><span style="color:#FF79C6;" data-v-b04c51bd> =</span><span style="color:#F8F8F2;" data-v-b04c51bd> (</span><span style="color:#FFB86C;font-style:italic;" data-v-b04c51bd>e</span><span style="color:#F8F8F2;" data-v-b04c51bd>) </span><span style="color:#FF79C6;" data-v-b04c51bd>=&gt;</span><span style="color:#F8F8F2;" data-v-b04c51bd> {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> scrollTop </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> e.target.scrollTop </span><span style="color:#FF79C6;" data-v-b04c51bd>||</span><span style="color:#BD93F9;" data-v-b04c51bd> 0</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>  // 根据滚动高度获取对应的起始索引</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> startIndex </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#50FA7B;" data-v-b04c51bd> getStartIndex</span><span style="color:#F8F8F2;" data-v-b04c51bd>(scrollTop)</span></span>
<span class="line" data-v-b04c51bd></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  if</span><span style="color:#F8F8F2;" data-v-b04c51bd>(startIndex </span><span style="color:#FF79C6;" data-v-b04c51bd>===</span><span style="color:#F8F8F2;" data-v-b04c51bd> originStartIndex) </span><span style="color:#FF79C6;" data-v-b04c51bd>return</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  originStartIndex </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> startIndex</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  startIndex </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> startIndex</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> endIndex </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> Math.</span><span style="color:#50FA7B;" data-v-b04c51bd>min</span><span style="color:#F8F8F2;" data-v-b04c51bd>(startIndex </span><span style="color:#FF79C6;" data-v-b04c51bd>+</span><span style="color:#BD93F9;" data-v-b04c51bd> 20</span><span style="color:#F8F8F2;" data-v-b04c51bd>, cachedPositions.length </span><span style="color:#FF79C6;" data-v-b04c51bd>+</span><span style="color:#BD93F9;" data-v-b04c51bd> 1</span><span style="color:#F8F8F2;" data-v-b04c51bd>)</span></span>
<span class="line" data-v-b04c51bd><span style="color:#6272A4;" data-v-b04c51bd>  // startIndex -5 必须 不如滚动到最下面的时候，会造成滚动抖动</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> index </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> Math.</span><span style="color:#50FA7B;" data-v-b04c51bd>max</span><span style="color:#F8F8F2;" data-v-b04c51bd>(startIndex </span><span style="color:#FF79C6;" data-v-b04c51bd>-</span><span style="color:#BD93F9;" data-v-b04c51bd> 5</span><span style="color:#F8F8F2;" data-v-b04c51bd>,</span><span style="color:#BD93F9;" data-v-b04c51bd>0</span><span style="color:#F8F8F2;" data-v-b04c51bd>)</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  list </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> cachedPositions.</span><span style="color:#50FA7B;" data-v-b04c51bd>slice</span><span style="color:#F8F8F2;" data-v-b04c51bd>(index, endIndex)</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  startOffset </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> index </span><span style="color:#FF79C6;" data-v-b04c51bd>&gt;</span><span style="color:#BD93F9;" data-v-b04c51bd> 1</span><span style="color:#FF79C6;" data-v-b04c51bd> ?</span><span style="color:#F8F8F2;" data-v-b04c51bd> cachedPositions[index </span><span style="color:#FF79C6;" data-v-b04c51bd>-</span><span style="color:#BD93F9;" data-v-b04c51bd>1</span><span style="color:#F8F8F2;" data-v-b04c51bd>].bottom </span><span style="color:#FF79C6;" data-v-b04c51bd>:</span><span style="color:#BD93F9;" data-v-b04c51bd> 0</span></span>
<span class="line" data-v-b04c51bd></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>}</span></span>
<span class="line" data-v-b04c51bd></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>const</span><span style="color:#50FA7B;" data-v-b04c51bd> getStartIndex</span><span style="color:#FF79C6;" data-v-b04c51bd> =</span><span style="color:#F8F8F2;" data-v-b04c51bd> (</span><span style="color:#FFB86C;font-style:italic;" data-v-b04c51bd>value</span><span style="color:#F8F8F2;" data-v-b04c51bd>) </span><span style="color:#FF79C6;" data-v-b04c51bd>=&gt;</span><span style="color:#F8F8F2;" data-v-b04c51bd> {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> list </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> cachedPositions</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  let</span><span style="color:#F8F8F2;" data-v-b04c51bd> left </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#BD93F9;" data-v-b04c51bd> 0</span><span style="color:#F8F8F2;" data-v-b04c51bd>, right </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> list.length </span><span style="color:#FF79C6;" data-v-b04c51bd>-</span><span style="color:#BD93F9;" data-v-b04c51bd> 1</span><span style="color:#F8F8F2;" data-v-b04c51bd>, mid </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#FF79C6;" data-v-b04c51bd> -</span><span style="color:#BD93F9;" data-v-b04c51bd>1</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  while</span><span style="color:#F8F8F2;" data-v-b04c51bd> (left </span><span style="color:#FF79C6;" data-v-b04c51bd>&lt;</span><span style="color:#F8F8F2;" data-v-b04c51bd> right) {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    mid </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> Math.</span><span style="color:#50FA7B;" data-v-b04c51bd>floor</span><span style="color:#F8F8F2;" data-v-b04c51bd>((left </span><span style="color:#FF79C6;" data-v-b04c51bd>+</span><span style="color:#F8F8F2;" data-v-b04c51bd> right) </span><span style="color:#FF79C6;" data-v-b04c51bd>/</span><span style="color:#BD93F9;" data-v-b04c51bd> 2</span><span style="color:#F8F8F2;" data-v-b04c51bd>)</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>    const</span><span style="color:#F8F8F2;" data-v-b04c51bd> midValue </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> list[mid].bottom</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>    if</span><span style="color:#F8F8F2;" data-v-b04c51bd> (midValue </span><span style="color:#FF79C6;" data-v-b04c51bd>==</span><span style="color:#F8F8F2;" data-v-b04c51bd> value) {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>      return</span><span style="color:#F8F8F2;" data-v-b04c51bd> mid</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    } </span><span style="color:#FF79C6;" data-v-b04c51bd>else</span><span style="color:#FF79C6;" data-v-b04c51bd> if</span><span style="color:#F8F8F2;" data-v-b04c51bd> (midValue </span><span style="color:#FF79C6;" data-v-b04c51bd>&lt;</span><span style="color:#F8F8F2;" data-v-b04c51bd> value) {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>      left </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> mid </span><span style="color:#FF79C6;" data-v-b04c51bd>+</span><span style="color:#BD93F9;" data-v-b04c51bd> 1</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    } </span><span style="color:#FF79C6;" data-v-b04c51bd>else</span><span style="color:#FF79C6;" data-v-b04c51bd> if</span><span style="color:#F8F8F2;" data-v-b04c51bd> (midValue </span><span style="color:#FF79C6;" data-v-b04c51bd>&gt;</span><span style="color:#F8F8F2;" data-v-b04c51bd> value) {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>      right </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> mid </span><span style="color:#FF79C6;" data-v-b04c51bd>-</span><span style="color:#BD93F9;" data-v-b04c51bd> 1</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    }</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  }</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  const</span><span style="color:#F8F8F2;" data-v-b04c51bd> targetItem </span><span style="color:#FF79C6;" data-v-b04c51bd>=</span><span style="color:#F8F8F2;" data-v-b04c51bd> list[mid]</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  if</span><span style="color:#F8F8F2;" data-v-b04c51bd> (targetItem </span><span style="color:#FF79C6;" data-v-b04c51bd>&amp;&amp;</span><span style="color:#F8F8F2;" data-v-b04c51bd> targetItem.bottom </span><span style="color:#FF79C6;" data-v-b04c51bd>&lt;</span><span style="color:#F8F8F2;" data-v-b04c51bd> value) {</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>    mid </span><span style="color:#FF79C6;" data-v-b04c51bd>+=</span><span style="color:#BD93F9;" data-v-b04c51bd> 1</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>  }</span></span>
<span class="line" data-v-b04c51bd><span style="color:#FF79C6;" data-v-b04c51bd>  return</span><span style="color:#F8F8F2;" data-v-b04c51bd> mid</span></span>
<span class="line" data-v-b04c51bd><span style="color:#F8F8F2;" data-v-b04c51bd>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-b04c51bd><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div><div class="line-number" data-v-b04c51bd></div></div></div><h1 id="参考" tabindex="-1" data-v-b04c51bd><a class="header-anchor" href="#参考" data-v-b04c51bd><span data-v-b04c51bd>参考</span></a></h1><ul data-v-b04c51bd><li data-v-b04c51bd><a href="https://codesandbox.io/p/sandbox/a-v-list-has-dynamic-inner-height-yh0r7?file=%2Fsrc%2FVList.tsx%3A129%2C31" target="_blank" rel="noopener noreferrer" data-v-b04c51bd>https://codesandbox.io/p/sandbox/a-v-list-has-dynamic-inner-height-yh0r7?file=%2Fsrc%2FVList.tsx%3A129%2C31</a></li></ul>`,4))])}const J=O(j,[["render",Z],["__scopeId","data-v-b04c51bd"],["__file","virtual-list.html.vue"]]),$=JSON.parse('{"path":"/javascript/virtual-list.html","title":"虚拟列表","lang":"en-US","frontmatter":{"title":"虚拟列表","date":"2025-02-20T00:00:00.000Z","category":["JavaScript"],"description":"固定列表 {{ite.name}} 设置2个子元素，一个子元素是列表，一个子元素是占位元素 占位元素的高度是所有列表元素的总高度 列表元素的高度是固定的，所以列表元素的总高度也是固定的 当滚动时，根据滚动条的位置，计算出当前应该显示的列表元素的起始索引和结束索引 监听滚动事件，获取滚动高度和列表元素 不固定列表 No. {{ ite.index }} ...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/javascript/virtual-list.html"}],["meta",{"property":"og:title","content":"虚拟列表"}],["meta",{"property":"og:description","content":"固定列表 {{ite.name}} 设置2个子元素，一个子元素是列表，一个子元素是占位元素 占位元素的高度是所有列表元素的总高度 列表元素的高度是固定的，所以列表元素的总高度也是固定的 当滚动时，根据滚动条的位置，计算出当前应该显示的列表元素的起始索引和结束索引 监听滚动事件，获取滚动高度和列表元素 不固定列表 No. {{ ite.index }} ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-04-23T08:18:43.000Z"}],["meta",{"property":"article:published_time","content":"2025-02-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-23T08:18:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"虚拟列表\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-23T08:18:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"git":{"createdTime":1740723109000,"updatedTime":1745396323000,"contributors":[{"name":"luxiag","username":"luxiag","email":"luxiag@qq.com","commits":4,"url":"https://github.com/luxiag"}]},"readingTime":{"minutes":4.71,"words":1413},"filePathRelative":"javascript/virtual-list.md","localizedDate":"February 20, 2025","excerpt":"\\n<div class=\\"list\\" ref=\\"fixedListRef\\" @scroll=\\"fixedScrollEvent\\">\\n  <div class=\\"list-containter\\" :style=\\"{transform: `translate3d(0,${fixedModel.startOffset}px,0)`}\\">\\n    <div class=\\"fixed-list-item\\" v-for=\\"ite in fixedModel.list\\" :key=\\"ite.id\\">\\n     {{ite.name}}\\n    </div>\\n  </div>\\n  <div class=\\"list-place\\"></div>\\n</div>","autoDesc":true}');export{J as comp,$ as data};
