import{_ as n,e as l,g as a,o as e}from"./app-Dt3FNJM0.js";const p="/blog/assets/1096161745063647789-ylZ3g2q3.png",o="/blog/assets/1096161745064775701-BvCZAhqt.png",t={};function i(c,s){return e(),l("div",null,s[0]||(s[0]=[a('<p>过滤器（Filter） 是一种用于在请求处理管道中插入自定义逻辑的机制。过滤器通常用于执行一些通用的任务，如日志记录、身份验证、授权、异常处理、数据校验等。在ASP.NET Core中，过滤器是中间件（Middleware）的一种特殊形式，它们可以更细粒度地控制请求的处理流程。</p><div class="hint-container info"><p class="hint-container-title">请求处理管道</p><p>请求处理管道（Request Processing Pipeline） 是一个由一系列中间件（Middleware）组成的处理流程，用于处理每个进入应用程序的HTTP请求。请求处理管道定义了请求从到达服务器到返回响应的整个生命周期中，将依次经过哪些处理步骤。</p></div><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Request ↓ [Authorization Filter] ↓ [Resource Filter] ↓ [Model Binding] ↓ [Action Filter] ↓ [Action Execution] ↓ [Result Filter] ↓ [Exception Filter (on any error)] ↓ Response</p><h2 id="作用域" tabindex="-1"><a class="header-anchor" href="#作用域"><span>作用域</span></a></h2><table><thead><tr><th style="text-align:center;">作用域</th><th style="text-align:center;">说明</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:center;">全局作用域</td><td style="text-align:center;">应用于所有 Controller/Action</td><td style="text-align:center;">在 Startup 或 Program.cs 注册</td></tr><tr><td style="text-align:center;">控制器作用域</td><td style="text-align:center;">只作用于特定 Controller</td><td style="text-align:center;"><code>[ServiceFilter(typeof(...))]</code></td></tr><tr><td style="text-align:center;">方法作用域</td><td style="text-align:center;">只作用于某个 Action 方法</td><td style="text-align:center;">直接加在方法上 <code>[TypeFilter(...)]</code></td></tr></tbody></table><p>+---------------------+ | 全局作用域 | ---&gt; 所有请求 +---------------------+ ↓ +---------------------+ | 控制器作用域 | ---&gt; 特定 Controller 请求 +---------------------+ ↓ +---------------------+ | 方法作用域 | ---&gt; 特定 Action 请求 +---------------------+</p><p><strong>执行顺序</strong></p><figure><img src="'+o+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="注册" tabindex="-1"><a class="header-anchor" href="#注册"><span>注册</span></a></h2><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Mvc</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Filters</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Extensions</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Logging</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> System</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Diagnostics</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> TimingActionFilter</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IActionFilter</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> ILogger</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">TimingActionFilter</span><span style="color:#F8F8F2;">&gt; _logger;</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#8BE9FD;font-style:italic;"> Stopwatch</span><span style="color:#F8F8F2;"> _stopwatch;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> TimingActionFilter</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ILogger</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">TimingActionFilter</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FFB86C;font-style:italic;">logger</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> logger;</span></span>
<span class="line"><span style="color:#F8F8F2;">        _stopwatch </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> Stopwatch</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> OnActionExecuting</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ActionExecutingContext</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _stopwatch.</span><span style="color:#50FA7B;">Restart</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger.</span><span style="color:#50FA7B;">LogInformation</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Action 开始执行...</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> OnActionExecuted</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ActionExecutedContext</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _stopwatch.</span><span style="color:#50FA7B;">Stop</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger.</span><span style="color:#50FA7B;">LogInformation</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">$&quot;</span><span style="color:#F1FA8C;">Action 执行完成，用时：</span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">_stopwatch</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">ElapsedMilliseconds</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;"> ms</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="全局注册" tabindex="-1"><a class="header-anchor" href="#全局注册"><span>全局注册</span></a></h3><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> builder </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> WebApplication.</span><span style="color:#50FA7B;">CreateBuilder</span><span style="color:#F8F8F2;">(args);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddControllers</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#6272A4;">    // 全局作用域注册 Filter（适用于所有 Controller）</span></span>
<span class="line"><span style="color:#F8F8F2;">    options.Filters.</span><span style="color:#50FA7B;">Add</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">TimingActionFilter</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 注册到 DI 容器</span></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddScoped</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">TimingActionFilter</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> builder.</span><span style="color:#50FA7B;">Build</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">UseRouting</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">MapControllers</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">Run</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="控制器级注册" tabindex="-1"><a class="header-anchor" href="#控制器级注册"><span>控制器级注册</span></a></h3><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Mvc</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">ApiController</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[controller]</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">ServiceFilter</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">TimingActionFilter</span><span style="color:#F8F8F2;">))] </span><span style="color:#6272A4;">// 控制器作用域</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> UsersController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetUsers</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;">[] { </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Alice</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Bob</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ServiceFilter</strong>是如何创建过滤器实例？</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> interface</span><span style="color:#8BE9FD;font-style:italic;"> IFilterFactory</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IFilterMetadata</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#6272A4;">    // 过滤器实例是否可跨请求重用</span></span>
<span class="line"><span style="color:#FF79C6;">    bool</span><span style="color:#F8F8F2;"> IsReusable { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 通过 IServiceProvider 创建指定过滤器类型的实例</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">    IFilterMetadata</span><span style="color:#50FA7B;"> CreateInstance</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IServiceProvider</span><span style="color:#FFB86C;font-style:italic;"> serviceProvider</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> ServiceFilterAttribute</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">Attribute</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">IFilterFactory</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">IFilterMetadata</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">IOrderedFilter</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#6272A4;">    // type 就是要创建的过滤器的类型</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> ServiceFilterAttribute</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">Type</span><span style="color:#FFB86C;font-style:italic;"> type</span><span style="color:#F8F8F2;">) </span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        ServiceType </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> type </span><span style="color:#FF79C6;">??</span><span style="color:#FF79C6;"> throw</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> ArgumentNullException</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">nameof</span><span style="color:#F8F8F2;">(type)); </span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> Order { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 获取过滤器的类型，也就是构造函数中传进来的</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> Type</span><span style="color:#F8F8F2;"> ServiceType { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 过滤器实例是否可跨请求重用，默认 false</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> bool</span><span style="color:#F8F8F2;"> IsReusable { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 通过 IServiceProvider.GetRequiredService 创建指定过滤器类型的实例</span></span>
<span class="line"><span style="color:#6272A4;">    // 所以要求该过滤器和构造函数参数要在DI容器中注册</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IFilterMetadata</span><span style="color:#50FA7B;"> CreateInstance</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IServiceProvider</span><span style="color:#FFB86C;font-style:italic;"> serviceProvider</span><span style="color:#F8F8F2;">) </span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> filter </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#8BE9FD;font-style:italic;">IFilterMetadata</span><span style="color:#F8F8F2;">)serviceProvider.</span><span style="color:#50FA7B;">GetRequiredService</span><span style="color:#F8F8F2;">(ServiceType);</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (filter </span><span style="color:#FF79C6;">is</span><span style="color:#8BE9FD;font-style:italic;"> IFilterFactory</span><span style="color:#F8F8F2;"> filterFactory)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#6272A4;">            // 展开 IFilterFactory</span></span>
<span class="line"><span style="color:#F8F8F2;">            filter </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> filterFactory.</span><span style="color:#50FA7B;">CreateInstance</span><span style="color:#F8F8F2;">(serviceProvider);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;"> filter;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方法级注册" tabindex="-1"><a class="header-anchor" href="#方法级注册"><span>方法级注册</span></a></h3><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Mvc</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">ApiController</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[controller]</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> ProductsController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">ServiceFilter</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">TimingActionFilter</span><span style="color:#F8F8F2;">))] </span><span style="color:#6272A4;">// 方法作用域</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetProducts</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;">[] { </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Apple</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Banana</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="typefilterattribute" tabindex="-1"><a class="header-anchor" href="#typefilterattribute"><span>TypeFilterAttribute</span></a></h3><p>TypeFilter 让你可以通过指定 过滤器类型（Type） 和 构造参数，由框架自动通过 DI 创建过滤器实例。</p><ul><li><p>过滤器有依赖注入 + 需要传递构造参数时</p></li><li><p>不想把过滤器预先注册到 Program.cs 的 DI 容器中</p></li></ul><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> CustomMessageFilter</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IActionFilter</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> _message;</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> ILogger</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">CustomMessageFilter</span><span style="color:#F8F8F2;">&gt; _logger;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> CustomMessageFilter</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> message</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">ILogger</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">CustomMessageFilter</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FFB86C;font-style:italic;">logger</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _message </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> message;</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> logger;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> OnActionExecuting</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ActionExecutingContext</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger.</span><span style="color:#50FA7B;">LogInformation</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">开始：{Message}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, _message);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> OnActionExecuted</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ActionExecutedContext</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger.</span><span style="color:#50FA7B;">LogInformation</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">结束：{Message}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, _message);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">TypeFilter</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">CustomMessageFilter</span><span style="color:#F8F8F2;">), Arguments </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#FF79C6;"> object</span><span style="color:#F8F8F2;">[] { </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">用户访问 GetAll 方法</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> })]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetAll</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">数据列表</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>console</code></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#50FA7B;">info:</span><span style="color:#F1FA8C;"> CustomMessageFilter[0]</span></span>
<span class="line"><span style="color:#50FA7B;">      开始：用户访问</span><span style="color:#F1FA8C;"> GetAll</span><span style="color:#F1FA8C;"> 方法</span></span>
<span class="line"><span style="color:#50FA7B;">info:</span><span style="color:#F1FA8C;"> CustomMessageFilter[0]</span></span>
<span class="line"><span style="color:#50FA7B;">      结束：用户访问</span><span style="color:#F1FA8C;"> GetAll</span><span style="color:#F1FA8C;"> 方法</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TypeFilterAttribute</strong></p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> TypeFilterAttribute</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">Attribute</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">IFilterFactory</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">IFilterMetadata</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">IOrderedFilter</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#8BE9FD;font-style:italic;"> ObjectFactory</span><span style="color:#F8F8F2;"> _factory;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // type 就是要创建的过滤器的类型</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> TypeFilterAttribute</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">Type</span><span style="color:#FFB86C;font-style:italic;"> type</span><span style="color:#F8F8F2;">) </span></span>
<span class="line"><span style="color:#F8F8F2;">    { </span></span>
<span class="line"><span style="color:#F8F8F2;">        ImplementationType </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> type </span><span style="color:#FF79C6;">??</span><span style="color:#FF79C6;"> throw</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> ArgumentNullException</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">nameof</span><span style="color:#F8F8F2;">(type));</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 要传递给过滤器构造函数的非DI容器提供的参数</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> object</span><span style="color:#F8F8F2;">[] Arguments { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 获取过滤器的类型，也就是构造函数中传进来的</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> Type</span><span style="color:#F8F8F2;"> ImplementationType { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> Order { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> bool</span><span style="color:#F8F8F2;"> IsReusable { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 通过 ObjectFactory 创建指定过滤器类型的实例</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IFilterMetadata</span><span style="color:#50FA7B;"> CreateInstance</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IServiceProvider</span><span style="color:#FFB86C;font-style:italic;"> serviceProvider</span><span style="color:#F8F8F2;">) </span></span>
<span class="line"><span style="color:#F8F8F2;">    { </span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (_factory </span><span style="color:#FF79C6;">==</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#FF79C6;">            var</span><span style="color:#F8F8F2;"> argumentTypes </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Arguments</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">Select</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">a</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> a.</span><span style="color:#50FA7B;">GetType</span><span style="color:#F8F8F2;">())</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">ToArray</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">            _factory </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> ActivatorUtilities.</span><span style="color:#50FA7B;">CreateFactory</span><span style="color:#F8F8F2;">(ImplementationType, argumentTypes </span><span style="color:#FF79C6;">??</span><span style="color:#F8F8F2;"> Type.EmptyTypes);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> filter </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#8BE9FD;font-style:italic;">IFilterMetadata</span><span style="color:#F8F8F2;">)</span><span style="color:#50FA7B;">_factory</span><span style="color:#F8F8F2;">(serviceProvider, Arguments);</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (filter </span><span style="color:#FF79C6;">is</span><span style="color:#8BE9FD;font-style:italic;"> IFilterFactory</span><span style="color:#F8F8F2;"> filterFactory)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#6272A4;">            // 展开 IFilterFactory</span></span>
<span class="line"><span style="color:#F8F8F2;">            filter </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> filterFactory.</span><span style="color:#50FA7B;">CreateInstance</span><span style="color:#F8F8F2;">(serviceProvider);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;"> filter;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="过滤器种类" tabindex="-1"><a class="header-anchor" href="#过滤器种类"><span>过滤器种类</span></a></h2><table><thead><tr><th>类型</th><th>接口</th><th>说明</th></tr></thead><tbody><tr><td>Authorization</td><td>IAuthorizationFilter</td><td>请求开始前，进行授权验证（最早执行）</td></tr><tr><td>Resource</td><td>IResourceFilter</td><td>请求前后，能缓存或短路后续过滤器</td></tr><tr><td>Action</td><td>IActionFilter</td><td>调用 Controller Action 前后执行</td></tr><tr><td>Exception</td><td>IExceptionFilter</td><td>捕获处理 Action 中未捕捉的异常</td></tr><tr><td>Result</td><td>IResultFilter</td><td>Action 执行完后，处理 IActionResult 的生成</td></tr></tbody></table><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#50FA7B;">Authorization</span><span style="color:#F8F8F2;"> -</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F1FA8C;"> Resource</span><span style="color:#F8F8F2;"> -</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F1FA8C;"> Action</span><span style="color:#F8F8F2;"> -</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F1FA8C;"> Result</span></span>
<span class="line"><span style="color:#50FA7B;">                             ↑</span></span>
<span class="line"><span style="color:#50FA7B;">                         Exception（拦截</span><span style="color:#F1FA8C;"> Action/Result</span><span style="color:#F1FA8C;"> 中的异常）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// Program.cs</span></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> builder </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> WebApplication.</span><span style="color:#50FA7B;">CreateBuilder</span><span style="color:#F8F8F2;">(args);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddControllers</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    options.Filters.</span><span style="color:#50FA7B;">Add</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">GlobalExceptionFilter</span><span style="color:#F8F8F2;">&gt;(); </span><span style="color:#6272A4;">// 注册全局异常处理</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddScoped</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">GlobalExceptionFilter</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddScoped</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">LoggingActionFilter</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddScoped</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">AuthFilter</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddScoped</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">CustomResourceFilter</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddScoped</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">CustomResultFilter</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> builder.</span><span style="color:#50FA7B;">Build</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">UseRouting</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">UseEndpoints</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">endpoints</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    endpoints.</span><span style="color:#50FA7B;">MapControllers</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">Run</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// Filters/LoggingActionFilter.cs</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Mvc</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Filters</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Extensions</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Logging</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> LoggingActionFilter</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IActionFilter</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> ILogger</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">LoggingActionFilter</span><span style="color:#F8F8F2;">&gt; _logger;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> LoggingActionFilter</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ILogger</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">LoggingActionFilter</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FFB86C;font-style:italic;">logger</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> logger;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> OnActionExecuting</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ActionExecutingContext</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger.</span><span style="color:#50FA7B;">LogInformation</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">[ActionFilter] - Before executing action</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> OnActionExecuted</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ActionExecutedContext</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger.</span><span style="color:#50FA7B;">LogInformation</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">[ActionFilter] - After executing action</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// Filters/GlobalExceptionFilter.cs</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Mvc</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Mvc</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Filters</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Extensions</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Logging</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> GlobalExceptionFilter</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IExceptionFilter</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> ILogger</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">GlobalExceptionFilter</span><span style="color:#F8F8F2;">&gt; _logger;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> GlobalExceptionFilter</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ILogger</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">GlobalExceptionFilter</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FFB86C;font-style:italic;">logger</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> logger;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> OnException</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ExceptionContext</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger.</span><span style="color:#50FA7B;">LogError</span><span style="color:#F8F8F2;">(context.Exception, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">[ExceptionFilter] - Unhandled exception caught</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        context.Result </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> JsonResult</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            Message </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">Oops! Something went wrong.</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">        })</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            StatusCode </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 500</span></span>
<span class="line"><span style="color:#F8F8F2;">        };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        context.ExceptionHandled </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// Filters/AuthFilter.cs</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Mvc</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Mvc</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Filters</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> AuthFilter</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IAuthorizationFilter</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> OnAuthorization</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">AuthorizationFilterContext</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> authorized </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> false</span><span style="color:#F8F8F2;">; </span><span style="color:#6272A4;">// 模拟权限校验失败</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">authorized)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            context.Result </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> UnauthorizedResult</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// Filters/CustomResourceFilter.cs</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Mvc</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Filters</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Extensions</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Logging</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> CustomResourceFilter</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IResourceFilter</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> ILogger</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">CustomResourceFilter</span><span style="color:#F8F8F2;">&gt; _logger;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> CustomResourceFilter</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ILogger</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">CustomResourceFilter</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FFB86C;font-style:italic;">logger</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> logger;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> OnResourceExecuting</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ResourceExecutingContext</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger.</span><span style="color:#50FA7B;">LogInformation</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">[ResourceFilter] - Before resource execution</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> OnResourceExecuted</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ResourceExecutedContext</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger.</span><span style="color:#50FA7B;">LogInformation</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">[ResourceFilter] - After resource execution</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// Filters/CustomResultFilter.cs</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Mvc</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Filters</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Extensions</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Logging</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> CustomResultFilter</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IResultFilter</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> ILogger</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">CustomResultFilter</span><span style="color:#F8F8F2;">&gt; _logger;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> CustomResultFilter</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ILogger</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">CustomResultFilter</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FFB86C;font-style:italic;">logger</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> logger;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> OnResultExecuting</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ResultExecutingContext</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger.</span><span style="color:#50FA7B;">LogInformation</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">[ResultFilter] - Before result execution</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> OnResultExecuted</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ResultExecutedContext</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _logger.</span><span style="color:#50FA7B;">LogInformation</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">[ResultFilter] - After result execution</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// Controllers/TestController.cs</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Mvc</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">ApiController</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[controller]</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> TestController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">success</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">ServiceFilter</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">LoggingActionFilter</span><span style="color:#F8F8F2;">))]</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">ServiceFilter</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">CustomResourceFilter</span><span style="color:#F8F8F2;">))]</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">ServiceFilter</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">CustomResultFilter</span><span style="color:#F8F8F2;">))]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> Success</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Success!</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">error</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> Error</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#FF79C6;"> throw</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> Exception</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Something bad happened</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">auth</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">ServiceFilter</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">AuthFilter</span><span style="color:#F8F8F2;">))]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> AuthTest</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Authorized!</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32)]))}const r=n(t,[["render",i],["__file","filters.html.vue"]]),y=JSON.parse('{"path":"/dotnet/filters.html","title":"过滤器 Filters","lang":"en-US","frontmatter":{"title":"过滤器 Filters","category":["DotNet"],"date":"2025-04-19T00:00:00.000Z","description":"过滤器（Filter） 是一种用于在请求处理管道中插入自定义逻辑的机制。过滤器通常用于执行一些通用的任务，如日志记录、身份验证、授权、异常处理、数据校验等。在ASP.NET Core中，过滤器是中间件（Middleware）的一种特殊形式，它们可以更细粒度地控制请求的处理流程。 请求处理管道 请求处理管道（Request Processing Pipe...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/dotnet/filters.html"}],["meta",{"property":"og:title","content":"过滤器 Filters"}],["meta",{"property":"og:description","content":"过滤器（Filter） 是一种用于在请求处理管道中插入自定义逻辑的机制。过滤器通常用于执行一些通用的任务，如日志记录、身份验证、授权、异常处理、数据校验等。在ASP.NET Core中，过滤器是中间件（Middleware）的一种特殊形式，它们可以更细粒度地控制请求的处理流程。 请求处理管道 请求处理管道（Request Processing Pipe..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-04-23T08:18:43.000Z"}],["meta",{"property":"article:published_time","content":"2025-04-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-23T08:18:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"过滤器 Filters\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-04-19T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-23T08:18:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"git":{"createdTime":1745396323000,"updatedTime":1745396323000,"contributors":[{"name":"luxiag","username":"luxiag","email":"luxiag@qq.com","commits":1,"url":"https://github.com/luxiag"}]},"readingTime":{"minutes":4.68,"words":1405},"filePathRelative":"dotnet/filters.md","localizedDate":"April 19, 2025","excerpt":"<p>过滤器（Filter） 是一种用于在请求处理管道中插入自定义逻辑的机制。过滤器通常用于执行一些通用的任务，如日志记录、身份验证、授权、异常处理、数据校验等。在ASP.NET Core中，过滤器是中间件（Middleware）的一种特殊形式，它们可以更细粒度地控制请求的处理流程。</p>","autoDesc":true}');export{r as comp,y as data};
