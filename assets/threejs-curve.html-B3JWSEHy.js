import{z as Ua,e as v,f as Ja,Q as z,aI as $a,n as ba,O as ma,u as ga,s as fa,aJ as B,aK as A,q as ya,aL as _a,M as l,aM as la,x as Q,aN as wa,aO as aa,b as Ka,D as as,$ as ss,aP as ts,aQ as ns,aF as es,a5 as Ca,a3 as Ea,aH as ca,K as os,F as ls,aR as cs,E as is,l as rs,P as Sa,S as Aa,p as Pa,A as Ma,az as Ba,V as Ta,aS as Da,W as Ia,T as ps,C as ds,ab as vs,a8 as Fs}from"./three.module-DElcEsb7.js";import{O as ys}from"./OrbitControls-COOjmuLA.js";import{C as hs,a as us}from"./CSS2DRenderer-C6955bCF.js";import{S as ms}from"./stats.module--VATS4Kh.js";import{_ as fs,i as ia,l as Ha,c as ws,a as ja,d as Ra,b as bs,o as gs}from"./app-xakek6kx.js";const Z=new Ua,P=new v,k=new v,m=new z,za={X:new v(1,0,0),Y:new v(0,1,0),Z:new v(0,0,1)},ha={type:"change"},Oa={type:"mouseDown",mode:null},La={type:"mouseUp",mode:null},Qa={type:"objectChange"};class ka extends Ja{constructor(t,a=null){super(void 0,a);const n=new As(this);this._root=n;const e=new Ps;this._gizmo=e,n.add(e);const c=new Ms;this._plane=c,n.add(c);const s=this;function o(f,T){let H=T;Object.defineProperty(s,f,{get:function(){return H!==void 0?H:T},set:function(I){H!==I&&(H=I,c[f]=I,e[f]=I,s.dispatchEvent({type:f+"-changed",value:I}),s.dispatchEvent(ha))}}),s[f]=T,c[f]=T,e[f]=T}o("camera",t),o("object",void 0),o("enabled",!0),o("axis",null),o("mode","translate"),o("translationSnap",null),o("rotationSnap",null),o("scaleSnap",null),o("space","world"),o("size",1),o("dragging",!1),o("showX",!0),o("showY",!0),o("showZ",!0);const d=new v,p=new v,b=new z,g=new z,x=new v,_=new z,h=new v,r=new v,F=new v,E=0,C=new v;o("worldPosition",d),o("worldPositionStart",p),o("worldQuaternion",b),o("worldQuaternionStart",g),o("cameraPosition",x),o("cameraQuaternion",_),o("pointStart",h),o("pointEnd",r),o("rotationAxis",F),o("rotationAngle",E),o("eye",C),this._offset=new v,this._startNorm=new v,this._endNorm=new v,this._cameraScale=new v,this._parentPosition=new v,this._parentQuaternion=new z,this._parentQuaternionInv=new z,this._parentScale=new v,this._worldScaleStart=new v,this._worldQuaternionInv=new z,this._worldScale=new v,this._positionStart=new v,this._quaternionStart=new z,this._scaleStart=new v,this._getPointer=xs.bind(this),this._onPointerDown=Cs.bind(this),this._onPointerHover=_s.bind(this),this._onPointerMove=Es.bind(this),this._onPointerUp=Ss.bind(this),a!==null&&this.connect()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="auto"}getHelper(){return this._root}pointerHover(t){if(this.object===void 0||this.dragging===!0)return;t!==null&&Z.setFromCamera(t,this.camera);const a=ua(this._gizmo.picker[this.mode],Z);a?this.axis=a.object.name:this.axis=null}pointerDown(t){if(!(this.object===void 0||this.dragging===!0||t!=null&&t.button!==0)&&this.axis!==null){t!==null&&Z.setFromCamera(t,this.camera);const a=ua(this._plane,Z,!0);a&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(a.point).sub(this.worldPositionStart)),this.dragging=!0,Oa.mode=this.mode,this.dispatchEvent(Oa)}}pointerMove(t){const a=this.axis,n=this.mode,e=this.object;let c=this.space;if(n==="scale"?c="local":(a==="E"||a==="XYZE"||a==="XYZ")&&(c="world"),e===void 0||a===null||this.dragging===!1||t!==null&&t.button!==-1)return;t!==null&&Z.setFromCamera(t,this.camera);const s=ua(this._plane,Z,!0);if(s){if(this.pointEnd.copy(s.point).sub(this.worldPositionStart),n==="translate")this._offset.copy(this.pointEnd).sub(this.pointStart),c==="local"&&a!=="XYZ"&&this._offset.applyQuaternion(this._worldQuaternionInv),a.indexOf("X")===-1&&(this._offset.x=0),a.indexOf("Y")===-1&&(this._offset.y=0),a.indexOf("Z")===-1&&(this._offset.z=0),c==="local"&&a!=="XYZ"?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),e.position.copy(this._offset).add(this._positionStart),this.translationSnap&&(c==="local"&&(e.position.applyQuaternion(m.copy(this._quaternionStart).invert()),a.search("X")!==-1&&(e.position.x=Math.round(e.position.x/this.translationSnap)*this.translationSnap),a.search("Y")!==-1&&(e.position.y=Math.round(e.position.y/this.translationSnap)*this.translationSnap),a.search("Z")!==-1&&(e.position.z=Math.round(e.position.z/this.translationSnap)*this.translationSnap),e.position.applyQuaternion(this._quaternionStart)),c==="world"&&(e.parent&&e.position.add(P.setFromMatrixPosition(e.parent.matrixWorld)),a.search("X")!==-1&&(e.position.x=Math.round(e.position.x/this.translationSnap)*this.translationSnap),a.search("Y")!==-1&&(e.position.y=Math.round(e.position.y/this.translationSnap)*this.translationSnap),a.search("Z")!==-1&&(e.position.z=Math.round(e.position.z/this.translationSnap)*this.translationSnap),e.parent&&e.position.sub(P.setFromMatrixPosition(e.parent.matrixWorld))));else if(n==="scale"){if(a.search("XYZ")!==-1){let o=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(o*=-1),k.set(o,o,o)}else P.copy(this.pointStart),k.copy(this.pointEnd),P.applyQuaternion(this._worldQuaternionInv),k.applyQuaternion(this._worldQuaternionInv),k.divide(P),a.search("X")===-1&&(k.x=1),a.search("Y")===-1&&(k.y=1),a.search("Z")===-1&&(k.z=1);e.scale.copy(this._scaleStart).multiply(k),this.scaleSnap&&(a.search("X")!==-1&&(e.scale.x=Math.round(e.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),a.search("Y")!==-1&&(e.scale.y=Math.round(e.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),a.search("Z")!==-1&&(e.scale.z=Math.round(e.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(n==="rotate"){this._offset.copy(this.pointEnd).sub(this.pointStart);const o=20/this.worldPosition.distanceTo(P.setFromMatrixPosition(this.camera.matrixWorld));let d=!1;a==="XYZE"?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(P.copy(this.rotationAxis).cross(this.eye))*o):(a==="X"||a==="Y"||a==="Z")&&(this.rotationAxis.copy(za[a]),P.copy(za[a]),c==="local"&&P.applyQuaternion(this.worldQuaternion),P.cross(this.eye),P.length()===0?d=!0:this.rotationAngle=this._offset.dot(P.normalize())*o),(a==="E"||d)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),c==="local"&&a!=="E"&&a!=="XYZE"?(e.quaternion.copy(this._quaternionStart),e.quaternion.multiply(m.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),e.quaternion.copy(m.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),e.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(ha),this.dispatchEvent(Qa)}}pointerUp(t){t!==null&&t.button!==0||(this.dragging&&this.axis!==null&&(La.mode=this.mode,this.dispatchEvent(La)),this.dragging=!1,this.axis=null)}dispose(){this.disconnect(),this.traverse(function(t){t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose()})}attach(t){return this.object=t,this._root.visible=!0,this}detach(){return this.object=void 0,this.axis=null,this._root.visible=!1,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(ha),this.dispatchEvent(Qa),this.pointStart.copy(this.pointEnd))}getRaycaster(){return Z}getMode(){return this.mode}setMode(t){this.mode=t}setTranslationSnap(t){this.translationSnap=t}setRotationSnap(t){this.rotationSnap=t}setScaleSnap(t){this.scaleSnap=t}setSize(t){this.size=t}setSpace(t){this.space=t}}function xs(i){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:i.button};{const t=this.domElement.getBoundingClientRect();return{x:(i.clientX-t.left)/t.width*2-1,y:-(i.clientY-t.top)/t.height*2+1,button:i.button}}}function _s(i){if(this.enabled)switch(i.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(i));break}}function Cs(i){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(i.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(i)),this.pointerDown(this._getPointer(i)))}function Es(i){this.enabled&&this.pointerMove(this._getPointer(i))}function Ss(i){this.enabled&&(this.domElement.releasePointerCapture(i.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(i)))}function ua(i,t,a){const n=t.intersectObject(i,!0);for(let e=0;e<n.length;e++)if(n[e].object.visible||a)return n[e];return!1}const ra=new $a,y=new v(0,1,0),Xa=new v(0,0,0),Za=new ba,pa=new z,Fa=new z,R=new v,Ya=new ba,na=new v(1,0,0),Y=new v(0,1,0),ea=new v(0,0,1),da=new v,sa=new v,ta=new v;class As extends ma{constructor(t){super(),this.isTransformControlsRoot=!0,this.controls=t,this.visible=!1}updateMatrixWorld(t){const a=this.controls;a.object!==void 0&&(a.object.updateMatrixWorld(),a.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):a.object.parent.matrixWorld.decompose(a._parentPosition,a._parentQuaternion,a._parentScale),a.object.matrixWorld.decompose(a.worldPosition,a.worldQuaternion,a._worldScale),a._parentQuaternionInv.copy(a._parentQuaternion).invert(),a._worldQuaternionInv.copy(a.worldQuaternion).invert()),a.camera.updateMatrixWorld(),a.camera.matrixWorld.decompose(a.cameraPosition,a.cameraQuaternion,a._cameraScale),a.camera.isOrthographicCamera?a.camera.getWorldDirection(a.eye).negate():a.eye.copy(a.cameraPosition).sub(a.worldPosition).normalize(),super.updateMatrixWorld(t)}}class Ps extends ma{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const t=new ga({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),a=new fa({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),n=t.clone();n.opacity=.15;const e=a.clone();e.opacity=.5;const c=t.clone();c.color.setHex(16711680);const s=t.clone();s.color.setHex(65280);const o=t.clone();o.color.setHex(255);const d=t.clone();d.color.setHex(16711680),d.opacity=.5;const p=t.clone();p.color.setHex(65280),p.opacity=.5;const b=t.clone();b.color.setHex(255),b.opacity=.5;const g=t.clone();g.opacity=.25;const x=t.clone();x.color.setHex(16776960),x.opacity=.25,t.clone().color.setHex(16776960);const h=t.clone();h.color.setHex(7895160);const r=new B(0,.04,.1,12);r.translate(0,.05,0);const F=new A(.08,.08,.08);F.translate(0,.04,0);const E=new ya;E.setAttribute("position",new _a([0,0,0,1,0,0],3));const C=new B(.0075,.0075,.5,3);C.translate(0,.25,0);function f(S,L){const D=new aa(S,.0075,3,64,L*Math.PI*2);return D.rotateY(Math.PI/2),D.rotateX(Math.PI/2),D}function T(){const S=new ya;return S.setAttribute("position",new _a([0,0,0,1,1,1],3)),S}const H={X:[[new l(r,c),[.5,0,0],[0,0,-Math.PI/2]],[new l(r,c),[-.5,0,0],[0,0,Math.PI/2]],[new l(C,c),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new l(r,s),[0,.5,0]],[new l(r,s),[0,-.5,0],[Math.PI,0,0]],[new l(C,s)]],Z:[[new l(r,o),[0,0,.5],[Math.PI/2,0,0]],[new l(r,o),[0,0,-.5],[-Math.PI/2,0,0]],[new l(C,o),null,[Math.PI/2,0,0]]],XYZ:[[new l(new la(.1,0),g.clone()),[0,0,0]]],XY:[[new l(new A(.15,.15,.01),b.clone()),[.15,.15,0]]],YZ:[[new l(new A(.15,.15,.01),d.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new l(new A(.15,.15,.01),p.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},I={X:[[new l(new B(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new l(new B(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new l(new B(.2,0,.6,4),n),[0,.3,0]],[new l(new B(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new l(new B(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new l(new B(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new l(new la(.2,0),n)]],XY:[[new l(new A(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new l(new A(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new l(new A(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]]},J={START:[[new l(new la(.01,2),e),null,null,null,"helper"]],END:[[new l(new la(.01,2),e),null,null,null,"helper"]],DELTA:[[new Q(T(),e),null,null,null,"helper"]],X:[[new Q(E,e.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Q(E,e.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Q(E,e.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},j={XYZE:[[new l(f(.5,1),h),null,[0,Math.PI/2,0]]],X:[[new l(f(.5,.5),c)]],Y:[[new l(f(.5,.5),s),null,[0,0,-Math.PI/2]]],Z:[[new l(f(.5,.5),o),null,[0,Math.PI/2,0]]],E:[[new l(f(.75,1),x),null,[0,Math.PI/2,0]]]},$={AXIS:[[new Q(E,e.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},q={XYZE:[[new l(new wa(.25,10,8),n)]],X:[[new l(new aa(.5,.1,4,24),n),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new l(new aa(.5,.1,4,24),n),[0,0,0],[Math.PI/2,0,0]]],Z:[[new l(new aa(.5,.1,4,24),n),[0,0,0],[0,0,-Math.PI/2]]],E:[[new l(new aa(.75,.1,2,24),n)]]},X={X:[[new l(F,c),[.5,0,0],[0,0,-Math.PI/2]],[new l(C,c),[0,0,0],[0,0,-Math.PI/2]],[new l(F,c),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new l(F,s),[0,.5,0]],[new l(C,s)],[new l(F,s),[0,-.5,0],[0,0,Math.PI]]],Z:[[new l(F,o),[0,0,.5],[Math.PI/2,0,0]],[new l(C,o),[0,0,0],[Math.PI/2,0,0]],[new l(F,o),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new l(new A(.15,.15,.01),b),[.15,.15,0]]],YZ:[[new l(new A(.15,.15,.01),d),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new l(new A(.15,.15,.01),p),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new l(new A(.1,.1,.1),g.clone())]]},N={X:[[new l(new B(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new l(new B(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new l(new B(.2,0,.6,4),n),[0,.3,0]],[new l(new B(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new l(new B(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new l(new B(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new l(new A(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new l(new A(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new l(new A(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new l(new A(.2,.2,.2),n),[0,0,0]]]},K={X:[[new Q(E,e.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Q(E,e.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Q(E,e.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function M(S){const L=new ma;for(const D in S)for(let w=S[D].length;w--;){const u=S[D][w][0].clone(),W=S[D][w][1],G=S[D][w][2],oa=S[D][w][3],Va=S[D][w][4];u.name=D,u.tag=Va,W&&u.position.set(W[0],W[1],W[2]),G&&u.rotation.set(G[0],G[1],G[2]),oa&&u.scale.set(oa[0],oa[1],oa[2]),u.updateMatrix();const xa=u.geometry.clone();xa.applyMatrix4(u.matrix),u.geometry=xa,u.renderOrder=1/0,u.position.set(0,0,0),u.rotation.set(0,0,0),u.scale.set(1,1,1),L.add(u)}return L}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=M(H)),this.add(this.gizmo.rotate=M(j)),this.add(this.gizmo.scale=M(X)),this.add(this.picker.translate=M(I)),this.add(this.picker.rotate=M(q)),this.add(this.picker.scale=M(N)),this.add(this.helper.translate=M(J)),this.add(this.helper.rotate=M($)),this.add(this.helper.scale=M(K)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(t){const n=(this.mode==="scale"?"local":this.space)==="local"?this.worldQuaternion:Fa;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";let e=[];e=e.concat(this.picker[this.mode].children),e=e.concat(this.gizmo[this.mode].children),e=e.concat(this.helper[this.mode].children);for(let c=0;c<e.length;c++){const s=e[c];s.visible=!0,s.rotation.set(0,0,0),s.position.copy(this.worldPosition);let o;if(this.camera.isOrthographicCamera?o=(this.camera.top-this.camera.bottom)/this.camera.zoom:o=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),s.scale.set(1,1,1).multiplyScalar(o*this.size/4),s.tag==="helper"){s.visible=!1,s.name==="AXIS"?(s.visible=!!this.axis,this.axis==="X"&&(m.setFromEuler(ra.set(0,0,0)),s.quaternion.copy(n).multiply(m),Math.abs(y.copy(na).applyQuaternion(n).dot(this.eye))>.9&&(s.visible=!1)),this.axis==="Y"&&(m.setFromEuler(ra.set(0,0,Math.PI/2)),s.quaternion.copy(n).multiply(m),Math.abs(y.copy(Y).applyQuaternion(n).dot(this.eye))>.9&&(s.visible=!1)),this.axis==="Z"&&(m.setFromEuler(ra.set(0,Math.PI/2,0)),s.quaternion.copy(n).multiply(m),Math.abs(y.copy(ea).applyQuaternion(n).dot(this.eye))>.9&&(s.visible=!1)),this.axis==="XYZE"&&(m.setFromEuler(ra.set(0,Math.PI/2,0)),y.copy(this.rotationAxis),s.quaternion.setFromRotationMatrix(Za.lookAt(Xa,y,Y)),s.quaternion.multiply(m),s.visible=this.dragging),this.axis==="E"&&(s.visible=!1)):s.name==="START"?(s.position.copy(this.worldPositionStart),s.visible=this.dragging):s.name==="END"?(s.position.copy(this.worldPosition),s.visible=this.dragging):s.name==="DELTA"?(s.position.copy(this.worldPositionStart),s.quaternion.copy(this.worldQuaternionStart),P.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),P.applyQuaternion(this.worldQuaternionStart.clone().invert()),s.scale.copy(P),s.visible=this.dragging):(s.quaternion.copy(n),this.dragging?s.position.copy(this.worldPositionStart):s.position.copy(this.worldPosition),this.axis&&(s.visible=this.axis.search(s.name)!==-1));continue}s.quaternion.copy(n),this.mode==="translate"||this.mode==="scale"?(s.name==="X"&&Math.abs(y.copy(na).applyQuaternion(n).dot(this.eye))>.99&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="Y"&&Math.abs(y.copy(Y).applyQuaternion(n).dot(this.eye))>.99&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="Z"&&Math.abs(y.copy(ea).applyQuaternion(n).dot(this.eye))>.99&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="XY"&&Math.abs(y.copy(ea).applyQuaternion(n).dot(this.eye))<.2&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="YZ"&&Math.abs(y.copy(na).applyQuaternion(n).dot(this.eye))<.2&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="XZ"&&Math.abs(y.copy(Y).applyQuaternion(n).dot(this.eye))<.2&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1)):this.mode==="rotate"&&(pa.copy(n),y.copy(this.eye).applyQuaternion(m.copy(n).invert()),s.name.search("E")!==-1&&s.quaternion.setFromRotationMatrix(Za.lookAt(this.eye,Xa,Y)),s.name==="X"&&(m.setFromAxisAngle(na,Math.atan2(-y.y,y.z)),m.multiplyQuaternions(pa,m),s.quaternion.copy(m)),s.name==="Y"&&(m.setFromAxisAngle(Y,Math.atan2(y.x,y.z)),m.multiplyQuaternions(pa,m),s.quaternion.copy(m)),s.name==="Z"&&(m.setFromAxisAngle(ea,Math.atan2(y.y,y.x)),m.multiplyQuaternions(pa,m),s.quaternion.copy(m))),s.visible=s.visible&&(s.name.indexOf("X")===-1||this.showX),s.visible=s.visible&&(s.name.indexOf("Y")===-1||this.showY),s.visible=s.visible&&(s.name.indexOf("Z")===-1||this.showZ),s.visible=s.visible&&(s.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),s.material._color=s.material._color||s.material.color.clone(),s.material._opacity=s.material._opacity||s.material.opacity,s.material.color.copy(s.material._color),s.material.opacity=s.material._opacity,this.enabled&&this.axis&&(s.name===this.axis||this.axis.split("").some(function(d){return s.name===d}))&&(s.material.color.setHex(16776960),s.material.opacity=1)}super.updateMatrixWorld(t)}}class Ms extends l{constructor(){super(new Ka(1e5,1e5,2,2),new ga({visible:!1,wireframe:!0,side:as,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(t){let a=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(a="local"),da.copy(na).applyQuaternion(a==="local"?this.worldQuaternion:Fa),sa.copy(Y).applyQuaternion(a==="local"?this.worldQuaternion:Fa),ta.copy(ea).applyQuaternion(a==="local"?this.worldQuaternion:Fa),y.copy(sa),this.mode){case"translate":case"scale":switch(this.axis){case"X":y.copy(this.eye).cross(da),R.copy(da).cross(y);break;case"Y":y.copy(this.eye).cross(sa),R.copy(sa).cross(y);break;case"Z":y.copy(this.eye).cross(ta),R.copy(ta).cross(y);break;case"XY":R.copy(ta);break;case"YZ":R.copy(da);break;case"XZ":y.copy(ta),R.copy(sa);break;case"XYZ":case"E":R.set(0,0,0);break}break;case"rotate":default:R.set(0,0,0)}R.length()===0?this.quaternion.copy(this.cameraQuaternion):(Ya.lookAt(P.set(0,0,0),R,y),this.quaternion.setFromRotationMatrix(Ya)),super.updateMatrixWorld(t)}}const U=4,V=1024,O=4;function Bs(i=1){const t=new Uint16Array(V*O*i*U),a=new ts(t,V,O*i,ns,es);return a.wrapS=Ca,a.wrapY=Ca,a.magFilter=Ea,a.minFilter=Ea,a.needsUpdate=!0,a}function Ts(i,t,a=0){const n=Math.floor(V*(O/4));t.arcLengthDivisions=n/2,t.updateArcLengths();const e=t.getSpacedPoints(n),c=t.computeFrenetFrames(n,!0);for(let s=0;s<n;s++){const o=Math.floor(s/V),d=s%V;let p=e[s];va(i,d,p.x,p.y,p.z,0+o+O*a),p=c.tangents[s],va(i,d,p.x,p.y,p.z,1+o+O*a),p=c.normals[s],va(i,d,p.x,p.y,p.z,2+o+O*a),p=c.binormals[s],va(i,d,p.x,p.y,p.z,3+o+O*a)}i.needsUpdate=!0}function va(i,t,a,n,e,c){const s=i.image,{data:o}=s,d=U*V*c;o[t*U+d+0]=ca.toHalfFloat(a),o[t*U+d+1]=ca.toHalfFloat(n),o[t*U+d+2]=ca.toHalfFloat(e),o[t*U+d+3]=ca.toHalfFloat(1)}function Ds(i){return{spineTexture:{value:i},pathOffset:{type:"f",value:0},pathSegment:{type:"f",value:1},spineOffset:{type:"f",value:161},spineLength:{type:"f",value:400},flow:{type:"i",value:1}}}function qa(i,t,a=1){i.__ok||(i.__ok=!0,i.onBeforeCompile=n=>{if(n.__modified)return;n.__modified=!0,Object.assign(n.uniforms,t);const e=`
		uniform sampler2D spineTexture;
		uniform float pathOffset;
		uniform float pathSegment;
		uniform float spineOffset;
		uniform float spineLength;
		uniform int flow;

		float textureLayers = ${O*a}.;
		float textureStacks = ${O/4}.;

		${n.vertexShader}
		`.replace("#include <beginnormal_vertex>","").replace("#include <defaultnormal_vertex>","").replace("#include <begin_vertex>","").replace(/void\s*main\s*\(\)\s*\{/,`
void main() {
#include <beginnormal_vertex>

vec4 worldPos = modelMatrix * vec4(position, 1.);

bool bend = flow > 0;
float xWeight = bend ? 0. : 1.;

#ifdef USE_INSTANCING
float pathOffsetFromInstanceMatrix = instanceMatrix[3][2];
float spineLengthFromInstanceMatrix = instanceMatrix[3][0];
float spinePortion = bend ? (worldPos.x + spineOffset) / spineLengthFromInstanceMatrix : 0.;
float mt = (spinePortion * pathSegment + pathOffset + pathOffsetFromInstanceMatrix)*textureStacks;
#else
float spinePortion = bend ? (worldPos.x + spineOffset) / spineLength : 0.;
float mt = (spinePortion * pathSegment + pathOffset)*textureStacks;
#endif

mt = mod(mt, textureStacks);
float rowOffset = floor(mt);

#ifdef USE_INSTANCING
rowOffset += instanceMatrix[3][1] * ${O}.;
#endif

vec3 spinePos = texture2D(spineTexture, vec2(mt, (0. + rowOffset + 0.5) / textureLayers)).xyz;
vec3 a =        texture2D(spineTexture, vec2(mt, (1. + rowOffset + 0.5) / textureLayers)).xyz;
vec3 b =        texture2D(spineTexture, vec2(mt, (2. + rowOffset + 0.5) / textureLayers)).xyz;
vec3 c =        texture2D(spineTexture, vec2(mt, (3. + rowOffset + 0.5) / textureLayers)).xyz;
mat3 basis = mat3(a, b, c);

vec3 transformed = basis
	* vec3(worldPos.x * xWeight, worldPos.y * 1., worldPos.z * 1.)
	+ spinePos;

vec3 transformedNormal = normalMatrix * (basis * objectNormal);
			`).replace("#include <project_vertex>",`vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );
				gl_Position = projectionMatrix * mvPosition;`);n.vertexShader=e})}class Na{constructor(t,a=1){const n=t.clone(),e=Bs(a),c=Ds(e);n.traverse(function(s){if(s instanceof l||s instanceof ss)if(Array.isArray(s.material)){const o=[];for(const d of s.material){const p=d.clone();qa(p,c,a),o.push(p)}s.material=o}else s.material=s.material.clone(),qa(s.material,c,a)}),this.curveArray=new Array(a),this.curveLengthArray=new Array(a),this.object3D=n,this.splineTexure=e,this.uniforms=c}updateCurve(t,a){if(t>=this.curveArray.length)throw Error("Index out of range for Flow");const n=a.getLength();this.uniforms.spineLength.value=n,this.curveLengthArray[t]=n,this.curveArray[t]=a,Ts(this.splineTexure,a,t)}moveAlongCurve(t){this.uniforms.pathOffset.value+=t}}new ba;class Wa extends os{constructor(t){super(t)}load(t,a,n,e){const c=this,s=new ls(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,function(o){const d=c.parse(JSON.parse(o));a&&a(d)},n,e)}parse(t){return new Is(t)}}class Is{constructor(t){this.isFont=!0,this.type="Font",this.data=t}generateShapes(t,a=100){const n=[],e=Hs(t,a,this.data);for(let c=0,s=e.length;c<s;c++)n.push(...e[c].toShapes());return n}}function Hs(i,t,a){const n=Array.from(i),e=t/a.resolution,c=(a.boundingBox.yMax-a.boundingBox.yMin+a.underlineThickness)*e,s=[];let o=0,d=0;for(let p=0;p<n.length;p++){const b=n[p];if(b===`
`)o=0,d-=c;else{const g=js(b,e,o,d,a);o+=g.offsetX,s.push(g.path)}}return s}function js(i,t,a,n,e){const c=e.glyphs[i]||e.glyphs["?"];if(!c){console.error('THREE.Font: character "'+i+'" does not exists in font family '+e.familyName+".");return}const s=new cs;let o,d,p,b,g,x,_,h;if(c.o){const r=c._cachedOutline||(c._cachedOutline=c.o.split(" "));for(let F=0,E=r.length;F<E;)switch(r[F++]){case"m":o=r[F++]*t+a,d=r[F++]*t+n,s.moveTo(o,d);break;case"l":o=r[F++]*t+a,d=r[F++]*t+n,s.lineTo(o,d);break;case"q":p=r[F++]*t+a,b=r[F++]*t+n,g=r[F++]*t+a,x=r[F++]*t+n,s.quadraticCurveTo(g,x,p,b);break;case"b":p=r[F++]*t+a,b=r[F++]*t+n,g=r[F++]*t+a,x=r[F++]*t+n,_=r[F++]*t+a,h=r[F++]*t+n,s.bezierCurveTo(g,x,_,h,p,b);break}}return{offsetX:c.ha*t,path:s}}class Ga extends is{constructor(t,a={}){const n=a.font;if(n===void 0)super();else{const e=n.generateShapes(t,a.size);a.depth===void 0&&a.height!==void 0&&console.warn("THREE.TextGeometry: .height is now depreciated. Please use .depth instead"),a.depth=a.depth!==void 0?a.depth:a.height!==void 0?a.height:50,a.bevelThickness===void 0&&(a.bevelThickness=10),a.bevelSize===void 0&&(a.bevelSize=8),a.bevelEnabled===void 0&&(a.bevelEnabled=!1),super(e,a)}this.type="TextGeometry"}}const Rs={__name:"threejs-curve.html",setup(i,{expose:t}){t();const a=ia(),n=new ds,e=new rs,c=ia(900);function s(){let b,g,x,_,h,r;_=new Sa(75,2,.1,200),_.position.set(0,5,-10),h=new Aa;const C=new Pa(16777215);C.position.set(0,0,1),h.add(C);const f=new Ma(16777215,.5);h.add(f);const T=new wa(5,16,16),H=new Ba({specular:3355443,shininess:5,map:e.load("/assets/textures/planets/earth_atmos_2048.jpg"),specularMap:e.load("/assets/textures/planets/earth_specular_2048.jpg"),normalMap:e.load("/assets/textures/planets/earth_normal_2048.jpg"),normalScale:new Ta(.85,.85)});g=new l(T,H),g.position.z=-4,h.add(g);const I=new wa(.5,16,16),J=new Ba({shininess:5,map:e.load("/assets/textures/planets/moon_1024.jpg")});b=new l(I,J),h.add(b),x=new Da([new v(-10,0,10),new v(-5,5,5),new v(0,0,5),new v(5,-5,5),new v(10,0,10)],!0);const j=x.getPoints(500),$=new ya().setFromPoints(j),q=new fa({color:16711680}),X=new Q($,q);h.add(X),r=new Ia,r.setPixelRatio(window.devicePixelRatio),window.addEventListener("resize",N),r.setSize(a.value.offsetWidth,a.value.offsetWidth/2),a.value.appendChild(r.domElement),r.render(h,_);function N(){_.aspect=2,_.updateProjectionMatrix(),r.setSize(a.value.offsetWidth,a.value.offsetWidth/2),c.value=a.value.offsetWidth}function K(){r.render(h,_);const M=n.getElapsedTime(),S=M/10%1;b.position.set(Math.sin(M)*8,0,Math.cos(M)*8);const L=x.getPoint(S);_.position.copy(L),_.lookAt(g.position),requestAnimationFrame(K)}K()}const o=ia(),d=()=>{const x=[],_=new Ta;let h,r,F,E,C,f,T=0;h=new Aa,r=new Sa(40,2,1,1e3),r.position.set(2,2,4),r.lookAt(h.position);const H=[{x:1,y:0,z:-1},{x:1,y:0,z:1},{x:-1,y:0,z:1},{x:-1,y:0,z:-1}],I=new A(.1,.1,.1),J=new ga;for(const w of H){const u=new l(I,J);u.position.copy(w),x.push(u),h.add(u)}const j=new Da(x.map(w=>w.position));j.curveType="centripetal",j.closed=!0;const $=j.getPoints(50),q=new vs(new ya().setFromPoints($),new fa({color:65280}));h.add(q);const X=new Pa(16755251);X.position.set(-10,10,10),X.intensity=1,h.add(X);const N=new Ma(14707);N.intensity=1,h.add(N),new Wa().load("/fonts/helvetiker_regular.typeface.json",function(w){const u=new Ga("Hello three.js!",{font:w,size:.2,height:.05,curveSegments:12,bevelEnabled:!0,bevelThickness:.02,bevelSize:.01,bevelOffset:0,bevelSegments:5});u.rotateX(Math.PI);const W=new Fs({color:10092543}),G=new l(u,W);f=new Na(G),f.updateCurve(0,j),h.add(f.object3D)}),F=new Ia({antialias:!0}),F.setSize(o.value.offsetWidth,o.value.offsetWidth/2),o.value.appendChild(F.domElement),F.domElement.addEventListener("pointerdown",S),E=new Ua,C=new ka(r,F.domElement),C.addEventListener("dragging-changed",function(w){if(!w.value){const u=j.getPoints(50);q.geometry.setFromPoints(u),f.updateCurve(0,j)}window.addEventListener("resize",M)});function M(){r.updateProjectionMatrix(),F.setSize(o.value.offsetWidth,o.value.offsetWidth/2)}function S(w){T=1,_.x=w.clientX/window.innerWidth*2-1,_.y=-(w.clientY/window.innerHeight)*2+1}function L(){if(requestAnimationFrame(L),T===1){E.setFromCamera(_,r),T=0;const w=E.intersectObjects(x,!1);if(console.log(w,"a"),w.length){const u=w[0].object;C.attach(u),h.add(C)}}f&&f.moveAlongCurve(.001),D()}function D(){F.render(h,r)}L()};Ha(()=>{s(),c.value=a.value.offsetWidth});const p={motion:a,clock:n,textureLoader:e,width:c,initMotion:s,modifierCurveRef:o,initModifierCurveRef:d,ref:ia,onMounted:Ha,get THREE(){return ps},get OrbitControls(){return ys},get CSS2DRenderer(){return hs},get CSS2DObject(){return us},get TransformControls(){return ka},get Stats(){return ms},get Flow(){return Na},get FontLoader(){return Wa},get TextGeometry(){return Ga}};return Object.defineProperty(p,"__isScriptSetup",{enumerable:!1,value:!0}),p}},zs={class:"motion",ref:"motion"},Os=["height","width"];function Ls(i,t,a,n,e,c){return gs(),ws("div",null,[t[0]||(t[0]=ja(`<p data-v-671a0caa>参考：<a href="https://threejs.org/" target="_blank" rel="noopener noreferrer" data-v-671a0caa>https://threejs.org/</a></p><h2 id="曲线运动" tabindex="-1" data-v-671a0caa><a class="header-anchor" href="#曲线运动" data-v-671a0caa><span data-v-671a0caa>曲线运动</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-671a0caa><pre class="shiki dracula vp-code" data-v-671a0caa><code data-v-671a0caa><span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa>  // 从一系列的点创建一条平滑的三维样条曲线。</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>  curve </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>CatmullRomCurve3</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>    [</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa>      new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>Vector3</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#FF79C6;" data-v-671a0caa>-</span><span style="color:#BD93F9;" data-v-671a0caa>10</span><span style="color:#F8F8F2;" data-v-671a0caa>, </span><span style="color:#BD93F9;" data-v-671a0caa>0</span><span style="color:#F8F8F2;" data-v-671a0caa>, </span><span style="color:#BD93F9;" data-v-671a0caa>10</span><span style="color:#F8F8F2;" data-v-671a0caa>),</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa>      new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>Vector3</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#FF79C6;" data-v-671a0caa>-</span><span style="color:#BD93F9;" data-v-671a0caa>5</span><span style="color:#F8F8F2;" data-v-671a0caa>, </span><span style="color:#BD93F9;" data-v-671a0caa>5</span><span style="color:#F8F8F2;" data-v-671a0caa>, </span><span style="color:#BD93F9;" data-v-671a0caa>5</span><span style="color:#F8F8F2;" data-v-671a0caa>),</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa>      new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>Vector3</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#BD93F9;" data-v-671a0caa>0</span><span style="color:#F8F8F2;" data-v-671a0caa>, </span><span style="color:#BD93F9;" data-v-671a0caa>0</span><span style="color:#F8F8F2;" data-v-671a0caa>, </span><span style="color:#BD93F9;" data-v-671a0caa>5</span><span style="color:#F8F8F2;" data-v-671a0caa>),</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa>      new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>Vector3</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#BD93F9;" data-v-671a0caa>5</span><span style="color:#F8F8F2;" data-v-671a0caa>, </span><span style="color:#FF79C6;" data-v-671a0caa>-</span><span style="color:#BD93F9;" data-v-671a0caa>5</span><span style="color:#F8F8F2;" data-v-671a0caa>, </span><span style="color:#BD93F9;" data-v-671a0caa>5</span><span style="color:#F8F8F2;" data-v-671a0caa>),</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa>      new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>Vector3</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#BD93F9;" data-v-671a0caa>10</span><span style="color:#F8F8F2;" data-v-671a0caa>, </span><span style="color:#BD93F9;" data-v-671a0caa>0</span><span style="color:#F8F8F2;" data-v-671a0caa>, </span><span style="color:#BD93F9;" data-v-671a0caa>10</span><span style="color:#F8F8F2;" data-v-671a0caa>),</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>    ],</span></span>
<span class="line" data-v-671a0caa><span style="color:#BD93F9;" data-v-671a0caa>    true</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>  );</span></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa>  // 使用getPoint（t）返回一组divisions+1的点</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>  const</span><span style="color:#F8F8F2;" data-v-671a0caa> points </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#F8F8F2;" data-v-671a0caa> curve.</span><span style="color:#50FA7B;" data-v-671a0caa>getPoints</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#BD93F9;" data-v-671a0caa>500</span><span style="color:#F8F8F2;" data-v-671a0caa>);</span></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa>  // 通过点队列设置该 BufferGeometry 的 attribute。</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>  const</span><span style="color:#F8F8F2;" data-v-671a0caa> geometry </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>BufferGeometry</span><span style="color:#F8F8F2;" data-v-671a0caa>().</span><span style="color:#50FA7B;" data-v-671a0caa>setFromPoints</span><span style="color:#F8F8F2;" data-v-671a0caa>(points);</span></span>
<span class="line" data-v-671a0caa></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>  const</span><span style="color:#F8F8F2;" data-v-671a0caa> material </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>LineBasicMaterial</span><span style="color:#F8F8F2;" data-v-671a0caa>({ color</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 0xff0000</span><span style="color:#F8F8F2;" data-v-671a0caa> });</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>  const</span><span style="color:#F8F8F2;" data-v-671a0caa> curveObject </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>Line</span><span style="color:#F8F8F2;" data-v-671a0caa>(geometry, material);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>  scene.</span><span style="color:#50FA7B;" data-v-671a0caa>add</span><span style="color:#F8F8F2;" data-v-671a0caa>(curveObject);</span></span>
<span class="line" data-v-671a0caa></span>
<span class="line" data-v-671a0caa></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>  function</span><span style="color:#50FA7B;" data-v-671a0caa> animate</span><span style="color:#F8F8F2;" data-v-671a0caa>(){</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>      renderer.</span><span style="color:#50FA7B;" data-v-671a0caa>render</span><span style="color:#F8F8F2;" data-v-671a0caa>(scene, camera);</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>      const</span><span style="color:#F8F8F2;" data-v-671a0caa> elapsed </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#F8F8F2;" data-v-671a0caa> clock.</span><span style="color:#50FA7B;" data-v-671a0caa>getElapsedTime</span><span style="color:#F8F8F2;" data-v-671a0caa>();</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>      const</span><span style="color:#F8F8F2;" data-v-671a0caa> time </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#F8F8F2;" data-v-671a0caa> elapsed</span><span style="color:#FF79C6;" data-v-671a0caa>/</span><span style="color:#BD93F9;" data-v-671a0caa>10</span><span style="color:#FF79C6;" data-v-671a0caa>%</span><span style="color:#BD93F9;" data-v-671a0caa>1</span><span style="color:#F8F8F2;" data-v-671a0caa>;</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>      const</span><span style="color:#F8F8F2;" data-v-671a0caa> point </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#F8F8F2;" data-v-671a0caa> curve.</span><span style="color:#50FA7B;" data-v-671a0caa>getPoint</span><span style="color:#F8F8F2;" data-v-671a0caa>(time);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>      moon.position.</span><span style="color:#50FA7B;" data-v-671a0caa>copy</span><span style="color:#F8F8F2;" data-v-671a0caa>(point);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>      camera.position.</span><span style="color:#50FA7B;" data-v-671a0caa>copy</span><span style="color:#F8F8F2;" data-v-671a0caa>(point);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>      camera.</span><span style="color:#50FA7B;" data-v-671a0caa>lookAt</span><span style="color:#F8F8F2;" data-v-671a0caa>(earth.position)</span></span>
<span class="line" data-v-671a0caa><span style="color:#50FA7B;" data-v-671a0caa>      requestAnimationFrame</span><span style="color:#F8F8F2;" data-v-671a0caa>(animate)</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-671a0caa><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div></div></div>`,3)),Ra("div",zs,null,512),t[1]||(t[1]=ja(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-671a0caa><pre class="shiki dracula vp-code" data-v-671a0caa><code data-v-671a0caa><span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>const</span><span style="color:#F8F8F2;" data-v-671a0caa> curveHandles </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#F8F8F2;" data-v-671a0caa> []; </span><span style="color:#6272A4;" data-v-671a0caa>// 曲线控制点数组</span></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa>  // 初始化曲线控制点，设置成立方样条曲线</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>  const</span><span style="color:#F8F8F2;" data-v-671a0caa> initialPoints </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#F8F8F2;" data-v-671a0caa> [</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>    { x</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 1</span><span style="color:#F8F8F2;" data-v-671a0caa>, y</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 0</span><span style="color:#F8F8F2;" data-v-671a0caa>, z</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#FF79C6;" data-v-671a0caa> -</span><span style="color:#BD93F9;" data-v-671a0caa>1</span><span style="color:#F8F8F2;" data-v-671a0caa> },</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>    { x</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 1</span><span style="color:#F8F8F2;" data-v-671a0caa>, y</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 0</span><span style="color:#F8F8F2;" data-v-671a0caa>, z</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 1</span><span style="color:#F8F8F2;" data-v-671a0caa> },</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>    { x</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#FF79C6;" data-v-671a0caa> -</span><span style="color:#BD93F9;" data-v-671a0caa>1</span><span style="color:#F8F8F2;" data-v-671a0caa>, y</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 0</span><span style="color:#F8F8F2;" data-v-671a0caa>, z</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 1</span><span style="color:#F8F8F2;" data-v-671a0caa> },</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>    { x</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#FF79C6;" data-v-671a0caa> -</span><span style="color:#BD93F9;" data-v-671a0caa>1</span><span style="color:#F8F8F2;" data-v-671a0caa>, y</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 0</span><span style="color:#F8F8F2;" data-v-671a0caa>, z</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#FF79C6;" data-v-671a0caa> -</span><span style="color:#BD93F9;" data-v-671a0caa>1</span><span style="color:#F8F8F2;" data-v-671a0caa> },</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>  ];</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>  const</span><span style="color:#F8F8F2;" data-v-671a0caa> boxGeometry </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>BoxGeometry</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#BD93F9;" data-v-671a0caa>0.1</span><span style="color:#F8F8F2;" data-v-671a0caa>, </span><span style="color:#BD93F9;" data-v-671a0caa>0.1</span><span style="color:#F8F8F2;" data-v-671a0caa>, </span><span style="color:#BD93F9;" data-v-671a0caa>0.1</span><span style="color:#F8F8F2;" data-v-671a0caa>);</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>  const</span><span style="color:#F8F8F2;" data-v-671a0caa> boxMaterial </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-671a0caa>();</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>  for</span><span style="color:#F8F8F2;" data-v-671a0caa> (</span><span style="color:#FF79C6;" data-v-671a0caa>const</span><span style="color:#F8F8F2;" data-v-671a0caa> handlePos </span><span style="color:#FF79C6;" data-v-671a0caa>of</span><span style="color:#F8F8F2;" data-v-671a0caa> initialPoints) {</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>    const</span><span style="color:#F8F8F2;" data-v-671a0caa> handle </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>Mesh</span><span style="color:#F8F8F2;" data-v-671a0caa>(boxGeometry, boxMaterial);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>    handle.position.</span><span style="color:#50FA7B;" data-v-671a0caa>copy</span><span style="color:#F8F8F2;" data-v-671a0caa>(handlePos);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>    curveHandles.</span><span style="color:#50FA7B;" data-v-671a0caa>push</span><span style="color:#F8F8F2;" data-v-671a0caa>(handle);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>    scene.</span><span style="color:#50FA7B;" data-v-671a0caa>add</span><span style="color:#F8F8F2;" data-v-671a0caa>(handle);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>  }</span></span>
<span class="line" data-v-671a0caa></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa>   // 创建立方样条曲线</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa> const</span><span style="color:#F8F8F2;" data-v-671a0caa> curve </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>CatmullRomCurve3</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>   curveHandles.</span><span style="color:#50FA7B;" data-v-671a0caa>map</span><span style="color:#F8F8F2;" data-v-671a0caa>((</span><span style="color:#FFB86C;font-style:italic;" data-v-671a0caa>handle</span><span style="color:#F8F8F2;" data-v-671a0caa>) </span><span style="color:#FF79C6;" data-v-671a0caa>=&gt;</span><span style="color:#F8F8F2;" data-v-671a0caa> handle.position)</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa> );</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa> curve.curveType </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#E9F284;" data-v-671a0caa> &quot;</span><span style="color:#F1FA8C;" data-v-671a0caa>centripetal</span><span style="color:#E9F284;" data-v-671a0caa>&quot;</span><span style="color:#F8F8F2;" data-v-671a0caa>; </span><span style="color:#6272A4;" data-v-671a0caa>// 曲线类型(切向加速调整)</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa> curve.closed </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#BD93F9;" data-v-671a0caa> true</span><span style="color:#F8F8F2;" data-v-671a0caa>; </span><span style="color:#6272A4;" data-v-671a0caa>// 是否封闭</span></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa> // 创建曲线并根据关键点更新线条</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa> const</span><span style="color:#F8F8F2;" data-v-671a0caa> points </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#F8F8F2;" data-v-671a0caa> curve.</span><span style="color:#50FA7B;" data-v-671a0caa>getPoints</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#BD93F9;" data-v-671a0caa>50</span><span style="color:#F8F8F2;" data-v-671a0caa>);</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa> const</span><span style="color:#F8F8F2;" data-v-671a0caa> line </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>LineLoop</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa>   new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>BufferGeometry</span><span style="color:#F8F8F2;" data-v-671a0caa>().</span><span style="color:#50FA7B;" data-v-671a0caa>setFromPoints</span><span style="color:#F8F8F2;" data-v-671a0caa>(points),</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa>   new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>LineBasicMaterial</span><span style="color:#F8F8F2;" data-v-671a0caa>({ color</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 0x00ff00</span><span style="color:#F8F8F2;" data-v-671a0caa> })</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa> );</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa> scene.</span><span style="color:#50FA7B;" data-v-671a0caa>add</span><span style="color:#F8F8F2;" data-v-671a0caa>(line);</span></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa> // 加载字体并创建 3D 文本</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa> const</span><span style="color:#F8F8F2;" data-v-671a0caa> loader </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#50FA7B;" data-v-671a0caa> FontLoader</span><span style="color:#F8F8F2;" data-v-671a0caa>();</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa> loader.</span><span style="color:#50FA7B;" data-v-671a0caa>load</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#E9F284;" data-v-671a0caa>&quot;</span><span style="color:#F1FA8C;" data-v-671a0caa>fonts/helvetiker_regular.typeface.json</span><span style="color:#E9F284;" data-v-671a0caa>&quot;</span><span style="color:#F8F8F2;" data-v-671a0caa>, </span><span style="color:#FF79C6;" data-v-671a0caa>function</span><span style="color:#F8F8F2;" data-v-671a0caa> (</span><span style="color:#FFB86C;font-style:italic;" data-v-671a0caa>font</span><span style="color:#F8F8F2;" data-v-671a0caa>) {</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>   const</span><span style="color:#F8F8F2;" data-v-671a0caa> geometry </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#50FA7B;" data-v-671a0caa> TextGeometry</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#E9F284;" data-v-671a0caa>&quot;</span><span style="color:#F1FA8C;" data-v-671a0caa>Hello three.js!</span><span style="color:#E9F284;" data-v-671a0caa>&quot;</span><span style="color:#F8F8F2;" data-v-671a0caa>, {</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>     font</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#F8F8F2;" data-v-671a0caa> font,</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>     size</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 0.2</span><span style="color:#F8F8F2;" data-v-671a0caa>,</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>     height</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 0.05</span><span style="color:#F8F8F2;" data-v-671a0caa>,</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>     curveSegments</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 12</span><span style="color:#F8F8F2;" data-v-671a0caa>,</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>     bevelEnabled</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> true</span><span style="color:#F8F8F2;" data-v-671a0caa>,</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>     bevelThickness</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 0.02</span><span style="color:#F8F8F2;" data-v-671a0caa>,</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>     bevelSize</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 0.01</span><span style="color:#F8F8F2;" data-v-671a0caa>,</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>     bevelOffset</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 0</span><span style="color:#F8F8F2;" data-v-671a0caa>,</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>     bevelSegments</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 5</span><span style="color:#F8F8F2;" data-v-671a0caa>,</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>   });</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>   geometry.</span><span style="color:#50FA7B;" data-v-671a0caa>rotateX</span><span style="color:#F8F8F2;" data-v-671a0caa>(Math.</span><span style="color:#BD93F9;" data-v-671a0caa>PI</span><span style="color:#F8F8F2;" data-v-671a0caa>);</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>   const</span><span style="color:#F8F8F2;" data-v-671a0caa> material </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>MeshStandardMaterial</span><span style="color:#F8F8F2;" data-v-671a0caa>({</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>     color</span><span style="color:#FF79C6;" data-v-671a0caa>:</span><span style="color:#BD93F9;" data-v-671a0caa> 0x99ffff</span><span style="color:#F8F8F2;" data-v-671a0caa>,</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>   });</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>   const</span><span style="color:#F8F8F2;" data-v-671a0caa> objectToCurve </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>Mesh</span><span style="color:#F8F8F2;" data-v-671a0caa>(geometry, material);</span></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa>   /*</span></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa>   </span></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa>   </span></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa>   */</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>   flow </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#50FA7B;" data-v-671a0caa> Flow</span><span style="color:#F8F8F2;" data-v-671a0caa>(objectToCurve);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>   flow.</span><span style="color:#50FA7B;" data-v-671a0caa>updateCurve</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#BD93F9;" data-v-671a0caa>0</span><span style="color:#F8F8F2;" data-v-671a0caa>, curve);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>   scene.</span><span style="color:#50FA7B;" data-v-671a0caa>add</span><span style="color:#F8F8F2;" data-v-671a0caa>(flow.object3D);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa> });</span></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa> // 创建射线对象</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa> rayCaster </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#BD93F9;" data-v-671a0caa> THREE</span><span style="color:#F8F8F2;" data-v-671a0caa>.</span><span style="color:#50FA7B;" data-v-671a0caa>Raycaster</span><span style="color:#F8F8F2;" data-v-671a0caa>();</span></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa> // 创建变换控制器对象</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa> control </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-671a0caa> new</span><span style="color:#50FA7B;" data-v-671a0caa> TransformControls</span><span style="color:#F8F8F2;" data-v-671a0caa>(camera, renderer.domElement);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa> control.</span><span style="color:#50FA7B;" data-v-671a0caa>addEventListener</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#E9F284;" data-v-671a0caa>&quot;</span><span style="color:#F1FA8C;" data-v-671a0caa>dragging-changed</span><span style="color:#E9F284;" data-v-671a0caa>&quot;</span><span style="color:#F8F8F2;" data-v-671a0caa>, </span><span style="color:#FF79C6;" data-v-671a0caa>function</span><span style="color:#F8F8F2;" data-v-671a0caa> (</span><span style="color:#FFB86C;font-style:italic;" data-v-671a0caa>event</span><span style="color:#F8F8F2;" data-v-671a0caa>) {</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>   if</span><span style="color:#F8F8F2;" data-v-671a0caa> (</span><span style="color:#FF79C6;" data-v-671a0caa>!</span><span style="color:#F8F8F2;" data-v-671a0caa>event.value) {</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>     const</span><span style="color:#F8F8F2;" data-v-671a0caa> points </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#F8F8F2;" data-v-671a0caa> curve.</span><span style="color:#50FA7B;" data-v-671a0caa>getPoints</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#BD93F9;" data-v-671a0caa>50</span><span style="color:#F8F8F2;" data-v-671a0caa>);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>     line.geometry.</span><span style="color:#50FA7B;" data-v-671a0caa>setFromPoints</span><span style="color:#F8F8F2;" data-v-671a0caa>(points);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>     flow.</span><span style="color:#50FA7B;" data-v-671a0caa>updateCurve</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#BD93F9;" data-v-671a0caa>0</span><span style="color:#F8F8F2;" data-v-671a0caa>, curve);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>   }</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa> });</span></span>
<span class="line" data-v-671a0caa></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa>  // 逐帧动画函数</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>function</span><span style="color:#50FA7B;" data-v-671a0caa> animate</span><span style="color:#F8F8F2;" data-v-671a0caa>() {</span></span>
<span class="line" data-v-671a0caa><span style="color:#50FA7B;" data-v-671a0caa>  requestAnimationFrame</span><span style="color:#F8F8F2;" data-v-671a0caa>(animate);</span></span>
<span class="line" data-v-671a0caa></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa>  // 判断是否点击场景</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>  if</span><span style="color:#F8F8F2;" data-v-671a0caa> (action </span><span style="color:#FF79C6;" data-v-671a0caa>===</span><span style="color:#F8F8F2;" data-v-671a0caa> ACTION_SELECT) {</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>    rayCaster.</span><span style="color:#50FA7B;" data-v-671a0caa>setFromCamera</span><span style="color:#F8F8F2;" data-v-671a0caa>(mouse, camera);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>    action </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#F8F8F2;" data-v-671a0caa> ACTION_NONE;</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>    const</span><span style="color:#F8F8F2;" data-v-671a0caa> intersects </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#F8F8F2;" data-v-671a0caa> rayCaster.</span><span style="color:#50FA7B;" data-v-671a0caa>intersectObjects</span><span style="color:#F8F8F2;" data-v-671a0caa>(curveHandles, </span><span style="color:#BD93F9;" data-v-671a0caa>false</span><span style="color:#F8F8F2;" data-v-671a0caa>);</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>    if</span><span style="color:#F8F8F2;" data-v-671a0caa> (intersects.length) {</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>      const</span><span style="color:#F8F8F2;" data-v-671a0caa> target </span><span style="color:#FF79C6;" data-v-671a0caa>=</span><span style="color:#F8F8F2;" data-v-671a0caa> intersects[</span><span style="color:#BD93F9;" data-v-671a0caa>0</span><span style="color:#F8F8F2;" data-v-671a0caa>].object;</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>      control.</span><span style="color:#50FA7B;" data-v-671a0caa>attach</span><span style="color:#F8F8F2;" data-v-671a0caa>(target);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>      scene.</span><span style="color:#50FA7B;" data-v-671a0caa>add</span><span style="color:#F8F8F2;" data-v-671a0caa>(control);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>    }</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>  }</span></span>
<span class="line" data-v-671a0caa></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa>  // 曲线模拟器运动</span></span>
<span class="line" data-v-671a0caa><span style="color:#FF79C6;" data-v-671a0caa>  if</span><span style="color:#F8F8F2;" data-v-671a0caa> (flow) {</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>    flow.</span><span style="color:#50FA7B;" data-v-671a0caa>moveAlongCurve</span><span style="color:#F8F8F2;" data-v-671a0caa>(</span><span style="color:#BD93F9;" data-v-671a0caa>0.001</span><span style="color:#F8F8F2;" data-v-671a0caa>);</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>  }</span></span>
<span class="line" data-v-671a0caa></span>
<span class="line" data-v-671a0caa><span style="color:#6272A4;" data-v-671a0caa>  // 渲染场景</span></span>
<span class="line" data-v-671a0caa><span style="color:#50FA7B;" data-v-671a0caa>  render</span><span style="color:#F8F8F2;" data-v-671a0caa>();</span></span>
<span class="line" data-v-671a0caa><span style="color:#F8F8F2;" data-v-671a0caa>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-671a0caa><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div><div class="line-number" data-v-671a0caa></div></div></div>`,1)),bs(' <div ref="modifierCurveRef"></div> '),Ra("iframe",{src:"/threejs/examples/webgl_modifier_curve.html",height:n.width/2,width:n.width},null,8,Os)])}const qs=fs(Rs,[["render",Ls],["__scopeId","data-v-671a0caa"],["__file","threejs-curve.html.vue"]]),Ns=JSON.parse('{"path":"/threejs/threejs-curve.html","title":"ThreeJS中的曲线应用","lang":"en-US","frontmatter":{"title":"ThreeJS中的曲线应用","date":"2022-02-01T00:00:00.000Z","category":["ThreeJS"],"description":"参考：https://threejs.org/ 曲线运动","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/threejs/threejs-curve.html"}],["meta",{"property":"og:title","content":"ThreeJS中的曲线应用"}],["meta",{"property":"og:description","content":"参考：https://threejs.org/ 曲线运动"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-03T04:27:20.000Z"}],["meta",{"property":"article:published_time","content":"2022-02-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-03T04:27:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ThreeJS中的曲线应用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-03T04:27:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"曲线运动","slug":"曲线运动","link":"#曲线运动","children":[]}],"git":{"createdTime":1675953479000,"updatedTime":1730608040000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":8},{"name":"卢祥","email":"example@qq.com","commits":4}]},"readingTime":{"minutes":3.88,"words":1163},"filePathRelative":"threejs/threejs-curve.md","localizedDate":"February 1, 2022","excerpt":"<p>参考：<a href=\\"https://threejs.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://threejs.org/</a></p>","autoDesc":true}');export{qs as comp,Ns as data};
