import{_ as n,e as a,g as l,o as e}from"./app-BcLUFOMF.js";const p={};function o(t,s){return e(),a("div",null,s[0]||(s[0]=[l(`<p>Authentication（身份验证） 是一个核心的安全机制，用于验证用户的身份。它的主要目的是确定请求的发起者是否是他们声称的那个人。身份验证是安全体系中的第一步</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">UseAuthentication</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>AuthenticationMiddleware</code></p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> AuthenticationMiddleware</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> RequestDelegate</span><span style="color:#F8F8F2;"> _next;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> AuthenticationMiddleware</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">RequestDelegate</span><span style="color:#FFB86C;font-style:italic;"> next</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">IAuthenticationSchemeProvider</span><span style="color:#FFB86C;font-style:italic;"> schemes</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _next </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> next;</span></span>
<span class="line"><span style="color:#F8F8F2;">        Schemes </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> schemes;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IAuthenticationSchemeProvider</span><span style="color:#F8F8F2;"> Schemes { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> async</span><span style="color:#8BE9FD;font-style:italic;"> Task</span><span style="color:#50FA7B;"> Invoke</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">HttpContext</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#6272A4;">        // 记录原始路径和原始基路径</span></span>
<span class="line"><span style="color:#F8F8F2;">        context.Features.</span><span style="color:#50FA7B;">Set</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IAuthenticationFeature</span><span style="color:#F8F8F2;">&gt;(</span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> AuthenticationFeature</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            OriginalPath </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> context.Request.Path,</span></span>
<span class="line"><span style="color:#F8F8F2;">            OriginalPathBase </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> context.Request.PathBase</span></span>
<span class="line"><span style="color:#F8F8F2;">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 如果有显式指定的身份认证方案，优先处理（这里不用看，直接看下面）</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> handlers </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> context.RequestServices.</span><span style="color:#50FA7B;">GetRequiredService</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IAuthenticationHandlerProvider</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#FF79C6;">        foreach</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> scheme </span><span style="color:#FF79C6;">in</span><span style="color:#FF79C6;"> await</span><span style="color:#F8F8F2;"> Schemes.</span><span style="color:#50FA7B;">GetRequestHandlerSchemesAsync</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#FF79C6;">            var</span><span style="color:#F8F8F2;"> handler </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> await</span><span style="color:#F8F8F2;"> handlers.</span><span style="color:#50FA7B;">GetHandlerAsync</span><span style="color:#F8F8F2;">(context, scheme.Name) </span><span style="color:#FF79C6;">as</span><span style="color:#8BE9FD;font-style:italic;"> IAuthenticationRequestHandler</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">            if</span><span style="color:#F8F8F2;"> (handler </span><span style="color:#FF79C6;">!=</span><span style="color:#BD93F9;"> null</span><span style="color:#FF79C6;"> &amp;&amp;</span><span style="color:#FF79C6;"> await</span><span style="color:#F8F8F2;"> handler.</span><span style="color:#50FA7B;">HandleRequestAsync</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#FF79C6;">                return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 使用默认的身份认证方案进行认证，并赋值 HttpContext.User</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> defaultAuthenticate </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> await</span><span style="color:#F8F8F2;"> Schemes.</span><span style="color:#50FA7B;">GetDefaultAuthenticateSchemeAsync</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (defaultAuthenticate </span><span style="color:#FF79C6;">!=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#FF79C6;">            var</span><span style="color:#F8F8F2;"> result </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> await</span><span style="color:#F8F8F2;"> context.</span><span style="color:#50FA7B;">AuthenticateAsync</span><span style="color:#F8F8F2;">(defaultAuthenticate.Name);</span></span>
<span class="line"><span style="color:#FF79C6;">            if</span><span style="color:#F8F8F2;"> (result</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;">.Principal </span><span style="color:#FF79C6;">!=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F8F8F2;">                context.User </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> result.Principal;</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        await</span><span style="color:#50FA7B;"> _next</span><span style="color:#F8F8F2;">(context);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cookie认证" tabindex="-1"><a class="header-anchor" href="#cookie认证"><span>Cookie认证</span></a></h2><table><thead><tr><th>场景</th><th>是否适合</th></tr></thead><tbody><tr><td>网站登录（传统页面跳转）</td><td>✅ 非常适合</td></tr><tr><td>前后端分离 API 接口</td><td>❌ 不推荐（推荐用 JWT）</td></tr><tr><td>管理后台 / 内网业务系统</td><td>✅ 合适</td></tr><tr><td>移动端 App、SPA、微信小程序</td><td>❌ Cookie 不可靠</td></tr></tbody></table><p><code>CookieAuthenticationDefaults</code></p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> static</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> CookieAuthenticationDefaults</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#6272A4;">    // 认证方案名</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> const</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> AuthenticationScheme </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">Cookies</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // Cookie名字的前缀</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> static</span><span style="color:#FF79C6;"> readonly</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> CookiePrefix </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">.AspNetCore.</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#6272A4;">    // 登录路径</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> static</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> PathString</span><span style="color:#F8F8F2;"> LoginPath </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> PathString</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/Account/Login</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 注销路径</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> static</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> PathString</span><span style="color:#F8F8F2;"> LogoutPath </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> PathString</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/Account/Logout</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 访问拒绝路径</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> static</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> PathString</span><span style="color:#F8F8F2;"> AccessDeniedPath </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> PathString</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/Account/AccessDenied</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // return url 的参数名</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> static</span><span style="color:#FF79C6;"> readonly</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> ReturnUrlParameter </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">ReturnUrl</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Startup</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> ConfigureServices</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IServiceCollection</span><span style="color:#FFB86C;font-style:italic;"> services</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#6272A4;">        // 注册基于 Cookie 的身份验证选项，并指定默认的身份验证方案</span></span>
<span class="line"><span style="color:#F8F8F2;">        services.</span><span style="color:#50FA7B;">AddOptions</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">CookieAuthenticationOptions</span><span style="color:#F8F8F2;">&gt;(CookieAuthenticationDefaults.AuthenticationScheme)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">Configure</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IDataProtectionProvider</span><span style="color:#F8F8F2;">&gt;((</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">dp</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#6272A4;">                // 配置登录路径，未登录用户尝试访问受保护资源时会被重定向到这里</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.LoginPath </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> PathString</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/Account/Login</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">                // 配置登出路径，用户登出时会调用此路径</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.LogoutPath </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> PathString</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/Account/Logout</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">                // 配置无权限访问资源时的路径</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.AccessDeniedPath </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> PathString</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/Account/AccessDenied</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">                // 配置返回 URL 的查询字符串参数名称</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.ReturnUrlParameter </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">returnUrl</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                // 设置 Cookie 的过期时间为 14 天</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.ExpireTimeSpan </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> TimeSpan.</span><span style="color:#50FA7B;">FromDays</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">14</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">                // 启用滑动过期，每次请求都会重置 Cookie 的过期时间</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.SlidingExpiration </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                // 配置 Cookie 的名称</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.Cookie.Name </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">auth</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">                // 配置 Cookie 的路径</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.Cookie.Path </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">/</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">                // 设置 Cookie 的 SameSite 属性为 Lax，防止 CSRF 攻击</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.Cookie.SameSite </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> SameSiteMode.Lax;</span></span>
<span class="line"><span style="color:#6272A4;">                // 设置 Cookie 为 HttpOnly，防止通过 JavaScript 访问</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.Cookie.HttpOnly </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">                // 设置 Cookie 的安全策略，与请求的安全性相同</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.Cookie.SecurePolicy </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> CookieSecurePolicy.SameAsRequest;</span></span>
<span class="line"><span style="color:#6272A4;">                // 标记 Cookie 为必需</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.Cookie.IsEssential </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">                // 使用分块 Cookie 管理器，用于处理大 Cookie</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.CookieManager </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> ChunkingCookieManager</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                // 如果 DataProtectionProvider 未设置，则使用注入的 IDataProtectionProvider</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.DataProtectionProvider </span><span style="color:#FF79C6;">??=</span><span style="color:#F8F8F2;"> dp;</span></span>
<span class="line"><span style="color:#6272A4;">                // 创建一个数据保护器，用于保护和解密身份验证票据</span></span>
<span class="line"><span style="color:#FF79C6;">                var</span><span style="color:#F8F8F2;"> dataProtector </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> options.DataProtectionProvider.</span><span style="color:#50FA7B;">CreateProtector</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#E9F284;">                    &quot;</span><span style="color:#F1FA8C;">Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationMiddleware</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">                    CookieAuthenticationDefaults.AuthenticationScheme,</span></span>
<span class="line"><span style="color:#E9F284;">                    &quot;</span><span style="color:#F1FA8C;">v2</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">                // 指定用于序列化和反序列化身份验证票据的格式</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.TicketDataFormat </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> TicketDataFormat</span><span style="color:#F8F8F2;">(dataProtector);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                // 在用户登录之前触发的事件</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.Events.OnSigningIn </span><span style="color:#FF79C6;">=</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">                {</span></span>
<span class="line"><span style="color:#6272A4;">                    // 打印正在登录的用户名称</span></span>
<span class="line"><span style="color:#F8F8F2;">                    Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">$&quot;</span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">context</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Principal</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Identity</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Name</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;"> 正在登录...</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">                    return</span><span style="color:#F8F8F2;"> Task.CompletedTask;</span></span>
<span class="line"><span style="color:#F8F8F2;">                };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                // 在用户登录之后触发的事件</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.Events.OnSignedIn </span><span style="color:#FF79C6;">=</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">                {</span></span>
<span class="line"><span style="color:#6272A4;">                    // 打印已登录的用户名称</span></span>
<span class="line"><span style="color:#F8F8F2;">                    Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">$&quot;</span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">context</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Principal</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Identity</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Name</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;"> 已登录</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">                    return</span><span style="color:#F8F8F2;"> Task.CompletedTask;</span></span>
<span class="line"><span style="color:#F8F8F2;">                };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                // 在用户登出时触发的事件</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.Events.OnSigningOut </span><span style="color:#FF79C6;">=</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">                {</span></span>
<span class="line"><span style="color:#6272A4;">                    // 打印注销的用户名称</span></span>
<span class="line"><span style="color:#F8F8F2;">                    Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">$&quot;</span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">context</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">HttpContext</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">User</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Identity</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Name</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;"> 注销</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">                    return</span><span style="color:#F8F8F2;"> Task.CompletedTask;</span></span>
<span class="line"><span style="color:#F8F8F2;">                };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                // 在验证用户身份时触发的事件</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.Events.OnValidatePrincipal </span><span style="color:#FF79C6;">+=</span><span style="color:#FFB86C;font-style:italic;"> context</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">                {</span></span>
<span class="line"><span style="color:#6272A4;">                    // 打印正在验证的用户名称</span></span>
<span class="line"><span style="color:#F8F8F2;">                    Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">$&quot;</span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">context</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Principal</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Identity</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Name</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;"> 验证 Principal</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">                    return</span><span style="color:#F8F8F2;"> Task.CompletedTask;</span></span>
<span class="line"><span style="color:#F8F8F2;">                };</span></span>
<span class="line"><span style="color:#F8F8F2;">            });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 添加身份验证服务，并指定默认的身份验证方案</span></span>
<span class="line"><span style="color:#F8F8F2;">        services.</span><span style="color:#50FA7B;">AddAuthentication</span><span style="color:#F8F8F2;">(CookieAuthenticationDefaults.AuthenticationScheme)</span></span>
<span class="line"><span style="color:#6272A4;">            // 添加基于 Cookie 的身份验证服务</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">AddCookie</span><span style="color:#F8F8F2;">(CookieAuthenticationDefaults.AuthenticationScheme);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>demo</span></a></h3><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// ✅ Program.cs</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Authentication</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Cookies</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> builder </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> WebApplication.</span><span style="color:#50FA7B;">CreateBuilder</span><span style="color:#F8F8F2;">(args);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddAuthentication</span><span style="color:#F8F8F2;">(CookieAuthenticationDefaults.AuthenticationScheme)</span></span>
<span class="line"><span style="color:#F8F8F2;">    .</span><span style="color:#50FA7B;">AddCookie</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    {   </span></span>
<span class="line"><span style="color:#6272A4;">      // 登录页路径</span></span>
<span class="line"><span style="color:#F8F8F2;">        options.LoginPath </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">/account/login</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">        // 访问拒绝页路径</span></span>
<span class="line"><span style="color:#F8F8F2;">        options.AccessDeniedPath </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">/account/denied</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">        // 认证票据（authentication ticket）的有效期</span></span>
<span class="line"><span style="color:#F8F8F2;">        options.ExpireTimeSpan </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> TimeSpan.</span><span style="color:#50FA7B;">FromMinutes</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">30</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddAuthorization</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddControllersWithViews</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> builder.</span><span style="color:#50FA7B;">Build</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">UseStaticFiles</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">UseRouting</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">UseAuthentication</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">UseAuthorization</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">MapControllerRoute</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    name</span><span style="color:#F8F8F2;">: </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">default</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    pattern</span><span style="color:#F8F8F2;">: </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">{controller=Home}/{action=Index}/{id?}</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">Run</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// ✅ Controllers/AccountController.cs</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Authentication</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Authentication</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Cookies</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Authorization</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Mvc</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> System</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Security</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Claims</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> AccountController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">Controller</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/account/login</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> Login</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#50FA7B;"> View</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpPost</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/account/login</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> async</span><span style="color:#8BE9FD;font-style:italic;"> Task</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IActionResult</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#50FA7B;">Login</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> username</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> password</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#6272A4;">        // 示例：账号密码验证通过（实际需查数据库）</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (username </span><span style="color:#FF79C6;">==</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">admin</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> &amp;&amp;</span><span style="color:#F8F8F2;"> password </span><span style="color:#FF79C6;">==</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">123456</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#FF79C6;">            var</span><span style="color:#F8F8F2;"> claims </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> List</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Claim</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#FF79C6;">                new</span><span style="color:#8BE9FD;font-style:italic;"> Claim</span><span style="color:#F8F8F2;">(ClaimTypes.Name, username),</span></span>
<span class="line"><span style="color:#FF79C6;">                new</span><span style="color:#8BE9FD;font-style:italic;"> Claim</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">role</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">admin</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            };</span></span>
<span class="line"><span style="color:#FF79C6;">            var</span><span style="color:#F8F8F2;"> identity </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> ClaimsIdentity</span><span style="color:#F8F8F2;">(claims, CookieAuthenticationDefaults.AuthenticationScheme);</span></span>
<span class="line"><span style="color:#FF79C6;">            var</span><span style="color:#F8F8F2;"> principal </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> ClaimsPrincipal</span><span style="color:#F8F8F2;">(identity);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">            await</span><span style="color:#F8F8F2;"> HttpContext.</span><span style="color:#50FA7B;">SignInAsync</span><span style="color:#F8F8F2;">(CookieAuthenticationDefaults.AuthenticationScheme, principal);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">            return</span><span style="color:#50FA7B;"> Redirect</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/home/secure</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        ViewBag.Error </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">用户名或密码错误</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> View</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">Authorize</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/account/logout</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> async</span><span style="color:#8BE9FD;font-style:italic;"> Task</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IActionResult</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#50FA7B;">Logout</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        await</span><span style="color:#F8F8F2;"> HttpContext.</span><span style="color:#50FA7B;">SignOutAsync</span><span style="color:#F8F8F2;">(CookieAuthenticationDefaults.AuthenticationScheme);</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Redirect</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/account/login</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/account/denied</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> Denied</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#50FA7B;"> Content</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">权限不足</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// ✅ Controllers/HomeController.cs</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Authorization</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Mvc</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> HomeController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">Controller</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> Index</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#50FA7B;"> View</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">Authorize</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> Secure</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#50FA7B;"> Content</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">$&quot;</span><span style="color:#F1FA8C;">欢迎你，</span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">User</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Identity</span><span style="color:#FF79C6;">?</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Name</span><span style="color:#FF79C6;">}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jwtbearer认证" tabindex="-1"><a class="header-anchor" href="#jwtbearer认证"><span>JwtBearer认证</span></a></h2><p>Jwt是一个开放行业标准（RFC7519），英文为Json Web Token，译为“Json网络令牌”，它可以以紧凑、URL安全的方式在各方之间传递声明（claims）。</p><p>在Jwt中，声明会被编码为Json对象，用作Jws(Json Web Signature)结构的负载（payload），或作为Jwe（Json Web Encryption）结构的明文，这就使得声明可以使用MAC（Message Authentication Code）进行数字签名或完整性保护和加密。</p><p>：：：info 跨站</p><p>传统的cookie只能实现跨域，而不能实现跨站（如my.abc.com和you.xyz.com），而Jwt原生支持跨域、跨站，因为它要求每次请求时，都要在请求头中携带token。 :::</p><div class="hint-container info"><p class="hint-container-title">跨服务器</p><p>在当前应用基本都是集群部署的情况下，如果使用传统cookie + session的认证方式，为了实现session跨服务器共享，还必须引入分布式缓存中间件。而Jwt不需要分布式缓存中间件，因为它可以不存储在服务器端。</p></div><div class="hint-container info"><p class="hint-container-title">Native App友好</p><p>对于原生平台（如iOS、Android、WP）的App，没有浏览器的支持，Cookie丧失了它的优势，而使用Jwt就很简单。</p></div><h3 id="jwt结构" tabindex="-1"><a class="header-anchor" href="#jwt结构"><span>Jwt结构</span></a></h3><p>Jwt由三部分组成，分别是头部（Header）、载荷（Payload）和签名（Signature），三部分之间使用点（.）分隔，格式如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span>Header.Payload.Signature</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="header" tabindex="-1"><a class="header-anchor" href="#header"><span>Header</span></a></h4><p>头部包含两部分信息：类型（typ）和算法（alg），示例如下：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#8BE9FE;">  &quot;</span><span style="color:#8BE9FD;">typ</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">JWT</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#8BE9FE;">  &quot;</span><span style="color:#8BE9FD;">alg</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">HS256</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="payload" tabindex="-1"><a class="header-anchor" href="#payload"><span>Payload</span></a></h4><p>载荷包含声明（claims），声明是关于实体（通常是用户）和其他数据的声明，声明包含三个部分：注册声明（Registered Claims）、公共声明和私有声明。示例如下：</p><ul><li><p><strong>注册声明（Registered Claims）</strong></p><ul><li>iss （Issuer）：发行者</li><li>exp （Expiration Time）：过期时间</li><li>sub （Subject）：主题（通常是用户ID）</li><li>aud （Audience）：受众</li><li>iat （Issued At）：发行时间</li><li>nbf （Not Before）：生效时间</li><li>jti （JWT ID）：JWT ID</li></ul></li><li><p><strong>公共声明（Public Claims）</strong></p><ul><li>可以添加任何自定义声明</li></ul></li><li><p><strong>私有声明（Private Claims）</strong></p><ul><li>可以添加任何自定义声明，应用程序内部使用的声明，不会公开</li></ul></li></ul><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#8BE9FE;">  &quot;</span><span style="color:#8BE9FD;">sub</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">1234567890</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#8BE9FE;">  &quot;</span><span style="color:#8BE9FD;">name</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">John Doe</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#8BE9FE;">  &quot;</span><span style="color:#8BE9FD;">admin</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> true</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="signature" tabindex="-1"><a class="header-anchor" href="#signature"><span>Signature</span></a></h4><p>签名是对头部和载荷进行签名，防止数据被篡改。签名算法如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span>HMACSHA256(</span></span>
<span class="line"><span>  base64UrlEncode(header) + &quot;.&quot; +</span></span>
<span class="line"><span>  base64UrlEncode(payload),</span></span>
<span class="line"><span>  secret)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bearer" tabindex="-1"><a class="header-anchor" href="#bearer"><span>Bearer</span></a></h3><p>Bearer 是一种身份验证方法，常用于 HTTP 请求头中的 Authorization 字段，它指明请求携带的是一个 Bearer Token。在认证过程中，Bearer Token 通常是一个 JWT（JSON Web Token） 或其他类型的令牌，用户或客户端在成功登录后会获得这个令牌，并且可以在后续的 API 请求中通过 Authorization 请求头携带该令牌，以证明自己的身份。</p><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span>Authorization: Bearer &lt;token&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>特点</strong></p><ol><li>无状态：</li></ol><ul><li>• 令牌本身包含了所有必要的信息，服务器不需要存储会话信息。</li><li>• 这使得 Bearer Token 非常适合无状态的分布式系统。</li></ul><ol start="2"><li>可扩展性：</li></ol><ul><li>• 由于不需要服务器存储会话信息，Bearer Token 可以轻松扩展到多个服务器。</li></ul><ol start="3"><li>安全性：</li></ol><ul><li>• 令牌通常包含签名，防止被篡改。</li><li>• 令牌可以设置过期时间，减少被滥用的风险。</li></ul><ol start="4"><li>灵活性：</li></ol><ul><li>• 令牌可以包含任意的声明（如用户角色、权限等），适用于多种应用场景</li></ul><p><strong>工作流程</strong></p><ul><li><p>用户登录：用户输入用户名和密码，通过后端验证后，后端生成一个 JWT，并将其作为 Bearer Token 返回给前端（客户端）。</p></li><li><p>客户端发送请求：客户端在后续请求中，将 JWT 放在 Authorization 请求头中，以 Bearer Token 的形式发送给服务器：</p></li></ul><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span>Authorization: Bearer &lt;JWT&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>服务器验证：服务器接收到请求后，解析出 JWT 并验证其有效性，确保用户身份合法。如果验证成功，则授权访问请求的资源。</li></ul><h3 id="jwt使用" tabindex="-1"><a class="header-anchor" href="#jwt使用"><span>Jwt使用</span></a></h3><p>安装包</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">Install</span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;">Package IdentityModel</span></span>
<span class="line"><span style="color:#F8F8F2;">Install</span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;">Package System.IdentityModel.Tokens.Jwt</span></span>
<span class="line"><span style="color:#F8F8F2;">Install</span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;">Package Microsoft.AspNetCore.Authentication.JwtBearer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置选项类</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> JwtOptions</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#6272A4;">    // JWT 配置的名称，用于标识该配置</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> const</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Name </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">Jwt</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 默认的编码方式，使用 UTF-8 编码</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> readonly</span><span style="color:#FF79C6;"> static</span><span style="color:#8BE9FD;font-style:italic;"> Encoding</span><span style="color:#F8F8F2;"> DefaultEncoding </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Encoding.UTF8;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 默认的过期时间（以分钟为单位），默认为 30 分钟</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> readonly</span><span style="color:#FF79C6;"> static</span><span style="color:#FF79C6;"> double</span><span style="color:#F8F8F2;"> DefaultExpiresMinutes </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 30d</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // JWT 的受众（Audience），指定谁可以接收这个 JWT</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Audience { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // JWT 的发行者（Issuer），指定谁发行了这个 JWT</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Issuer { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // JWT 的过期时间（以分钟为单位），默认值为 DefaultExpiresMinutes</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> double</span><span style="color:#F8F8F2;"> ExpiresMinutes { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; } </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> DefaultExpiresMinutes;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 用于编码和解码的编码方式，默认值为 DefaultEncoding</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> Encoding</span><span style="color:#F8F8F2;"> Encoding { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; } </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> DefaultEncoding;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 对称安全密钥的字符串表示，用于签名和验证 JWT</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> SymmetricSecurityKeyString { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 通过 SymmetricSecurityKeyString 生成的对称安全密钥</span></span>
<span class="line"><span style="color:#6272A4;">    // 使用 Encoding.GetBytes 方法将字符串转换为字节数组</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> SymmetricSecurityKey</span><span style="color:#F8F8F2;"> SymmetricSecurityKey </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#FF79C6;"> new</span><span style="color:#F8F8F2;">(Encoding.</span><span style="color:#50FA7B;">GetBytes</span><span style="color:#F8F8F2;">(SymmetricSecurityKeyString));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Startup</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> ConfigureServices</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IServiceCollection</span><span style="color:#FFB86C;font-style:italic;"> services</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#6272A4;">        // 配置 JwtOptions，从 appsettings.json 中加载 JWT 配置</span></span>
<span class="line"><span style="color:#F8F8F2;">        services.</span><span style="color:#50FA7B;">Configure</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">JwtOptions</span><span style="color:#F8F8F2;">&gt;(Configuration.</span><span style="color:#50FA7B;">GetSection</span><span style="color:#F8F8F2;">(JwtOptions.Name));</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#6272A4;">        // 从配置中获取 JwtOptions 实例</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> jwtOptions </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Configuration.</span><span style="color:#50FA7B;">GetSection</span><span style="color:#F8F8F2;">(JwtOptions.Name).</span><span style="color:#50FA7B;">Get</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">JwtOptions</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 注册一个单例服务，用于生成签名凭据</span></span>
<span class="line"><span style="color:#6272A4;">        // 使用 jwtOptions 中的对称安全密钥和 HMAC SHA256 算法</span></span>
<span class="line"><span style="color:#F8F8F2;">        services.</span><span style="color:#50FA7B;">AddSingleton</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">sp</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> SigningCredentials</span><span style="color:#F8F8F2;">(jwtOptions.SymmetricSecurityKey, SecurityAlgorithms.HmacSha256Signature));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 注册一个作用域服务，用于处理 JWT 身份验证事件</span></span>
<span class="line"><span style="color:#6272A4;">        // AppJwtBearerEvents 类可以自定义 JWT 身份验证的事件处理逻辑</span></span>
<span class="line"><span style="color:#F8F8F2;">        services.</span><span style="color:#50FA7B;">AddScoped</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">AppJwtBearerEvents</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 添加身份验证服务，并指定默认的身份验证方案为 JWT Bearer</span></span>
<span class="line"><span style="color:#F8F8F2;">        services.</span><span style="color:#50FA7B;">AddAuthentication</span><span style="color:#F8F8F2;">(JwtBearerDefaults.AuthenticationScheme)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">AddJwtBearer</span><span style="color:#F8F8F2;">(JwtBearerDefaults.AuthenticationScheme, </span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#6272A4;">                // 配置 JWT 验证参数</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.TokenValidationParameters </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> TokenValidationParameters</span></span>
<span class="line"><span style="color:#F8F8F2;">                {</span></span>
<span class="line"><span style="color:#6272A4;">                    // 允许的签名算法</span></span>
<span class="line"><span style="color:#F8F8F2;">                    ValidAlgorithms </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#F8F8F2;">[] { SecurityAlgorithms.HmacSha256, SecurityAlgorithms.RsaSha256 },</span></span>
<span class="line"><span style="color:#6272A4;">                    // 允许的令牌类型</span></span>
<span class="line"><span style="color:#F8F8F2;">                    ValidTypes </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#F8F8F2;">[] { JwtConstants.HeaderType },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                    // 验证发行者</span></span>
<span class="line"><span style="color:#F8F8F2;">                    ValidIssuer </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> jwtOptions.Issuer,</span></span>
<span class="line"><span style="color:#F8F8F2;">                    ValidateIssuer </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                    // 验证受众</span></span>
<span class="line"><span style="color:#F8F8F2;">                    ValidAudience </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> jwtOptions.Audience,</span></span>
<span class="line"><span style="color:#F8F8F2;">                    ValidateAudience </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                    // 验证签名密钥</span></span>
<span class="line"><span style="color:#F8F8F2;">                    IssuerSigningKey </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> jwtOptions.SymmetricSecurityKey,</span></span>
<span class="line"><span style="color:#F8F8F2;">                    ValidateIssuerSigningKey </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                    // 验证令牌的生命周期</span></span>
<span class="line"><span style="color:#F8F8F2;">                    ValidateLifetime </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                    // 要求令牌必须签名</span></span>
<span class="line"><span style="color:#F8F8F2;">                    RequireSignedTokens </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#6272A4;">                    // 要求令牌必须有过期时间</span></span>
<span class="line"><span style="color:#F8F8F2;">                    RequireExpirationTime </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                    // 指定名称声明的类型</span></span>
<span class="line"><span style="color:#F8F8F2;">                    NameClaimType </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> JwtClaimTypes.Name,</span></span>
<span class="line"><span style="color:#6272A4;">                    // 指定角色声明的类型</span></span>
<span class="line"><span style="color:#F8F8F2;">                    RoleClaimType </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> JwtClaimTypes.Role,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                    // 设置时钟偏差为 0，避免因服务器时间不同步导致的验证失败</span></span>
<span class="line"><span style="color:#F8F8F2;">                    ClockSkew </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> TimeSpan.Zero,</span></span>
<span class="line"><span style="color:#F8F8F2;">                };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                // 保存令牌到请求上下文中，便于后续访问</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.SaveToken </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                // 清空默认的安全令牌验证器</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.SecurityTokenValidators.</span><span style="color:#50FA7B;">Clear</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">                // 添加自定义的 JWT 安全令牌处理器</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.SecurityTokenValidators.</span><span style="color:#50FA7B;">Add</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> JwtSecurityTokenHandler</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">                // 指定自定义的 JWT 身份验证事件处理器</span></span>
<span class="line"><span style="color:#F8F8F2;">                options.EventsType </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> typeof</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">AppJwtBearerEvents</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            });</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="demo-1" tabindex="-1"><a class="header-anchor" href="#demo-1"><span>demo</span></a></h3><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// ✅ Program.cs</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Authentication</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">JwtBearer</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">IdentityModel</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Tokens</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">OpenApi</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Models</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> System</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Text</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> builder </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> WebApplication.</span><span style="color:#50FA7B;">CreateBuilder</span><span style="color:#F8F8F2;">(args);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddControllers</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 添加 JWT 认证服务</span></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> jwtKey </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">MySuperSecretKey12345</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">; </span><span style="color:#6272A4;">// 应保存在配置文件中</span></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> key </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> SymmetricSecurityKey</span><span style="color:#F8F8F2;">(Encoding.UTF8.</span><span style="color:#50FA7B;">GetBytes</span><span style="color:#F8F8F2;">(jwtKey));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddAuthentication</span><span style="color:#F8F8F2;">(JwtBearerDefaults.AuthenticationScheme)</span></span>
<span class="line"><span style="color:#F8F8F2;">    .</span><span style="color:#50FA7B;">AddJwtBearer</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        options.TokenValidationParameters </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> TokenValidationParameters</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            ValidateIssuer </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">            ValidateAudience </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">            ValidateLifetime </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">            ValidateIssuerSigningKey </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">            ValidIssuer </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">myapp</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">            ValidAudience </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">myapp-users</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">            IssuerSigningKey </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> key,</span></span>
<span class="line"><span style="color:#F8F8F2;">            ClockSkew </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> TimeSpan.Zero</span></span>
<span class="line"><span style="color:#F8F8F2;">        };</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddAuthorization</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 添加 Swagger + JWT 安全支持</span></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddEndpointsApiExplorer</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddSwaggerGen</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">c</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    c.</span><span style="color:#50FA7B;">SwaggerDoc</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">v1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> OpenApiInfo</span><span style="color:#F8F8F2;"> { Title </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">JWT Auth API</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, Version </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">v1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"><span style="color:#FF79C6;">    var</span><span style="color:#F8F8F2;"> jwtSecurityScheme </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> OpenApiSecurityScheme</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        BearerFormat </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">JWT</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        Name </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">Authorization</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        In </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> ParameterLocation.Header,</span></span>
<span class="line"><span style="color:#F8F8F2;">        Type </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> SecuritySchemeType.Http,</span></span>
<span class="line"><span style="color:#F8F8F2;">        Scheme </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">bearer</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        Description </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">输入: Bearer {你的token}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        Reference </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> OpenApiReference</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            Id </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> JwtBearerDefaults.AuthenticationScheme,</span></span>
<span class="line"><span style="color:#F8F8F2;">            Type </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> ReferenceType.SecurityScheme</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#F8F8F2;">    c.</span><span style="color:#50FA7B;">AddSecurityDefinition</span><span style="color:#F8F8F2;">(jwtSecurityScheme.Reference.Id, jwtSecurityScheme);</span></span>
<span class="line"><span style="color:#F8F8F2;">    c.</span><span style="color:#50FA7B;">AddSecurityRequirement</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> OpenApiSecurityRequirement</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        { jwtSecurityScheme, Array.</span><span style="color:#50FA7B;">Empty</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">&gt;() }</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 添加内存缓存保存 RefreshToken（可替换为 Redis）</span></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddMemoryCache</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> builder.</span><span style="color:#50FA7B;">Build</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">UseSwagger</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">UseSwaggerUI</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">UseRouting</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">UseAuthentication</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">UseAuthorization</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">MapControllers</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">Run</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// ✅ Models/LoginRequest.cs</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> LoginRequest</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Username { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Password { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// ✅ Models/TokenResponse.cs</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> TokenResponse</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> AccessToken { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> RefreshToken { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// ✅ Controllers/AuthController.cs</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Authorization</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">AspNetCore</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Mvc</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Extensions</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Caching</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Memory</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">IdentityModel</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Tokens</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> System</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">IdentityModel</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Tokens</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Jwt</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> System</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Security</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Claims</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> System</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Text</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">ApiController</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[controller]</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> AuthController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> IConfiguration</span><span style="color:#F8F8F2;"> _config;</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> IMemoryCache</span><span style="color:#F8F8F2;"> _cache;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> AuthController</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IConfiguration</span><span style="color:#FFB86C;font-style:italic;"> config</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">IMemoryCache</span><span style="color:#FFB86C;font-style:italic;"> cache</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _config </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> config;</span></span>
<span class="line"><span style="color:#F8F8F2;">        _cache </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> cache;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpPost</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">login</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> Login</span><span style="color:#F8F8F2;">([</span><span style="color:#8BE9FD;font-style:italic;">FromBody</span><span style="color:#F8F8F2;">] </span><span style="color:#8BE9FD;font-style:italic;">LoginRequest</span><span style="color:#FFB86C;font-style:italic;"> request</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (request.Username </span><span style="color:#FF79C6;">==</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">admin</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> &amp;&amp;</span><span style="color:#F8F8F2;"> request.Password </span><span style="color:#FF79C6;">==</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">123456</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#FF79C6;">            var</span><span style="color:#F8F8F2;"> accessToken </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> GenerateToken</span><span style="color:#F8F8F2;">(request.Username);</span></span>
<span class="line"><span style="color:#FF79C6;">            var</span><span style="color:#F8F8F2;"> refreshToken </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Guid.</span><span style="color:#50FA7B;">NewGuid</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">ToString</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">N</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            _cache.</span><span style="color:#50FA7B;">Set</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">refresh_</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> +</span><span style="color:#F8F8F2;"> refreshToken, request.Username, TimeSpan.</span><span style="color:#50FA7B;">FromHours</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">            return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> TokenResponse</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F8F8F2;">                AccessToken </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> accessToken,</span></span>
<span class="line"><span style="color:#F8F8F2;">                RefreshToken </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> refreshToken</span></span>
<span class="line"><span style="color:#F8F8F2;">            });</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Unauthorized</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">用户名或密码错误</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpPost</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">refresh</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> RefreshToken</span><span style="color:#F8F8F2;">([</span><span style="color:#8BE9FD;font-style:italic;">FromQuery</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> refreshToken</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (_cache.</span><span style="color:#50FA7B;">TryGetValue</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">refresh_</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> +</span><span style="color:#F8F8F2;"> refreshToken, </span><span style="color:#FF79C6;">out</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;">? username))</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#FF79C6;">            var</span><span style="color:#F8F8F2;"> newToken </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> GenerateToken</span><span style="color:#F8F8F2;">(username);</span></span>
<span class="line"><span style="color:#FF79C6;">            return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> TokenResponse</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F8F8F2;">                AccessToken </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> newToken,</span></span>
<span class="line"><span style="color:#F8F8F2;">                RefreshToken </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> refreshToken </span><span style="color:#6272A4;">// 可返回旧的或生成新 token</span></span>
<span class="line"><span style="color:#F8F8F2;">            });</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Unauthorized</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">无效的 refresh token</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">Authorize</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">userinfo</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> UserInfo</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> username </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> User.Identity</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;">.Name;</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> role </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> User.</span><span style="color:#50FA7B;">FindFirst</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">role</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;">.Value;</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;"> { username, role });</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> string</span><span style="color:#50FA7B;"> GenerateToken</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> username</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> claims </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#F8F8F2;">[]</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#FF79C6;">            new</span><span style="color:#8BE9FD;font-style:italic;"> Claim</span><span style="color:#F8F8F2;">(ClaimTypes.Name, username),</span></span>
<span class="line"><span style="color:#FF79C6;">            new</span><span style="color:#8BE9FD;font-style:italic;"> Claim</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">role</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">admin</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">),</span></span>
<span class="line"><span style="color:#FF79C6;">            new</span><span style="color:#8BE9FD;font-style:italic;"> Claim</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">ip</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, HttpContext.Connection.RemoteIpAddress</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">ToString</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">??</span><span style="color:#E9F284;"> &quot;&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> key </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> SymmetricSecurityKey</span><span style="color:#F8F8F2;">(Encoding.UTF8.</span><span style="color:#50FA7B;">GetBytes</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">MySuperSecretKey12345</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> creds </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> SigningCredentials</span><span style="color:#F8F8F2;">(key, SecurityAlgorithms.HmacSha256);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> token </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> JwtSecurityToken</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">            issuer</span><span style="color:#F8F8F2;">: </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">myapp</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">            audience</span><span style="color:#F8F8F2;">: </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">myapp-users</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">            claims</span><span style="color:#F8F8F2;">: claims,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">            expires</span><span style="color:#F8F8F2;">: DateTime.UtcNow.</span><span style="color:#50FA7B;">AddHours</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">),</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">            signingCredentials</span><span style="color:#F8F8F2;">: creds);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> JwtSecurityTokenHandler</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">WriteToken</span><span style="color:#F8F8F2;">(token);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,55)]))}const c=n(p,[["render",o],["__file","authentication.html.vue"]]),F=JSON.parse('{"path":"/dotnet/authentication.html","title":"身份认证 Authentication","lang":"en-US","frontmatter":{"title":"身份认证 Authentication","date":"2025-04-20T00:00:00.000Z","category":["DotNet"],"description":"Authentication（身份验证） 是一个核心的安全机制，用于验证用户的身份。它的主要目的是确定请求的发起者是否是他们声称的那个人。身份验证是安全体系中的第一步 AuthenticationMiddleware Cookie认证 CookieAuthenticationDefaults demo JwtBearer认证 Jwt是一个开放行业标准（...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/dotnet/authentication.html"}],["meta",{"property":"og:title","content":"身份认证 Authentication"}],["meta",{"property":"og:description","content":"Authentication（身份验证） 是一个核心的安全机制，用于验证用户的身份。它的主要目的是确定请求的发起者是否是他们声称的那个人。身份验证是安全体系中的第一步 AuthenticationMiddleware Cookie认证 CookieAuthenticationDefaults demo JwtBearer认证 Jwt是一个开放行业标准（..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-04-23T08:18:43.000Z"}],["meta",{"property":"article:published_time","content":"2025-04-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-23T08:18:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"身份认证 Authentication\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-04-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-23T08:18:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"git":{"createdTime":1745396323000,"updatedTime":1745396323000,"contributors":[{"name":"luxiag","username":"luxiag","email":"luxiag@qq.com","commits":1,"url":"https://github.com/luxiag"}]},"readingTime":{"minutes":10.23,"words":3068},"filePathRelative":"dotnet/authentication.md","localizedDate":"April 20, 2025","excerpt":"<p>Authentication（身份验证） 是一个核心的安全机制，用于验证用户的身份。它的主要目的是确定请求的发起者是否是他们声称的那个人。身份验证是安全体系中的第一步</p>\\n<div class=\\"language-csharp line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"csharp\\" data-title=\\"csharp\\" style=\\"background-color:#282A36;color:#F8F8F2\\"><pre class=\\"shiki dracula vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#F8F8F2\\">app.</span><span style=\\"color:#50FA7B\\">UseAuthentication</span><span style=\\"color:#F8F8F2\\">();</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{c as comp,F as data};
