import{l as $,m as J,as as Z,n as g,o as I,W as O,at as N,r as U,i as K,B as D,h as m,au as k,a5 as M,s as S,av as P,aw as T,ax as Q}from"./three.module-BzA_QsZm.js";import{g as A}from"./index-DjKJqAo0.js";import{O as x}from"./OrbitControls-DTSS7XTZ.js";import{R as E}from"./RGBELoader-DZo1sXki.js";import{G as _}from"./GLTFLoader-CQSwUyoN.js";import{W as X}from"./Water2-Bv9AerBY.js";import{_ as Y,h as z,i as R,c as ss,b as ns,d as u,e as as,o as ls}from"./app-YFqS9NBE.js";const G=`
uniform vec3 uColor;
void main(){
    float distanceToCenter = distance(gl_PointCoord,vec2(0.5));
    float strength = distanceToCenter*2.0;
    strength = 1.0-strength;
    strength = pow(strength,1.5);
    gl_FragColor = vec4(uColor,strength);
}

`,L=`
attribute vec3 aStep;

uniform float uTime;
uniform float uSize;
void main(){
    vec4 modelPosition = modelMatrix * vec4( position, 1.0 );
    modelPosition.xyz += (aStep*uTime);
    vec4 viewPosition = viewMatrix * modelPosition;
    gl_Position =  projectionMatrix * viewPosition;
    // 设置顶点大小
    gl_PointSize =uSize;
}
`,j=`

uniform vec3 uColor;
void main(){
    float distanceToCenter = distance(gl_PointCoord,vec2(0.5));
    float strength = distanceToCenter*2.0;
    strength = 1.0-strength;
    strength = pow(strength,1.5);
    gl_FragColor = vec4(uColor,strength);
}

`,H=`

attribute float aScale;
attribute vec3 aRandom;
uniform float uTime;
uniform float uSize;
void main(){
    vec4 modelPosition = modelMatrix * vec4( position, 1.0 );
    modelPosition.xyz+=aRandom*uTime*10.0;
    vec4 viewPosition = viewMatrix * modelPosition;
    gl_Position =  projectionMatrix * viewPosition;

    // 设置顶点大小
    gl_PointSize =uSize*aScale-(uTime*20.0);

}
`,es={__name:"threejs-firework.html",setup(q,{expose:t}){t();const F=z();class f{constructor(n,o,r={x:0,y:0,z:0}){this.color=new K(n),this.startGeometry=new D;const a=new Float32Array(3);a[0]=r.x,a[1]=r.y,a[2]=r.z,this.startGeometry.setAttribute("position",new m(a,3));const c=new Float32Array(3);c[0]=o.x-r.x,c[1]=o.y-r.y,c[2]=o.z-r.x,this.startGeometry.setAttribute("aStep",new m(c,3)),this.startMaterial=new g({vertexShader:L,fragmentShader:G,transparent:!0,blending:k,depthWrite:!1,uniforms:{uTime:{value:0},uSize:{value:20},uColor:{value:this.color}}}),this.startPoint=new M(this.startGeometry,this.startMaterial),this.clock=new S,this.fireworkGeometry=new D,this.FireworksCount=180+Math.floor(Math.random()*180);const y=new Float32Array(this.FireworksCount*3),h=new Float32Array(this.FireworksCount),d=new Float32Array(this.FireworksCount*3);for(let s=0;s<this.FireworksCount;s++){y[s*3+0]=o.x,y[s*3+1]=o.y,y[s*3+2]=o.z,h[s]=Math.random();let v=Math.random()*2*Math.PI,l=Math.random()*2*Math.PI,e=Math.random();d[s*3+0]=e*Math.sin(v)+e*Math.sin(l),d[s*3+1]=e*Math.cos(v)+e*Math.cos(l),d[s*3+2]=e*Math.sin(v)+e*Math.cos(l)}this.fireworkGeometry.setAttribute("position",new m(y,3)),this.fireworkGeometry.setAttribute("aScale",new m(h,1)),this.fireworkGeometry.setAttribute("aRandom",new m(d,3)),this.fireworksMaterial=new g({uniforms:{uTime:{value:0},uSize:{value:0},uColor:{value:this.color}},transparent:!0,blending:k,depthWrite:!1,vertexShader:H,fragmentShader:j}),this.fireworks=new M(this.fireworkGeometry,this.fireworksMaterial),this.linstener=new P,this.linstener1=new P,this.sound=new T(this.linstener),this.sendSound=new T(this.linstener1);const b=new Q;b.load(`./assets/audio/pow${Math.floor(Math.random()*4)+1}.ogg`,s=>{this.sound.setBuffer(s),this.sound.setLoop(!1),this.sound.setVolume(1)}),b.load("./assets/audio/send.mp3",s=>{this.sendSound.setBuffer(s),this.sendSound.setLoop(!1),this.sendSound.setVolume(1)})}addScene(n,o){n.add(this.startPoint),n.add(this.fireworks),this.scene=n}update(){const n=this.clock.getElapsedTime();if(n>.2&&n<1)!this.sendSound.isPlaying&&!this.sendSoundplay&&(this.sendSound.play(),this.sendSoundplay=!0),this.startMaterial.uniforms.uTime.value=n,this.startMaterial.uniforms.uSize.value=20;else if(n>.2){const o=n-1;if(this.startMaterial.uniforms.uSize.value=0,this.startPoint.clear(),this.startGeometry.dispose(),this.startMaterial.dispose(),!this.sound.isPlaying&&!this.play&&(this.sound.play(),this.play=!0),this.fireworksMaterial.uniforms.uSize.value=20,this.fireworksMaterial.uniforms.uTime.value=o,o>5)return this.fireworksMaterial.uniforms.uSize.value=0,this.fireworks.clear(),this.fireworkGeometry.dispose(),this.fireworksMaterial.dispose(),this.scene.remove(this.fireworks),this.scene.remove(this.startPoint),"remove"}}}const C=()=>{const i=new $,n=new J(90,2,.1,1e3);i.add(n),new E().loadAsync("./assets/textures/2k.hdr").then(l=>{l.mapping=Z,i.background=l,i.environment=l});const r=new g({vertexShader:`
  
precision lowp float;
varying vec4 vPosition;
varying vec4 gPosition;
void main(){
    vec4 modelPosition = modelMatrix * vec4( position, 1.0 );

    vPosition = modelPosition;
    gPosition = vec4( position, 1.0 );
    gl_Position =  projectionMatrix * viewMatrix * modelPosition;

}

  `,fragmentShader:`
precision lowp float;
varying vec4 vPosition;
varying vec4 gPosition;

void main(){
    vec4 redColor = vec4(1,0,0,1);
    vec4 yellowColor = vec4(1,1,0.5,1);
    vec4 mixColor = mix(yellowColor,redColor,gPosition.y/3.0);
    if(gl_FrontFacing){
        gl_FragColor = vec4(mixColor.xyz-(vPosition.y-20.0)/80.0-0.1,1);
        // gl_FragColor = vec4(1,1,1,1);
    }else{
        gl_FragColor = vec4(mixColor.xyz,1);
    }
}
  `,uniforms:{},side:I}),a=new O;a.outputEncoding=void 0,a.toneMapping=N,a.toneMappingExposure=.1;const c=new _;let y=null;c.load("./assets/models/newyears_min.glb",l=>{}),c.load("./assets/models/flyLight.glb",l=>{y=l.scene.children[0],y.material=r;for(let e=0;e<150;e++){let p=l.scene.clone(!0),w=(Math.random()-.5)*300,W=(Math.random()-.5)*300,V=Math.random()*60+5;p.position.set(w,V,W),A.to(p.rotation,{y:2*Math.PI,duration:10+Math.random()*30,repeat:-1}),A.to(p.position,{x:"+="+Math.random()*5,y:"+="+Math.random()*20,yoyo:!0,duration:5+Math.random()*10,repeat:-1}),i.add(p)}}),a.setSize(F.value.offsetWidth,F.value.offsetWidth/2),F.value.appendChild(a.domElement);let h=()=>{let l=`hsl(${Math.floor(Math.random()*360)},100%,80%)`,e={x:(Math.random()-.5)*40,z:-(Math.random()-.5)*40,y:3+Math.random()*15},p=new f(l,e);p.addScene(i,n),s.push(p)};F.value.addEventListener("click",h),window.addEventListener("resize",()=>{a.setSize(F.value.offsetWidth,F.value.offsetWidth/2),a.setPixelRatio(window.devicePixelRatio)});const d=new x(n,a.domElement);d.enableDamping=!0;const b=new S;let s=[];function v(l){d.update(),b.getElapsedTime(),s.forEach((e,p)=>{e.update()=="remove"&&s.splice(p,1)}),requestAnimationFrame(v),a.render(i,n)}v()};R(()=>{C()});const B={fireworkRef:F,startPointFragment:G,startPointVertex:L,fireworksFragment:j,fireworksVertex:H,Fireworks:f,initFireWorkRef:C,ref:z,onMounted:R,get THREE(){return U},get gsap(){return A},get OrbitControls(){return x},get RGBELoader(){return E},get GLTFLoader(){return _},get Water(){return X}};return Object.defineProperty(B,"__isScriptSetup",{enumerable:!1,value:!0}),B}},os={ref:"fireworkRef"};function ps(q,t,F,f,C,B){return ls(),ss("div",null,[t[0]||(t[0]=ns(`<p><code>Fragment</code></p><div class="language-glsl line-numbers-mode" data-highlighter="shiki" data-ext="glsl" data-title="glsl" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">uniform</span><span style="color:#FF79C6;"> vec3</span><span style="color:#F8F8F2;"> uColor;</span></span>
<span class="line"><span style="color:#FF79C6;">void</span><span style="color:#50FA7B;"> main</span><span style="color:#F8F8F2;">(){</span></span>
<span class="line"><span style="color:#FF79C6;">    float</span><span style="color:#F8F8F2;"> distanceToCenter </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> distance</span><span style="color:#F8F8F2;">(gl_PointCoord,</span><span style="color:#50FA7B;">vec2</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0.5</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#FF79C6;">    float</span><span style="color:#F8F8F2;"> strength </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> distanceToCenter</span><span style="color:#FF79C6;">*</span><span style="color:#BD93F9;">2.0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    strength </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 1.0</span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;">strength;</span></span>
<span class="line"><span style="color:#F8F8F2;">    strength </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> pow</span><span style="color:#F8F8F2;">(strength,</span><span style="color:#BD93F9;">1.5</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    gl_FragColor </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> vec4</span><span style="color:#F8F8F2;">(uColor,strength);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Vertex</code></p><div class="language-glsl line-numbers-mode" data-highlighter="shiki" data-ext="glsl" data-title="glsl" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">attribute</span><span style="color:#FF79C6;"> vec3</span><span style="color:#F8F8F2;"> aStep;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">uniform</span><span style="color:#FF79C6;"> float</span><span style="color:#F8F8F2;"> uTime;</span></span>
<span class="line"><span style="color:#FF79C6;">uniform</span><span style="color:#FF79C6;"> float</span><span style="color:#F8F8F2;"> uSize;</span></span>
<span class="line"><span style="color:#FF79C6;">void</span><span style="color:#50FA7B;"> main</span><span style="color:#F8F8F2;">(){</span></span>
<span class="line"><span style="color:#F8F8F2;">    vec4 modelPosition </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> modelMatrix </span><span style="color:#FF79C6;">*</span><span style="color:#50FA7B;"> vec4</span><span style="color:#F8F8F2;">( position, </span><span style="color:#BD93F9;">1.0</span><span style="color:#F8F8F2;"> );</span></span>
<span class="line"><span style="color:#F8F8F2;">    modelPosition.xyz </span><span style="color:#FF79C6;">+=</span><span style="color:#F8F8F2;"> (aStep</span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;">uTime);</span></span>
<span class="line"><span style="color:#F8F8F2;">    vec4 viewPosition </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> viewMatrix </span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;"> modelPosition;</span></span>
<span class="line"><span style="color:#F8F8F2;">    gl_Position </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">  projectionMatrix </span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;"> viewPosition;</span></span>
<span class="line"><span style="color:#6272A4;">    // 设置顶点大小</span></span>
<span class="line"><span style="color:#F8F8F2;">    gl_PointSize </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">uSize;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Fireworks</code></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"></span>
<span class="line"><span style="color:#FF79C6;">class</span><span style="color:#8BE9FD;"> Fireworks</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">color</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">to</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">from</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> { x</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">, y</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">, z</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;"> }) {</span></span>
<span class="line"><span style="color:#6272A4;">    // console.log(&quot;创建烟花：&quot;, color, to);</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.color </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">Color</span><span style="color:#F8F8F2;">(color);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 创建烟花发射的球点</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.startGeometry </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">BufferGeometry</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> startPositionArray </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> Float32Array</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    startPositionArray[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> from.x;</span></span>
<span class="line"><span style="color:#F8F8F2;">    startPositionArray[</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> from.y;</span></span>
<span class="line"><span style="color:#F8F8F2;">    startPositionArray[</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> from.z;</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.startGeometry.</span><span style="color:#50FA7B;">setAttribute</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#E9F284;">      &quot;</span><span style="color:#F1FA8C;">position</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FF79C6;font-weight:bold;">      new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">BufferAttribute</span><span style="color:#F8F8F2;">(startPositionArray, </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> astepArray </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> Float32Array</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    astepArray[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> to.x </span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;"> from.x;</span></span>
<span class="line"><span style="color:#F8F8F2;">    astepArray[</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> to.y </span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;"> from.y;</span></span>
<span class="line"><span style="color:#F8F8F2;">    astepArray[</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> to.z </span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;"> from.x;</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.startGeometry.</span><span style="color:#50FA7B;">setAttribute</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#E9F284;">      &quot;</span><span style="color:#F1FA8C;">aStep</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FF79C6;font-weight:bold;">      new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">BufferAttribute</span><span style="color:#F8F8F2;">(astepArray, </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 设置着色器材质</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.startMaterial </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">ShaderMaterial</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">      vertexShader</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> startPointVertex,</span></span>
<span class="line"><span style="color:#F8F8F2;">      fragmentShader</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> startPointFragment,</span></span>
<span class="line"><span style="color:#F8F8F2;">      transparent</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      blending</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.AdditiveBlending,</span></span>
<span class="line"><span style="color:#F8F8F2;">      depthWrite</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      uniforms</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        uTime</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          value</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        },</span></span>
<span class="line"><span style="color:#F8F8F2;">        uSize</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          value</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> 20</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        },</span></span>
<span class="line"><span style="color:#F8F8F2;">        uColor</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { value</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.color },</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // console.log(this.startGeometry);</span></span>
<span class="line"><span style="color:#6272A4;">    // 创建烟花点球</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.startPoint </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">Points</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.startGeometry, </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.startMaterial);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 开始计时</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.clock </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">Clock</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 创建爆炸的烟花</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.fireworkGeometry </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">BufferGeometry</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.FireworksCount </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 180</span><span style="color:#FF79C6;"> +</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#50FA7B;">floor</span><span style="color:#F8F8F2;">(Math.</span><span style="color:#50FA7B;">random</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">*</span><span style="color:#BD93F9;"> 180</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> positionFireworksArray </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> Float32Array</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.FireworksCount </span><span style="color:#FF79C6;">*</span><span style="color:#BD93F9;"> 3</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> scaleFireArray </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> Float32Array</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.FireworksCount);</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> directionArray </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> Float32Array</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.FireworksCount </span><span style="color:#FF79C6;">*</span><span style="color:#BD93F9;"> 3</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#FF79C6;">&lt;</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.FireworksCount; i</span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">      // 一开始烟花位置</span></span>
<span class="line"><span style="color:#F8F8F2;">      positionFireworksArray[i </span><span style="color:#FF79C6;">*</span><span style="color:#BD93F9;"> 3</span><span style="color:#FF79C6;"> +</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> to.x;</span></span>
<span class="line"><span style="color:#F8F8F2;">      positionFireworksArray[i </span><span style="color:#FF79C6;">*</span><span style="color:#BD93F9;"> 3</span><span style="color:#FF79C6;"> +</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> to.y;</span></span>
<span class="line"><span style="color:#F8F8F2;">      positionFireworksArray[i </span><span style="color:#FF79C6;">*</span><span style="color:#BD93F9;"> 3</span><span style="color:#FF79C6;"> +</span><span style="color:#BD93F9;"> 2</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> to.z;</span></span>
<span class="line"><span style="color:#6272A4;">      //   设置烟花所有粒子初始化大小</span></span>
<span class="line"><span style="color:#F8F8F2;">      scaleFireArray[i] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#50FA7B;">random</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">      //   设置四周发射的角度</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">      let</span><span style="color:#F8F8F2;"> theta </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#50FA7B;">random</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">*</span><span style="color:#BD93F9;"> 2</span><span style="color:#FF79C6;"> *</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#BD93F9;">PI</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">      let</span><span style="color:#F8F8F2;"> beta </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#50FA7B;">random</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">*</span><span style="color:#BD93F9;"> 2</span><span style="color:#FF79C6;"> *</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#BD93F9;">PI</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">      let</span><span style="color:#F8F8F2;"> r </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#50FA7B;">random</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">      directionArray[i </span><span style="color:#FF79C6;">*</span><span style="color:#BD93F9;"> 3</span><span style="color:#FF79C6;"> +</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> r </span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#50FA7B;">sin</span><span style="color:#F8F8F2;">(theta) </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> r </span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#50FA7B;">sin</span><span style="color:#F8F8F2;">(beta);</span></span>
<span class="line"><span style="color:#F8F8F2;">      directionArray[i </span><span style="color:#FF79C6;">*</span><span style="color:#BD93F9;"> 3</span><span style="color:#FF79C6;"> +</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> r </span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#50FA7B;">cos</span><span style="color:#F8F8F2;">(theta) </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> r </span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#50FA7B;">cos</span><span style="color:#F8F8F2;">(beta);</span></span>
<span class="line"><span style="color:#F8F8F2;">      directionArray[i </span><span style="color:#FF79C6;">*</span><span style="color:#BD93F9;"> 3</span><span style="color:#FF79C6;"> +</span><span style="color:#BD93F9;"> 2</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> r </span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#50FA7B;">sin</span><span style="color:#F8F8F2;">(theta) </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> r </span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#50FA7B;">cos</span><span style="color:#F8F8F2;">(beta);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">      //   console.log(</span></span>
<span class="line"><span style="color:#6272A4;">      //     directionArray[i * 3 + 0],</span></span>
<span class="line"><span style="color:#6272A4;">      //     directionArray[i * 3 + 1],</span></span>
<span class="line"><span style="color:#6272A4;">      //     directionArray[i * 3 + 2]</span></span>
<span class="line"><span style="color:#6272A4;">      //   );</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.fireworkGeometry.</span><span style="color:#50FA7B;">setAttribute</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#E9F284;">      &quot;</span><span style="color:#F1FA8C;">position</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FF79C6;font-weight:bold;">      new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">BufferAttribute</span><span style="color:#F8F8F2;">(positionFireworksArray, </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    );</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.fireworkGeometry.</span><span style="color:#50FA7B;">setAttribute</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#E9F284;">      &quot;</span><span style="color:#F1FA8C;">aScale</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FF79C6;font-weight:bold;">      new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">BufferAttribute</span><span style="color:#F8F8F2;">(scaleFireArray, </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    );</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.fireworkGeometry.</span><span style="color:#50FA7B;">setAttribute</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#E9F284;">      &quot;</span><span style="color:#F1FA8C;">aRandom</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FF79C6;font-weight:bold;">      new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">BufferAttribute</span><span style="color:#F8F8F2;">(directionArray, </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.fireworksMaterial </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">ShaderMaterial</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">      uniforms</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        uTime</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          value</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        },</span></span>
<span class="line"><span style="color:#F8F8F2;">        uSize</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          value</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        },</span></span>
<span class="line"><span style="color:#F8F8F2;">        uColor</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { value</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.color },</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#F8F8F2;">      transparent</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      blending</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.AdditiveBlending,</span></span>
<span class="line"><span style="color:#F8F8F2;">      depthWrite</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      vertexShader</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> fireworksVertex,</span></span>
<span class="line"><span style="color:#F8F8F2;">      fragmentShader</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> fireworksFragment,</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.fireworks </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">Points</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.fireworkGeometry,</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.fireworksMaterial</span></span>
<span class="line"><span style="color:#F8F8F2;">    );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 创建音频</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.linstener </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">AudioListener</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.linstener1 </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">AudioListener</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.sound </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">Audio</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.linstener);</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.sendSound </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">Audio</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.linstener1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 创建音频加载器</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> audioLoader </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">AudioLoader</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    audioLoader.</span><span style="color:#50FA7B;">load</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F1FA8C;">      \`./assets/audio/pow</span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">Math.</span><span style="color:#50FA7B;">floor</span><span style="color:#F8F8F2;">(Math.</span><span style="color:#50FA7B;">random</span><span style="color:#F8F8F2;">()</span><span style="color:#FF79C6;"> *</span><span style="color:#BD93F9;"> 4</span><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;"> +</span><span style="color:#BD93F9;"> 1</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">.ogg\`</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      (</span><span style="color:#FFB86C;font-style:italic;">buffer</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.sound.</span><span style="color:#50FA7B;">setBuffer</span><span style="color:#F8F8F2;">(buffer);</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.sound.</span><span style="color:#50FA7B;">setLoop</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.sound.</span><span style="color:#50FA7B;">setVolume</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    audioLoader.</span><span style="color:#50FA7B;">load</span><span style="color:#F8F8F2;">(</span><span style="color:#F1FA8C;">\`./assets/audio/send.mp3\`</span><span style="color:#F8F8F2;">, (</span><span style="color:#FFB86C;font-style:italic;">buffer</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.sendSound.</span><span style="color:#50FA7B;">setBuffer</span><span style="color:#F8F8F2;">(buffer);</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.sendSound.</span><span style="color:#50FA7B;">setLoop</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.sendSound.</span><span style="color:#50FA7B;">setVolume</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#6272A4;">  //   添加到场景</span></span>
<span class="line"><span style="color:#50FA7B;">  addScene</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">scene</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">camera</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    scene.</span><span style="color:#50FA7B;">add</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.startPoint);</span></span>
<span class="line"><span style="color:#F8F8F2;">    scene.</span><span style="color:#50FA7B;">add</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.fireworks);</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.scene </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> scene;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#6272A4;">  //   update变量</span></span>
<span class="line"><span style="color:#50FA7B;">  update</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> elapsedTime </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.clock.</span><span style="color:#50FA7B;">getElapsedTime</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">    // console.log(elapsedTime);</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (elapsedTime </span><span style="color:#FF79C6;">&gt;</span><span style="color:#BD93F9;"> 0.2</span><span style="color:#FF79C6;"> &amp;&amp;</span><span style="color:#F8F8F2;"> elapsedTime </span><span style="color:#FF79C6;">&lt;</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.sendSound.isPlaying </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#FF79C6;"> !</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.sendSoundplay) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.sendSound.</span><span style="color:#50FA7B;">play</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.sendSoundplay </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.startMaterial.uniforms.uTime.value </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> elapsedTime;</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.startMaterial.uniforms.uSize.value </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 20</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#FF79C6;"> if</span><span style="color:#F8F8F2;"> (elapsedTime </span><span style="color:#FF79C6;">&gt;</span><span style="color:#BD93F9;"> 0.2</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> time </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> elapsedTime </span><span style="color:#FF79C6;">-</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">      //   让点元素消失</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.startMaterial.uniforms.uSize.value </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.startPoint.</span><span style="color:#50FA7B;">clear</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.startGeometry.</span><span style="color:#50FA7B;">dispose</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.startMaterial.</span><span style="color:#50FA7B;">dispose</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.sound.isPlaying </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#FF79C6;"> !</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.play) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.sound.</span><span style="color:#50FA7B;">play</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.play </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#6272A4;">      //设置烟花显示</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.fireworksMaterial.uniforms.uSize.value </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 20</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">      //   console.log(time);</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.fireworksMaterial.uniforms.uTime.value </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> time;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (time </span><span style="color:#FF79C6;">&gt;</span><span style="color:#BD93F9;"> 5</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.fireworksMaterial.uniforms.uSize.value </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.fireworks.</span><span style="color:#50FA7B;">clear</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.fireworkGeometry.</span><span style="color:#50FA7B;">dispose</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.fireworksMaterial.</span><span style="color:#50FA7B;">dispose</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.scene.</span><span style="color:#50FA7B;">remove</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.fireworks);</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.scene.</span><span style="color:#50FA7B;">remove</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.startPoint);</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">remove</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)),u("div",os,null,512),t[1]||(t[1]=u("h1",{id:"参考",tabindex:"-1"},[u("a",{class:"header-anchor",href:"#参考"},[u("span",null,"参考")])],-1)),t[2]||(t[2]=u("p",null,[as("参考："),u("a",{href:"https://threejs.org/",target:"_blank",rel:"noopener noreferrer"},"https://threejs.org/")],-1))])}const vs=Y(es,[["render",ps],["__file","threejs-firework.html.vue"]]),us=JSON.parse('{"path":"/threejs/threejs-firework.html","title":"ThreeJS烟火","lang":"en-US","frontmatter":{"title":"ThreeJS烟火","category":["ThreeJS"],"date":"2022-03-13T00:00:00.000Z","description":"Fragment Vertex Fireworks 参考 参考：https://threejs.org/","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/threejs/threejs-firework.html"}],["meta",{"property":"og:title","content":"ThreeJS烟火"}],["meta",{"property":"og:description","content":"Fragment Vertex Fireworks 参考 参考：https://threejs.org/"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-10T14:15:12.000Z"}],["meta",{"property":"article:published_time","content":"2022-03-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-10T14:15:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ThreeJS烟火\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-10T14:15:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[],"git":{"createdTime":1682066702000,"updatedTime":1731248112000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":6},{"name":"卢祥","email":"example@qq.com","commits":2}]},"readingTime":{"minutes":5.77,"words":1731},"filePathRelative":"threejs/threejs-firework.md","localizedDate":"March 13, 2022","excerpt":"<p><code>Fragment</code></p>\\n<div class=\\"language-glsl line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"glsl\\" data-title=\\"glsl\\" style=\\"background-color:#282A36;color:#F8F8F2\\"><pre class=\\"shiki dracula vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#FF79C6\\">uniform</span><span style=\\"color:#FF79C6\\"> vec3</span><span style=\\"color:#F8F8F2\\"> uColor;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">void</span><span style=\\"color:#50FA7B\\"> main</span><span style=\\"color:#F8F8F2\\">(){</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">    float</span><span style=\\"color:#F8F8F2\\"> distanceToCenter </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#50FA7B\\"> distance</span><span style=\\"color:#F8F8F2\\">(gl_PointCoord,</span><span style=\\"color:#50FA7B\\">vec2</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#BD93F9\\">0.5</span><span style=\\"color:#F8F8F2\\">));</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">    float</span><span style=\\"color:#F8F8F2\\"> strength </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> distanceToCenter</span><span style=\\"color:#FF79C6\\">*</span><span style=\\"color:#BD93F9\\">2.0</span><span style=\\"color:#F8F8F2\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    strength </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#BD93F9\\"> 1.0</span><span style=\\"color:#FF79C6\\">-</span><span style=\\"color:#F8F8F2\\">strength;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    strength </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#50FA7B\\"> pow</span><span style=\\"color:#F8F8F2\\">(strength,</span><span style=\\"color:#BD93F9\\">1.5</span><span style=\\"color:#F8F8F2\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    gl_FragColor </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#50FA7B\\"> vec4</span><span style=\\"color:#F8F8F2\\">(uColor,strength);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{vs as comp,us as data};
