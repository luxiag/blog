import{z as Ua,e as d,f as Ja,Q as O,aI as $a,n as ga,O as ma,u as Ca,s as fa,aJ as D,aK as _,q as ya,aL as Ea,M as o,aM as la,x as k,aN as wa,aO as sa,b as Ka,D as as,$ as ss,aP as ns,aQ as ts,aF as es,a5 as Aa,a3 as Ba,aH as ia,K as bs,F as os,aR as ls,E as is,l as rs,P as _a,S as Sa,p as Pa,A as Da,az as Ma,V as Ta,aS as Ia,W as Ha,T as ps,C as cs,ab as ds,a8 as Fs}from"./three.module-DElcEsb7.js";import{O as vs}from"./OrbitControls-COOjmuLA.js";import{C as ys,a as hs}from"./CSS2DRenderer-C6955bCF.js";import{S as us}from"./stats.module--VATS4Kh.js";import{_ as ms,i as ra,l as ja,c as fs,a as Ra,d as Z,b as ws,e as gs,o as Cs}from"./app-sHEEJrqx.js";const Y=new Ua,S=new d,Q=new d,u=new O,Oa={X:new d(1,0,0),Y:new d(0,1,0),Z:new d(0,0,1)},ha={type:"change"},za={type:"mouseDown",mode:null},La={type:"mouseUp",mode:null},ka={type:"objectChange"};class Qa extends Ja{constructor(n,a=null){super(void 0,a);const t=new Ss(this);this._root=t;const e=new Ps;this._gizmo=e,t.add(e);const l=new Ds;this._plane=l,t.add(l);const s=this;function b(m,M){let H=M;Object.defineProperty(s,m,{get:function(){return H!==void 0?H:M},set:function(I){H!==I&&(H=I,l[m]=I,e[m]=I,s.dispatchEvent({type:m+"-changed",value:I}),s.dispatchEvent(ha))}}),s[m]=M,l[m]=M,e[m]=M}b("camera",n),b("object",void 0),b("enabled",!0),b("axis",null),b("mode","translate"),b("translationSnap",null),b("rotationSnap",null),b("scaleSnap",null),b("space","world"),b("size",1),b("dragging",!1),b("showX",!0),b("showY",!0),b("showZ",!0);const c=new d,p=new d,w=new O,g=new O,C=new d,x=new O,y=new d,r=new d,F=new d,A=0,E=new d;b("worldPosition",c),b("worldPositionStart",p),b("worldQuaternion",w),b("worldQuaternionStart",g),b("cameraPosition",C),b("cameraQuaternion",x),b("pointStart",y),b("pointEnd",r),b("rotationAxis",F),b("rotationAngle",A),b("eye",E),this._offset=new d,this._startNorm=new d,this._endNorm=new d,this._cameraScale=new d,this._parentPosition=new d,this._parentQuaternion=new O,this._parentQuaternionInv=new O,this._parentScale=new d,this._worldScaleStart=new d,this._worldQuaternionInv=new O,this._worldScale=new d,this._positionStart=new d,this._quaternionStart=new O,this._scaleStart=new d,this._getPointer=xs.bind(this),this._onPointerDown=As.bind(this),this._onPointerHover=Es.bind(this),this._onPointerMove=Bs.bind(this),this._onPointerUp=_s.bind(this),a!==null&&this.connect()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="auto"}getHelper(){return this._root}pointerHover(n){if(this.object===void 0||this.dragging===!0)return;n!==null&&Y.setFromCamera(n,this.camera);const a=ua(this._gizmo.picker[this.mode],Y);a?this.axis=a.object.name:this.axis=null}pointerDown(n){if(!(this.object===void 0||this.dragging===!0||n!=null&&n.button!==0)&&this.axis!==null){n!==null&&Y.setFromCamera(n,this.camera);const a=ua(this._plane,Y,!0);a&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(a.point).sub(this.worldPositionStart)),this.dragging=!0,za.mode=this.mode,this.dispatchEvent(za)}}pointerMove(n){const a=this.axis,t=this.mode,e=this.object;let l=this.space;if(t==="scale"?l="local":(a==="E"||a==="XYZE"||a==="XYZ")&&(l="world"),e===void 0||a===null||this.dragging===!1||n!==null&&n.button!==-1)return;n!==null&&Y.setFromCamera(n,this.camera);const s=ua(this._plane,Y,!0);if(s){if(this.pointEnd.copy(s.point).sub(this.worldPositionStart),t==="translate")this._offset.copy(this.pointEnd).sub(this.pointStart),l==="local"&&a!=="XYZ"&&this._offset.applyQuaternion(this._worldQuaternionInv),a.indexOf("X")===-1&&(this._offset.x=0),a.indexOf("Y")===-1&&(this._offset.y=0),a.indexOf("Z")===-1&&(this._offset.z=0),l==="local"&&a!=="XYZ"?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),e.position.copy(this._offset).add(this._positionStart),this.translationSnap&&(l==="local"&&(e.position.applyQuaternion(u.copy(this._quaternionStart).invert()),a.search("X")!==-1&&(e.position.x=Math.round(e.position.x/this.translationSnap)*this.translationSnap),a.search("Y")!==-1&&(e.position.y=Math.round(e.position.y/this.translationSnap)*this.translationSnap),a.search("Z")!==-1&&(e.position.z=Math.round(e.position.z/this.translationSnap)*this.translationSnap),e.position.applyQuaternion(this._quaternionStart)),l==="world"&&(e.parent&&e.position.add(S.setFromMatrixPosition(e.parent.matrixWorld)),a.search("X")!==-1&&(e.position.x=Math.round(e.position.x/this.translationSnap)*this.translationSnap),a.search("Y")!==-1&&(e.position.y=Math.round(e.position.y/this.translationSnap)*this.translationSnap),a.search("Z")!==-1&&(e.position.z=Math.round(e.position.z/this.translationSnap)*this.translationSnap),e.parent&&e.position.sub(S.setFromMatrixPosition(e.parent.matrixWorld))));else if(t==="scale"){if(a.search("XYZ")!==-1){let b=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(b*=-1),Q.set(b,b,b)}else S.copy(this.pointStart),Q.copy(this.pointEnd),S.applyQuaternion(this._worldQuaternionInv),Q.applyQuaternion(this._worldQuaternionInv),Q.divide(S),a.search("X")===-1&&(Q.x=1),a.search("Y")===-1&&(Q.y=1),a.search("Z")===-1&&(Q.z=1);e.scale.copy(this._scaleStart).multiply(Q),this.scaleSnap&&(a.search("X")!==-1&&(e.scale.x=Math.round(e.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),a.search("Y")!==-1&&(e.scale.y=Math.round(e.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),a.search("Z")!==-1&&(e.scale.z=Math.round(e.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(t==="rotate"){this._offset.copy(this.pointEnd).sub(this.pointStart);const b=20/this.worldPosition.distanceTo(S.setFromMatrixPosition(this.camera.matrixWorld));let c=!1;a==="XYZE"?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(S.copy(this.rotationAxis).cross(this.eye))*b):(a==="X"||a==="Y"||a==="Z")&&(this.rotationAxis.copy(Oa[a]),S.copy(Oa[a]),l==="local"&&S.applyQuaternion(this.worldQuaternion),S.cross(this.eye),S.length()===0?c=!0:this.rotationAngle=this._offset.dot(S.normalize())*b),(a==="E"||c)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),l==="local"&&a!=="E"&&a!=="XYZE"?(e.quaternion.copy(this._quaternionStart),e.quaternion.multiply(u.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),e.quaternion.copy(u.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),e.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(ha),this.dispatchEvent(ka)}}pointerUp(n){n!==null&&n.button!==0||(this.dragging&&this.axis!==null&&(La.mode=this.mode,this.dispatchEvent(La)),this.dragging=!1,this.axis=null)}dispose(){this.disconnect(),this.traverse(function(n){n.geometry&&n.geometry.dispose(),n.material&&n.material.dispose()})}attach(n){return this.object=n,this._root.visible=!0,this}detach(){return this.object=void 0,this.axis=null,this._root.visible=!1,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(ha),this.dispatchEvent(ka),this.pointStart.copy(this.pointEnd))}getRaycaster(){return Y}getMode(){return this.mode}setMode(n){this.mode=n}setTranslationSnap(n){this.translationSnap=n}setRotationSnap(n){this.rotationSnap=n}setScaleSnap(n){this.scaleSnap=n}setSize(n){this.size=n}setSpace(n){this.space=n}}function xs(i){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:i.button};{const n=this.domElement.getBoundingClientRect();return{x:(i.clientX-n.left)/n.width*2-1,y:-(i.clientY-n.top)/n.height*2+1,button:i.button}}}function Es(i){if(this.enabled)switch(i.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(i));break}}function As(i){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(i.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(i)),this.pointerDown(this._getPointer(i)))}function Bs(i){this.enabled&&this.pointerMove(this._getPointer(i))}function _s(i){this.enabled&&(this.domElement.releasePointerCapture(i.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(i)))}function ua(i,n,a){const t=n.intersectObject(i,!0);for(let e=0;e<t.length;e++)if(t[e].object.visible||a)return t[e];return!1}const pa=new $a,v=new d(0,1,0),Xa=new d(0,0,0),Za=new ga,ca=new O,va=new O,R=new d,Ya=new ga,ea=new d(1,0,0),q=new d(0,1,0),ba=new d(0,0,1),da=new d,na=new d,ta=new d;class Ss extends ma{constructor(n){super(),this.isTransformControlsRoot=!0,this.controls=n,this.visible=!1}updateMatrixWorld(n){const a=this.controls;a.object!==void 0&&(a.object.updateMatrixWorld(),a.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):a.object.parent.matrixWorld.decompose(a._parentPosition,a._parentQuaternion,a._parentScale),a.object.matrixWorld.decompose(a.worldPosition,a.worldQuaternion,a._worldScale),a._parentQuaternionInv.copy(a._parentQuaternion).invert(),a._worldQuaternionInv.copy(a.worldQuaternion).invert()),a.camera.updateMatrixWorld(),a.camera.matrixWorld.decompose(a.cameraPosition,a.cameraQuaternion,a._cameraScale),a.camera.isOrthographicCamera?a.camera.getWorldDirection(a.eye).negate():a.eye.copy(a.cameraPosition).sub(a.worldPosition).normalize(),super.updateMatrixWorld(n)}}class Ps extends ma{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const n=new Ca({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),a=new fa({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),t=n.clone();t.opacity=.15;const e=a.clone();e.opacity=.5;const l=n.clone();l.color.setHex(16711680);const s=n.clone();s.color.setHex(65280);const b=n.clone();b.color.setHex(255);const c=n.clone();c.color.setHex(16711680),c.opacity=.5;const p=n.clone();p.color.setHex(65280),p.opacity=.5;const w=n.clone();w.color.setHex(255),w.opacity=.5;const g=n.clone();g.opacity=.25;const C=n.clone();C.color.setHex(16776960),C.opacity=.25,n.clone().color.setHex(16776960);const y=n.clone();y.color.setHex(7895160);const r=new D(0,.04,.1,12);r.translate(0,.05,0);const F=new _(.08,.08,.08);F.translate(0,.04,0);const A=new ya;A.setAttribute("position",new Ea([0,0,0,1,0,0],3));const E=new D(.0075,.0075,.5,3);E.translate(0,.25,0);function m(B,L){const T=new sa(B,.0075,3,64,L*Math.PI*2);return T.rotateY(Math.PI/2),T.rotateX(Math.PI/2),T}function M(){const B=new ya;return B.setAttribute("position",new Ea([0,0,0,1,1,1],3)),B}const H={X:[[new o(r,l),[.5,0,0],[0,0,-Math.PI/2]],[new o(r,l),[-.5,0,0],[0,0,Math.PI/2]],[new o(E,l),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new o(r,s),[0,.5,0]],[new o(r,s),[0,-.5,0],[Math.PI,0,0]],[new o(E,s)]],Z:[[new o(r,b),[0,0,.5],[Math.PI/2,0,0]],[new o(r,b),[0,0,-.5],[-Math.PI/2,0,0]],[new o(E,b),null,[Math.PI/2,0,0]]],XYZ:[[new o(new la(.1,0),g.clone()),[0,0,0]]],XY:[[new o(new _(.15,.15,.01),w.clone()),[.15,.15,0]]],YZ:[[new o(new _(.15,.15,.01),c.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new o(new _(.15,.15,.01),p.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},I={X:[[new o(new D(.2,0,.6,4),t),[.3,0,0],[0,0,-Math.PI/2]],[new o(new D(.2,0,.6,4),t),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new o(new D(.2,0,.6,4),t),[0,.3,0]],[new o(new D(.2,0,.6,4),t),[0,-.3,0],[0,0,Math.PI]]],Z:[[new o(new D(.2,0,.6,4),t),[0,0,.3],[Math.PI/2,0,0]],[new o(new D(.2,0,.6,4),t),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new o(new la(.2,0),t)]],XY:[[new o(new _(.2,.2,.01),t),[.15,.15,0]]],YZ:[[new o(new _(.2,.2,.01),t),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new o(new _(.2,.2,.01),t),[.15,0,.15],[-Math.PI/2,0,0]]]},$={START:[[new o(new la(.01,2),e),null,null,null,"helper"]],END:[[new o(new la(.01,2),e),null,null,null,"helper"]],DELTA:[[new k(M(),e),null,null,null,"helper"]],X:[[new k(A,e.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new k(A,e.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new k(A,e.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},j={XYZE:[[new o(m(.5,1),y),null,[0,Math.PI/2,0]]],X:[[new o(m(.5,.5),l)]],Y:[[new o(m(.5,.5),s),null,[0,0,-Math.PI/2]]],Z:[[new o(m(.5,.5),b),null,[0,Math.PI/2,0]]],E:[[new o(m(.75,1),C),null,[0,Math.PI/2,0]]]},K={AXIS:[[new k(A,e.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},G={XYZE:[[new o(new wa(.25,10,8),t)]],X:[[new o(new sa(.5,.1,4,24),t),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new o(new sa(.5,.1,4,24),t),[0,0,0],[Math.PI/2,0,0]]],Z:[[new o(new sa(.5,.1,4,24),t),[0,0,0],[0,0,-Math.PI/2]]],E:[[new o(new sa(.75,.1,2,24),t)]]},X={X:[[new o(F,l),[.5,0,0],[0,0,-Math.PI/2]],[new o(E,l),[0,0,0],[0,0,-Math.PI/2]],[new o(F,l),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new o(F,s),[0,.5,0]],[new o(E,s)],[new o(F,s),[0,-.5,0],[0,0,Math.PI]]],Z:[[new o(F,b),[0,0,.5],[Math.PI/2,0,0]],[new o(E,b),[0,0,0],[Math.PI/2,0,0]],[new o(F,b),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new o(new _(.15,.15,.01),w),[.15,.15,0]]],YZ:[[new o(new _(.15,.15,.01),c),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new o(new _(.15,.15,.01),p),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new o(new _(.1,.1,.1),g.clone())]]},N={X:[[new o(new D(.2,0,.6,4),t),[.3,0,0],[0,0,-Math.PI/2]],[new o(new D(.2,0,.6,4),t),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new o(new D(.2,0,.6,4),t),[0,.3,0]],[new o(new D(.2,0,.6,4),t),[0,-.3,0],[0,0,Math.PI]]],Z:[[new o(new D(.2,0,.6,4),t),[0,0,.3],[Math.PI/2,0,0]],[new o(new D(.2,0,.6,4),t),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new o(new _(.2,.2,.01),t),[.15,.15,0]]],YZ:[[new o(new _(.2,.2,.01),t),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new o(new _(.2,.2,.01),t),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new o(new _(.2,.2,.2),t),[0,0,0]]]},aa={X:[[new k(A,e.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new k(A,e.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new k(A,e.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function P(B){const L=new ma;for(const T in B)for(let f=B[T].length;f--;){const h=B[T][f][0].clone(),W=B[T][f][1],U=B[T][f][2],oa=B[T][f][3],Va=B[T][f][4];h.name=T,h.tag=Va,W&&h.position.set(W[0],W[1],W[2]),U&&h.rotation.set(U[0],U[1],U[2]),oa&&h.scale.set(oa[0],oa[1],oa[2]),h.updateMatrix();const xa=h.geometry.clone();xa.applyMatrix4(h.matrix),h.geometry=xa,h.renderOrder=1/0,h.position.set(0,0,0),h.rotation.set(0,0,0),h.scale.set(1,1,1),L.add(h)}return L}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=P(H)),this.add(this.gizmo.rotate=P(j)),this.add(this.gizmo.scale=P(X)),this.add(this.picker.translate=P(I)),this.add(this.picker.rotate=P(G)),this.add(this.picker.scale=P(N)),this.add(this.helper.translate=P($)),this.add(this.helper.rotate=P(K)),this.add(this.helper.scale=P(aa)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(n){const t=(this.mode==="scale"?"local":this.space)==="local"?this.worldQuaternion:va;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";let e=[];e=e.concat(this.picker[this.mode].children),e=e.concat(this.gizmo[this.mode].children),e=e.concat(this.helper[this.mode].children);for(let l=0;l<e.length;l++){const s=e[l];s.visible=!0,s.rotation.set(0,0,0),s.position.copy(this.worldPosition);let b;if(this.camera.isOrthographicCamera?b=(this.camera.top-this.camera.bottom)/this.camera.zoom:b=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),s.scale.set(1,1,1).multiplyScalar(b*this.size/4),s.tag==="helper"){s.visible=!1,s.name==="AXIS"?(s.visible=!!this.axis,this.axis==="X"&&(u.setFromEuler(pa.set(0,0,0)),s.quaternion.copy(t).multiply(u),Math.abs(v.copy(ea).applyQuaternion(t).dot(this.eye))>.9&&(s.visible=!1)),this.axis==="Y"&&(u.setFromEuler(pa.set(0,0,Math.PI/2)),s.quaternion.copy(t).multiply(u),Math.abs(v.copy(q).applyQuaternion(t).dot(this.eye))>.9&&(s.visible=!1)),this.axis==="Z"&&(u.setFromEuler(pa.set(0,Math.PI/2,0)),s.quaternion.copy(t).multiply(u),Math.abs(v.copy(ba).applyQuaternion(t).dot(this.eye))>.9&&(s.visible=!1)),this.axis==="XYZE"&&(u.setFromEuler(pa.set(0,Math.PI/2,0)),v.copy(this.rotationAxis),s.quaternion.setFromRotationMatrix(Za.lookAt(Xa,v,q)),s.quaternion.multiply(u),s.visible=this.dragging),this.axis==="E"&&(s.visible=!1)):s.name==="START"?(s.position.copy(this.worldPositionStart),s.visible=this.dragging):s.name==="END"?(s.position.copy(this.worldPosition),s.visible=this.dragging):s.name==="DELTA"?(s.position.copy(this.worldPositionStart),s.quaternion.copy(this.worldQuaternionStart),S.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),S.applyQuaternion(this.worldQuaternionStart.clone().invert()),s.scale.copy(S),s.visible=this.dragging):(s.quaternion.copy(t),this.dragging?s.position.copy(this.worldPositionStart):s.position.copy(this.worldPosition),this.axis&&(s.visible=this.axis.search(s.name)!==-1));continue}s.quaternion.copy(t),this.mode==="translate"||this.mode==="scale"?(s.name==="X"&&Math.abs(v.copy(ea).applyQuaternion(t).dot(this.eye))>.99&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="Y"&&Math.abs(v.copy(q).applyQuaternion(t).dot(this.eye))>.99&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="Z"&&Math.abs(v.copy(ba).applyQuaternion(t).dot(this.eye))>.99&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="XY"&&Math.abs(v.copy(ba).applyQuaternion(t).dot(this.eye))<.2&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="YZ"&&Math.abs(v.copy(ea).applyQuaternion(t).dot(this.eye))<.2&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="XZ"&&Math.abs(v.copy(q).applyQuaternion(t).dot(this.eye))<.2&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1)):this.mode==="rotate"&&(ca.copy(t),v.copy(this.eye).applyQuaternion(u.copy(t).invert()),s.name.search("E")!==-1&&s.quaternion.setFromRotationMatrix(Za.lookAt(this.eye,Xa,q)),s.name==="X"&&(u.setFromAxisAngle(ea,Math.atan2(-v.y,v.z)),u.multiplyQuaternions(ca,u),s.quaternion.copy(u)),s.name==="Y"&&(u.setFromAxisAngle(q,Math.atan2(v.x,v.z)),u.multiplyQuaternions(ca,u),s.quaternion.copy(u)),s.name==="Z"&&(u.setFromAxisAngle(ba,Math.atan2(v.y,v.x)),u.multiplyQuaternions(ca,u),s.quaternion.copy(u))),s.visible=s.visible&&(s.name.indexOf("X")===-1||this.showX),s.visible=s.visible&&(s.name.indexOf("Y")===-1||this.showY),s.visible=s.visible&&(s.name.indexOf("Z")===-1||this.showZ),s.visible=s.visible&&(s.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),s.material._color=s.material._color||s.material.color.clone(),s.material._opacity=s.material._opacity||s.material.opacity,s.material.color.copy(s.material._color),s.material.opacity=s.material._opacity,this.enabled&&this.axis&&(s.name===this.axis||this.axis.split("").some(function(c){return s.name===c}))&&(s.material.color.setHex(16776960),s.material.opacity=1)}super.updateMatrixWorld(n)}}class Ds extends o{constructor(){super(new Ka(1e5,1e5,2,2),new Ca({visible:!1,wireframe:!0,side:as,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(n){let a=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(a="local"),da.copy(ea).applyQuaternion(a==="local"?this.worldQuaternion:va),na.copy(q).applyQuaternion(a==="local"?this.worldQuaternion:va),ta.copy(ba).applyQuaternion(a==="local"?this.worldQuaternion:va),v.copy(na),this.mode){case"translate":case"scale":switch(this.axis){case"X":v.copy(this.eye).cross(da),R.copy(da).cross(v);break;case"Y":v.copy(this.eye).cross(na),R.copy(na).cross(v);break;case"Z":v.copy(this.eye).cross(ta),R.copy(ta).cross(v);break;case"XY":R.copy(ta);break;case"YZ":R.copy(da);break;case"XZ":v.copy(ta),R.copy(na);break;case"XYZ":case"E":R.set(0,0,0);break}break;case"rotate":default:R.set(0,0,0)}R.length()===0?this.quaternion.copy(this.cameraQuaternion):(Ya.lookAt(S.set(0,0,0),R,v),this.quaternion.setFromRotationMatrix(Ya)),super.updateMatrixWorld(n)}}const V=4,J=1024,z=4;function Ms(i=1){const n=new Uint16Array(J*z*i*V),a=new ns(n,J,z*i,ts,es);return a.wrapS=Aa,a.wrapY=Aa,a.magFilter=Ba,a.minFilter=Ba,a.needsUpdate=!0,a}function Ts(i,n,a=0){const t=Math.floor(J*(z/4));n.arcLengthDivisions=t/2,n.updateArcLengths();const e=n.getSpacedPoints(t),l=n.computeFrenetFrames(t,!0);for(let s=0;s<t;s++){const b=Math.floor(s/J),c=s%J;let p=e[s];Fa(i,c,p.x,p.y,p.z,0+b+z*a),p=l.tangents[s],Fa(i,c,p.x,p.y,p.z,1+b+z*a),p=l.normals[s],Fa(i,c,p.x,p.y,p.z,2+b+z*a),p=l.binormals[s],Fa(i,c,p.x,p.y,p.z,3+b+z*a)}i.needsUpdate=!0}function Fa(i,n,a,t,e,l){const s=i.image,{data:b}=s,c=V*J*l;b[n*V+c+0]=ia.toHalfFloat(a),b[n*V+c+1]=ia.toHalfFloat(t),b[n*V+c+2]=ia.toHalfFloat(e),b[n*V+c+3]=ia.toHalfFloat(1)}function Is(i){return{spineTexture:{value:i},pathOffset:{type:"f",value:0},pathSegment:{type:"f",value:1},spineOffset:{type:"f",value:161},spineLength:{type:"f",value:400},flow:{type:"i",value:1}}}function qa(i,n,a=1){i.__ok||(i.__ok=!0,i.onBeforeCompile=t=>{if(t.__modified)return;t.__modified=!0,Object.assign(t.uniforms,n);const e=`
		uniform sampler2D spineTexture;
		uniform float pathOffset;
		uniform float pathSegment;
		uniform float spineOffset;
		uniform float spineLength;
		uniform int flow;

		float textureLayers = ${z*a}.;
		float textureStacks = ${z/4}.;

		${t.vertexShader}
		`.replace("#include <beginnormal_vertex>","").replace("#include <defaultnormal_vertex>","").replace("#include <begin_vertex>","").replace(/void\s*main\s*\(\)\s*\{/,`
void main() {
#include <beginnormal_vertex>

vec4 worldPos = modelMatrix * vec4(position, 1.);

bool bend = flow > 0;
float xWeight = bend ? 0. : 1.;

#ifdef USE_INSTANCING
float pathOffsetFromInstanceMatrix = instanceMatrix[3][2];
float spineLengthFromInstanceMatrix = instanceMatrix[3][0];
float spinePortion = bend ? (worldPos.x + spineOffset) / spineLengthFromInstanceMatrix : 0.;
float mt = (spinePortion * pathSegment + pathOffset + pathOffsetFromInstanceMatrix)*textureStacks;
#else
float spinePortion = bend ? (worldPos.x + spineOffset) / spineLength : 0.;
float mt = (spinePortion * pathSegment + pathOffset)*textureStacks;
#endif

mt = mod(mt, textureStacks);
float rowOffset = floor(mt);

#ifdef USE_INSTANCING
rowOffset += instanceMatrix[3][1] * ${z}.;
#endif

vec3 spinePos = texture2D(spineTexture, vec2(mt, (0. + rowOffset + 0.5) / textureLayers)).xyz;
vec3 a =        texture2D(spineTexture, vec2(mt, (1. + rowOffset + 0.5) / textureLayers)).xyz;
vec3 b =        texture2D(spineTexture, vec2(mt, (2. + rowOffset + 0.5) / textureLayers)).xyz;
vec3 c =        texture2D(spineTexture, vec2(mt, (3. + rowOffset + 0.5) / textureLayers)).xyz;
mat3 basis = mat3(a, b, c);

vec3 transformed = basis
	* vec3(worldPos.x * xWeight, worldPos.y * 1., worldPos.z * 1.)
	+ spinePos;

vec3 transformedNormal = normalMatrix * (basis * objectNormal);
			`).replace("#include <project_vertex>",`vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );
				gl_Position = projectionMatrix * mvPosition;`);t.vertexShader=e})}class Ga{constructor(n,a=1){const t=n.clone(),e=Ms(a),l=Is(e);t.traverse(function(s){if(s instanceof o||s instanceof ss)if(Array.isArray(s.material)){const b=[];for(const c of s.material){const p=c.clone();qa(p,l,a),b.push(p)}s.material=b}else s.material=s.material.clone(),qa(s.material,l,a)}),this.curveArray=new Array(a),this.curveLengthArray=new Array(a),this.object3D=t,this.splineTexure=e,this.uniforms=l}updateCurve(n,a){if(n>=this.curveArray.length)throw Error("Index out of range for Flow");const t=a.getLength();this.uniforms.spineLength.value=t,this.curveLengthArray[n]=t,this.curveArray[n]=a,Ts(this.splineTexure,a,n)}moveAlongCurve(n){this.uniforms.pathOffset.value+=n}}new ga;class Na extends bs{constructor(n){super(n)}load(n,a,t,e){const l=this,s=new os(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(n,function(b){const c=l.parse(JSON.parse(b));a&&a(c)},t,e)}parse(n){return new Hs(n)}}class Hs{constructor(n){this.isFont=!0,this.type="Font",this.data=n}generateShapes(n,a=100){const t=[],e=js(n,a,this.data);for(let l=0,s=e.length;l<s;l++)t.push(...e[l].toShapes());return t}}function js(i,n,a){const t=Array.from(i),e=n/a.resolution,l=(a.boundingBox.yMax-a.boundingBox.yMin+a.underlineThickness)*e,s=[];let b=0,c=0;for(let p=0;p<t.length;p++){const w=t[p];if(w===`
`)b=0,c-=l;else{const g=Rs(w,e,b,c,a);b+=g.offsetX,s.push(g.path)}}return s}function Rs(i,n,a,t,e){const l=e.glyphs[i]||e.glyphs["?"];if(!l){console.error('THREE.Font: character "'+i+'" does not exists in font family '+e.familyName+".");return}const s=new ls;let b,c,p,w,g,C,x,y;if(l.o){const r=l._cachedOutline||(l._cachedOutline=l.o.split(" "));for(let F=0,A=r.length;F<A;)switch(r[F++]){case"m":b=r[F++]*n+a,c=r[F++]*n+t,s.moveTo(b,c);break;case"l":b=r[F++]*n+a,c=r[F++]*n+t,s.lineTo(b,c);break;case"q":p=r[F++]*n+a,w=r[F++]*n+t,g=r[F++]*n+a,C=r[F++]*n+t,s.quadraticCurveTo(g,C,p,w);break;case"b":p=r[F++]*n+a,w=r[F++]*n+t,g=r[F++]*n+a,C=r[F++]*n+t,x=r[F++]*n+a,y=r[F++]*n+t,s.bezierCurveTo(g,C,x,y,p,w);break}}return{offsetX:l.ha*n,path:s}}class Wa extends is{constructor(n,a={}){const t=a.font;if(t===void 0)super();else{const e=t.generateShapes(n,a.size);a.depth===void 0&&a.height!==void 0&&console.warn("THREE.TextGeometry: .height is now depreciated. Please use .depth instead"),a.depth=a.depth!==void 0?a.depth:a.height!==void 0?a.height:50,a.bevelThickness===void 0&&(a.bevelThickness=10),a.bevelSize===void 0&&(a.bevelSize=8),a.bevelEnabled===void 0&&(a.bevelEnabled=!1),super(e,a)}this.type="TextGeometry"}}const Os={__name:"threejs-curve.html",setup(i,{expose:n}){n();const a=ra(),t=new cs,e=new rs,l=ra(900);function s(){let w,g,C,x,y,r;x=new _a(75,2,.1,200),x.position.set(0,5,-10),y=new Sa;const E=new Pa(16777215);E.position.set(0,0,1),y.add(E);const m=new Da(16777215,.5);y.add(m);const M=new wa(5,16,16),H=new Ma({specular:3355443,shininess:5,map:e.load("./assets/textures/planets/earth_atmos_2048.jpg"),specularMap:e.load("./assets/textures/planets/earth_specular_2048.jpg"),normalMap:e.load("./assets/textures/planets/earth_normal_2048.jpg"),normalScale:new Ta(.85,.85)});g=new o(M,H),g.position.z=-4,y.add(g);const I=new wa(.5,16,16),$=new Ma({shininess:5,map:e.load("./assets/textures/planets/moon_1024.jpg")});w=new o(I,$),y.add(w),C=new Ia([new d(-10,0,10),new d(-5,5,5),new d(0,0,5),new d(5,-5,5),new d(10,0,10)],!0);const j=C.getPoints(500),K=new ya().setFromPoints(j),G=new fa({color:16711680}),X=new k(K,G);y.add(X),r=new Ha,r.setPixelRatio(window.devicePixelRatio),window.addEventListener("resize",N),r.setSize(a.value.offsetWidth,a.value.offsetWidth/2),a.value.appendChild(r.domElement),r.render(y,x);function N(){x.aspect=2,x.updateProjectionMatrix(),r.setSize(a.value.offsetWidth,a.value.offsetWidth/2),l.value=a.value.offsetWidth}function aa(){r.render(y,x);const P=t.getElapsedTime(),B=P/10%1;w.position.set(Math.sin(P)*8,0,Math.cos(P)*8);const L=C.getPoint(B);x.position.copy(L),x.lookAt(g.position),requestAnimationFrame(aa)}aa()}const b=ra(),c=()=>{const C=[],x=new Ta;let y,r,F,A,E,m,M=0;y=new Sa,r=new _a(40,2,1,1e3),r.position.set(2,2,4),r.lookAt(y.position);const H=[{x:1,y:0,z:-1},{x:1,y:0,z:1},{x:-1,y:0,z:1},{x:-1,y:0,z:-1}],I=new _(.1,.1,.1),$=new Ca;for(const f of H){const h=new o(I,$);h.position.copy(f),C.push(h),y.add(h)}const j=new Ia(C.map(f=>f.position));j.curveType="centripetal",j.closed=!0;const K=j.getPoints(50),G=new ds(new ya().setFromPoints(K),new fa({color:65280}));y.add(G);const X=new Pa(16755251);X.position.set(-10,10,10),X.intensity=1,y.add(X);const N=new Da(14707);N.intensity=1,y.add(N),new Na().load("./assets/geojson/helvetiker_regular.typeface.json",function(f){const h=new Wa("Hello three.js!",{font:f,size:.2,height:.05,curveSegments:12,bevelEnabled:!0,bevelThickness:.02,bevelSize:.01,bevelOffset:0,bevelSegments:5});h.rotateX(Math.PI);const W=new Fs({color:10092543}),U=new o(h,W);m=new Ga(U),m.updateCurve(0,j),y.add(m.object3D)}),F=new Ha({antialias:!0}),F.setSize(b.value.offsetWidth,b.value.offsetWidth/2),b.value.appendChild(F.domElement),F.domElement.addEventListener("pointerdown",B),A=new Ua,E=new Qa(r,F.domElement),E.addEventListener("dragging-changed",function(f){if(!f.value){const h=j.getPoints(50);G.geometry.setFromPoints(h),m.updateCurve(0,j)}window.addEventListener("resize",P)});function P(){r.updateProjectionMatrix(),F.setSize(b.value.offsetWidth,b.value.offsetWidth/2)}function B(f){M=1,x.x=f.clientX/window.innerWidth*2-1,x.y=-(f.clientY/window.innerHeight)*2+1}function L(){if(requestAnimationFrame(L),M===1){A.setFromCamera(x,r),M=0;const f=A.intersectObjects(C,!1);if(console.log(f,"a"),f.length){const h=f[0].object;E.attach(h),y.add(E)}}m&&m.moveAlongCurve(.001),T()}function T(){F.render(y,r)}L()};ja(()=>{s(),l.value=a.value.offsetWidth});const p={motion:a,clock:t,textureLoader:e,width:l,initMotion:s,modifierCurveRef:b,initModifierCurveRef:c,ref:ra,onMounted:ja,get THREE(){return ps},get OrbitControls(){return vs},get CSS2DRenderer(){return ys},get CSS2DObject(){return hs},get TransformControls(){return Qa},get Stats(){return us},get Flow(){return Ga},get FontLoader(){return Na},get TextGeometry(){return Wa}};return Object.defineProperty(p,"__isScriptSetup",{enumerable:!1,value:!0}),p}},zs={class:"motion",ref:"motion"},Ls=["height","width"];function ks(i,n,a,t,e,l){return Cs(),fs("div",null,[n[0]||(n[0]=Ra(`<h2 id="曲线运动" tabindex="-1" data-v-20bba7bb><a class="header-anchor" href="#曲线运动" data-v-20bba7bb><span data-v-20bba7bb>曲线运动</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-20bba7bb><pre class="shiki dracula vp-code" data-v-20bba7bb><code data-v-20bba7bb><span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb>  // 从一系列的点创建一条平滑的三维样条曲线。</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>  curve </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>CatmullRomCurve3</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>    [</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb>      new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>Vector3</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#FF79C6;" data-v-20bba7bb>-</span><span style="color:#BD93F9;" data-v-20bba7bb>10</span><span style="color:#F8F8F2;" data-v-20bba7bb>, </span><span style="color:#BD93F9;" data-v-20bba7bb>0</span><span style="color:#F8F8F2;" data-v-20bba7bb>, </span><span style="color:#BD93F9;" data-v-20bba7bb>10</span><span style="color:#F8F8F2;" data-v-20bba7bb>),</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb>      new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>Vector3</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#FF79C6;" data-v-20bba7bb>-</span><span style="color:#BD93F9;" data-v-20bba7bb>5</span><span style="color:#F8F8F2;" data-v-20bba7bb>, </span><span style="color:#BD93F9;" data-v-20bba7bb>5</span><span style="color:#F8F8F2;" data-v-20bba7bb>, </span><span style="color:#BD93F9;" data-v-20bba7bb>5</span><span style="color:#F8F8F2;" data-v-20bba7bb>),</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb>      new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>Vector3</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#BD93F9;" data-v-20bba7bb>0</span><span style="color:#F8F8F2;" data-v-20bba7bb>, </span><span style="color:#BD93F9;" data-v-20bba7bb>0</span><span style="color:#F8F8F2;" data-v-20bba7bb>, </span><span style="color:#BD93F9;" data-v-20bba7bb>5</span><span style="color:#F8F8F2;" data-v-20bba7bb>),</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb>      new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>Vector3</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#BD93F9;" data-v-20bba7bb>5</span><span style="color:#F8F8F2;" data-v-20bba7bb>, </span><span style="color:#FF79C6;" data-v-20bba7bb>-</span><span style="color:#BD93F9;" data-v-20bba7bb>5</span><span style="color:#F8F8F2;" data-v-20bba7bb>, </span><span style="color:#BD93F9;" data-v-20bba7bb>5</span><span style="color:#F8F8F2;" data-v-20bba7bb>),</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb>      new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>Vector3</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#BD93F9;" data-v-20bba7bb>10</span><span style="color:#F8F8F2;" data-v-20bba7bb>, </span><span style="color:#BD93F9;" data-v-20bba7bb>0</span><span style="color:#F8F8F2;" data-v-20bba7bb>, </span><span style="color:#BD93F9;" data-v-20bba7bb>10</span><span style="color:#F8F8F2;" data-v-20bba7bb>),</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>    ],</span></span>
<span class="line" data-v-20bba7bb><span style="color:#BD93F9;" data-v-20bba7bb>    true</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>  );</span></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb>  // 使用getPoint（t）返回一组divisions+1的点</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>  const</span><span style="color:#F8F8F2;" data-v-20bba7bb> points </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#F8F8F2;" data-v-20bba7bb> curve.</span><span style="color:#50FA7B;" data-v-20bba7bb>getPoints</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#BD93F9;" data-v-20bba7bb>500</span><span style="color:#F8F8F2;" data-v-20bba7bb>);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb>  // 通过点队列设置该 BufferGeometry 的 attribute。</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>  const</span><span style="color:#F8F8F2;" data-v-20bba7bb> geometry </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>BufferGeometry</span><span style="color:#F8F8F2;" data-v-20bba7bb>().</span><span style="color:#50FA7B;" data-v-20bba7bb>setFromPoints</span><span style="color:#F8F8F2;" data-v-20bba7bb>(points);</span></span>
<span class="line" data-v-20bba7bb></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>  const</span><span style="color:#F8F8F2;" data-v-20bba7bb> material </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>LineBasicMaterial</span><span style="color:#F8F8F2;" data-v-20bba7bb>({ color</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 0xff0000</span><span style="color:#F8F8F2;" data-v-20bba7bb> });</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>  const</span><span style="color:#F8F8F2;" data-v-20bba7bb> curveObject </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>Line</span><span style="color:#F8F8F2;" data-v-20bba7bb>(geometry, material);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>  scene.</span><span style="color:#50FA7B;" data-v-20bba7bb>add</span><span style="color:#F8F8F2;" data-v-20bba7bb>(curveObject);</span></span>
<span class="line" data-v-20bba7bb></span>
<span class="line" data-v-20bba7bb></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>  function</span><span style="color:#50FA7B;" data-v-20bba7bb> animate</span><span style="color:#F8F8F2;" data-v-20bba7bb>(){</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>      renderer.</span><span style="color:#50FA7B;" data-v-20bba7bb>render</span><span style="color:#F8F8F2;" data-v-20bba7bb>(scene, camera);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>      const</span><span style="color:#F8F8F2;" data-v-20bba7bb> elapsed </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#F8F8F2;" data-v-20bba7bb> clock.</span><span style="color:#50FA7B;" data-v-20bba7bb>getElapsedTime</span><span style="color:#F8F8F2;" data-v-20bba7bb>();</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>      const</span><span style="color:#F8F8F2;" data-v-20bba7bb> time </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#F8F8F2;" data-v-20bba7bb> elapsed</span><span style="color:#FF79C6;" data-v-20bba7bb>/</span><span style="color:#BD93F9;" data-v-20bba7bb>10</span><span style="color:#FF79C6;" data-v-20bba7bb>%</span><span style="color:#BD93F9;" data-v-20bba7bb>1</span><span style="color:#F8F8F2;" data-v-20bba7bb>;</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>      const</span><span style="color:#F8F8F2;" data-v-20bba7bb> point </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#F8F8F2;" data-v-20bba7bb> curve.</span><span style="color:#50FA7B;" data-v-20bba7bb>getPoint</span><span style="color:#F8F8F2;" data-v-20bba7bb>(time);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>      moon.position.</span><span style="color:#50FA7B;" data-v-20bba7bb>copy</span><span style="color:#F8F8F2;" data-v-20bba7bb>(point);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>      camera.position.</span><span style="color:#50FA7B;" data-v-20bba7bb>copy</span><span style="color:#F8F8F2;" data-v-20bba7bb>(point);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>      camera.</span><span style="color:#50FA7B;" data-v-20bba7bb>lookAt</span><span style="color:#F8F8F2;" data-v-20bba7bb>(earth.position)</span></span>
<span class="line" data-v-20bba7bb><span style="color:#50FA7B;" data-v-20bba7bb>      requestAnimationFrame</span><span style="color:#F8F8F2;" data-v-20bba7bb>(animate)</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-20bba7bb><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div></div></div>`,2)),Z("div",zs,null,512),n[1]||(n[1]=Ra(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-20bba7bb><pre class="shiki dracula vp-code" data-v-20bba7bb><code data-v-20bba7bb><span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>const</span><span style="color:#F8F8F2;" data-v-20bba7bb> curveHandles </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#F8F8F2;" data-v-20bba7bb> []; </span><span style="color:#6272A4;" data-v-20bba7bb>// 曲线控制点数组</span></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb>  // 初始化曲线控制点，设置成立方样条曲线</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>  const</span><span style="color:#F8F8F2;" data-v-20bba7bb> initialPoints </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#F8F8F2;" data-v-20bba7bb> [</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>    { x</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 1</span><span style="color:#F8F8F2;" data-v-20bba7bb>, y</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 0</span><span style="color:#F8F8F2;" data-v-20bba7bb>, z</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#FF79C6;" data-v-20bba7bb> -</span><span style="color:#BD93F9;" data-v-20bba7bb>1</span><span style="color:#F8F8F2;" data-v-20bba7bb> },</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>    { x</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 1</span><span style="color:#F8F8F2;" data-v-20bba7bb>, y</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 0</span><span style="color:#F8F8F2;" data-v-20bba7bb>, z</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 1</span><span style="color:#F8F8F2;" data-v-20bba7bb> },</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>    { x</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#FF79C6;" data-v-20bba7bb> -</span><span style="color:#BD93F9;" data-v-20bba7bb>1</span><span style="color:#F8F8F2;" data-v-20bba7bb>, y</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 0</span><span style="color:#F8F8F2;" data-v-20bba7bb>, z</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 1</span><span style="color:#F8F8F2;" data-v-20bba7bb> },</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>    { x</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#FF79C6;" data-v-20bba7bb> -</span><span style="color:#BD93F9;" data-v-20bba7bb>1</span><span style="color:#F8F8F2;" data-v-20bba7bb>, y</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 0</span><span style="color:#F8F8F2;" data-v-20bba7bb>, z</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#FF79C6;" data-v-20bba7bb> -</span><span style="color:#BD93F9;" data-v-20bba7bb>1</span><span style="color:#F8F8F2;" data-v-20bba7bb> },</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>  ];</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>  const</span><span style="color:#F8F8F2;" data-v-20bba7bb> boxGeometry </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>BoxGeometry</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#BD93F9;" data-v-20bba7bb>0.1</span><span style="color:#F8F8F2;" data-v-20bba7bb>, </span><span style="color:#BD93F9;" data-v-20bba7bb>0.1</span><span style="color:#F8F8F2;" data-v-20bba7bb>, </span><span style="color:#BD93F9;" data-v-20bba7bb>0.1</span><span style="color:#F8F8F2;" data-v-20bba7bb>);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>  const</span><span style="color:#F8F8F2;" data-v-20bba7bb> boxMaterial </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-20bba7bb>();</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>  for</span><span style="color:#F8F8F2;" data-v-20bba7bb> (</span><span style="color:#FF79C6;" data-v-20bba7bb>const</span><span style="color:#F8F8F2;" data-v-20bba7bb> handlePos </span><span style="color:#FF79C6;" data-v-20bba7bb>of</span><span style="color:#F8F8F2;" data-v-20bba7bb> initialPoints) {</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>    const</span><span style="color:#F8F8F2;" data-v-20bba7bb> handle </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>Mesh</span><span style="color:#F8F8F2;" data-v-20bba7bb>(boxGeometry, boxMaterial);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>    handle.position.</span><span style="color:#50FA7B;" data-v-20bba7bb>copy</span><span style="color:#F8F8F2;" data-v-20bba7bb>(handlePos);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>    curveHandles.</span><span style="color:#50FA7B;" data-v-20bba7bb>push</span><span style="color:#F8F8F2;" data-v-20bba7bb>(handle);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>    scene.</span><span style="color:#50FA7B;" data-v-20bba7bb>add</span><span style="color:#F8F8F2;" data-v-20bba7bb>(handle);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>  }</span></span>
<span class="line" data-v-20bba7bb></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb>   // 创建立方样条曲线</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb> const</span><span style="color:#F8F8F2;" data-v-20bba7bb> curve </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>CatmullRomCurve3</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>   curveHandles.</span><span style="color:#50FA7B;" data-v-20bba7bb>map</span><span style="color:#F8F8F2;" data-v-20bba7bb>((</span><span style="color:#FFB86C;font-style:italic;" data-v-20bba7bb>handle</span><span style="color:#F8F8F2;" data-v-20bba7bb>) </span><span style="color:#FF79C6;" data-v-20bba7bb>=&gt;</span><span style="color:#F8F8F2;" data-v-20bba7bb> handle.position)</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb> );</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb> curve.curveType </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#E9F284;" data-v-20bba7bb> &quot;</span><span style="color:#F1FA8C;" data-v-20bba7bb>centripetal</span><span style="color:#E9F284;" data-v-20bba7bb>&quot;</span><span style="color:#F8F8F2;" data-v-20bba7bb>; </span><span style="color:#6272A4;" data-v-20bba7bb>// 曲线类型(切向加速调整)</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb> curve.closed </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#BD93F9;" data-v-20bba7bb> true</span><span style="color:#F8F8F2;" data-v-20bba7bb>; </span><span style="color:#6272A4;" data-v-20bba7bb>// 是否封闭</span></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb> // 创建曲线并根据关键点更新线条</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb> const</span><span style="color:#F8F8F2;" data-v-20bba7bb> points </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#F8F8F2;" data-v-20bba7bb> curve.</span><span style="color:#50FA7B;" data-v-20bba7bb>getPoints</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#BD93F9;" data-v-20bba7bb>50</span><span style="color:#F8F8F2;" data-v-20bba7bb>);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb> const</span><span style="color:#F8F8F2;" data-v-20bba7bb> line </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>LineLoop</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb>   new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>BufferGeometry</span><span style="color:#F8F8F2;" data-v-20bba7bb>().</span><span style="color:#50FA7B;" data-v-20bba7bb>setFromPoints</span><span style="color:#F8F8F2;" data-v-20bba7bb>(points),</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb>   new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>LineBasicMaterial</span><span style="color:#F8F8F2;" data-v-20bba7bb>({ color</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 0x00ff00</span><span style="color:#F8F8F2;" data-v-20bba7bb> })</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb> );</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb> scene.</span><span style="color:#50FA7B;" data-v-20bba7bb>add</span><span style="color:#F8F8F2;" data-v-20bba7bb>(line);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb> // 加载字体并创建 3D 文本</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb> const</span><span style="color:#F8F8F2;" data-v-20bba7bb> loader </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#50FA7B;" data-v-20bba7bb> FontLoader</span><span style="color:#F8F8F2;" data-v-20bba7bb>();</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb> loader.</span><span style="color:#50FA7B;" data-v-20bba7bb>load</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#E9F284;" data-v-20bba7bb>&quot;</span><span style="color:#F1FA8C;" data-v-20bba7bb>fonts/helvetiker_regular.typeface.json</span><span style="color:#E9F284;" data-v-20bba7bb>&quot;</span><span style="color:#F8F8F2;" data-v-20bba7bb>, </span><span style="color:#FF79C6;" data-v-20bba7bb>function</span><span style="color:#F8F8F2;" data-v-20bba7bb> (</span><span style="color:#FFB86C;font-style:italic;" data-v-20bba7bb>font</span><span style="color:#F8F8F2;" data-v-20bba7bb>) {</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>   const</span><span style="color:#F8F8F2;" data-v-20bba7bb> geometry </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#50FA7B;" data-v-20bba7bb> TextGeometry</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#E9F284;" data-v-20bba7bb>&quot;</span><span style="color:#F1FA8C;" data-v-20bba7bb>Hello three.js!</span><span style="color:#E9F284;" data-v-20bba7bb>&quot;</span><span style="color:#F8F8F2;" data-v-20bba7bb>, {</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>     font</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#F8F8F2;" data-v-20bba7bb> font,</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>     size</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 0.2</span><span style="color:#F8F8F2;" data-v-20bba7bb>,</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>     height</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 0.05</span><span style="color:#F8F8F2;" data-v-20bba7bb>,</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>     curveSegments</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 12</span><span style="color:#F8F8F2;" data-v-20bba7bb>,</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>     bevelEnabled</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> true</span><span style="color:#F8F8F2;" data-v-20bba7bb>,</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>     bevelThickness</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 0.02</span><span style="color:#F8F8F2;" data-v-20bba7bb>,</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>     bevelSize</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 0.01</span><span style="color:#F8F8F2;" data-v-20bba7bb>,</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>     bevelOffset</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 0</span><span style="color:#F8F8F2;" data-v-20bba7bb>,</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>     bevelSegments</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 5</span><span style="color:#F8F8F2;" data-v-20bba7bb>,</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>   });</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>   geometry.</span><span style="color:#50FA7B;" data-v-20bba7bb>rotateX</span><span style="color:#F8F8F2;" data-v-20bba7bb>(Math.</span><span style="color:#BD93F9;" data-v-20bba7bb>PI</span><span style="color:#F8F8F2;" data-v-20bba7bb>);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>   const</span><span style="color:#F8F8F2;" data-v-20bba7bb> material </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>MeshStandardMaterial</span><span style="color:#F8F8F2;" data-v-20bba7bb>({</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>     color</span><span style="color:#FF79C6;" data-v-20bba7bb>:</span><span style="color:#BD93F9;" data-v-20bba7bb> 0x99ffff</span><span style="color:#F8F8F2;" data-v-20bba7bb>,</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>   });</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>   const</span><span style="color:#F8F8F2;" data-v-20bba7bb> objectToCurve </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>Mesh</span><span style="color:#F8F8F2;" data-v-20bba7bb>(geometry, material);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb>   /*</span></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb>   </span></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb>   </span></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb>   */</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>   flow </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#50FA7B;" data-v-20bba7bb> Flow</span><span style="color:#F8F8F2;" data-v-20bba7bb>(objectToCurve);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>   flow.</span><span style="color:#50FA7B;" data-v-20bba7bb>updateCurve</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#BD93F9;" data-v-20bba7bb>0</span><span style="color:#F8F8F2;" data-v-20bba7bb>, curve);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>   scene.</span><span style="color:#50FA7B;" data-v-20bba7bb>add</span><span style="color:#F8F8F2;" data-v-20bba7bb>(flow.object3D);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb> });</span></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb> // 创建射线对象</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb> rayCaster </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#BD93F9;" data-v-20bba7bb> THREE</span><span style="color:#F8F8F2;" data-v-20bba7bb>.</span><span style="color:#50FA7B;" data-v-20bba7bb>Raycaster</span><span style="color:#F8F8F2;" data-v-20bba7bb>();</span></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb> // 创建变换控制器对象</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb> control </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-20bba7bb> new</span><span style="color:#50FA7B;" data-v-20bba7bb> TransformControls</span><span style="color:#F8F8F2;" data-v-20bba7bb>(camera, renderer.domElement);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb> control.</span><span style="color:#50FA7B;" data-v-20bba7bb>addEventListener</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#E9F284;" data-v-20bba7bb>&quot;</span><span style="color:#F1FA8C;" data-v-20bba7bb>dragging-changed</span><span style="color:#E9F284;" data-v-20bba7bb>&quot;</span><span style="color:#F8F8F2;" data-v-20bba7bb>, </span><span style="color:#FF79C6;" data-v-20bba7bb>function</span><span style="color:#F8F8F2;" data-v-20bba7bb> (</span><span style="color:#FFB86C;font-style:italic;" data-v-20bba7bb>event</span><span style="color:#F8F8F2;" data-v-20bba7bb>) {</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>   if</span><span style="color:#F8F8F2;" data-v-20bba7bb> (</span><span style="color:#FF79C6;" data-v-20bba7bb>!</span><span style="color:#F8F8F2;" data-v-20bba7bb>event.value) {</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>     const</span><span style="color:#F8F8F2;" data-v-20bba7bb> points </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#F8F8F2;" data-v-20bba7bb> curve.</span><span style="color:#50FA7B;" data-v-20bba7bb>getPoints</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#BD93F9;" data-v-20bba7bb>50</span><span style="color:#F8F8F2;" data-v-20bba7bb>);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>     line.geometry.</span><span style="color:#50FA7B;" data-v-20bba7bb>setFromPoints</span><span style="color:#F8F8F2;" data-v-20bba7bb>(points);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>     flow.</span><span style="color:#50FA7B;" data-v-20bba7bb>updateCurve</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#BD93F9;" data-v-20bba7bb>0</span><span style="color:#F8F8F2;" data-v-20bba7bb>, curve);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>   }</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb> });</span></span>
<span class="line" data-v-20bba7bb></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb>  // 逐帧动画函数</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>function</span><span style="color:#50FA7B;" data-v-20bba7bb> animate</span><span style="color:#F8F8F2;" data-v-20bba7bb>() {</span></span>
<span class="line" data-v-20bba7bb><span style="color:#50FA7B;" data-v-20bba7bb>  requestAnimationFrame</span><span style="color:#F8F8F2;" data-v-20bba7bb>(animate);</span></span>
<span class="line" data-v-20bba7bb></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb>  // 判断是否点击场景</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>  if</span><span style="color:#F8F8F2;" data-v-20bba7bb> (action </span><span style="color:#FF79C6;" data-v-20bba7bb>===</span><span style="color:#F8F8F2;" data-v-20bba7bb> ACTION_SELECT) {</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>    rayCaster.</span><span style="color:#50FA7B;" data-v-20bba7bb>setFromCamera</span><span style="color:#F8F8F2;" data-v-20bba7bb>(mouse, camera);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>    action </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#F8F8F2;" data-v-20bba7bb> ACTION_NONE;</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>    const</span><span style="color:#F8F8F2;" data-v-20bba7bb> intersects </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#F8F8F2;" data-v-20bba7bb> rayCaster.</span><span style="color:#50FA7B;" data-v-20bba7bb>intersectObjects</span><span style="color:#F8F8F2;" data-v-20bba7bb>(curveHandles, </span><span style="color:#BD93F9;" data-v-20bba7bb>false</span><span style="color:#F8F8F2;" data-v-20bba7bb>);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>    if</span><span style="color:#F8F8F2;" data-v-20bba7bb> (intersects.length) {</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>      const</span><span style="color:#F8F8F2;" data-v-20bba7bb> target </span><span style="color:#FF79C6;" data-v-20bba7bb>=</span><span style="color:#F8F8F2;" data-v-20bba7bb> intersects[</span><span style="color:#BD93F9;" data-v-20bba7bb>0</span><span style="color:#F8F8F2;" data-v-20bba7bb>].object;</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>      control.</span><span style="color:#50FA7B;" data-v-20bba7bb>attach</span><span style="color:#F8F8F2;" data-v-20bba7bb>(target);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>      scene.</span><span style="color:#50FA7B;" data-v-20bba7bb>add</span><span style="color:#F8F8F2;" data-v-20bba7bb>(control);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>    }</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>  }</span></span>
<span class="line" data-v-20bba7bb></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb>  // 曲线模拟器运动</span></span>
<span class="line" data-v-20bba7bb><span style="color:#FF79C6;" data-v-20bba7bb>  if</span><span style="color:#F8F8F2;" data-v-20bba7bb> (flow) {</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>    flow.</span><span style="color:#50FA7B;" data-v-20bba7bb>moveAlongCurve</span><span style="color:#F8F8F2;" data-v-20bba7bb>(</span><span style="color:#BD93F9;" data-v-20bba7bb>0.001</span><span style="color:#F8F8F2;" data-v-20bba7bb>);</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>  }</span></span>
<span class="line" data-v-20bba7bb></span>
<span class="line" data-v-20bba7bb><span style="color:#6272A4;" data-v-20bba7bb>  // 渲染场景</span></span>
<span class="line" data-v-20bba7bb><span style="color:#50FA7B;" data-v-20bba7bb>  render</span><span style="color:#F8F8F2;" data-v-20bba7bb>();</span></span>
<span class="line" data-v-20bba7bb><span style="color:#F8F8F2;" data-v-20bba7bb>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-20bba7bb><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div><div class="line-number" data-v-20bba7bb></div></div></div>`,1)),ws(' <div ref="modifierCurveRef"></div> '),Z("iframe",{src:"https://threejs.org/examples/webgl_modifier_curve.html",height:t.width/2,width:t.width},null,8,Ls),n[2]||(n[2]=Z("h1",{id:"参考",tabindex:"-1"},[Z("a",{class:"header-anchor",href:"#参考"},[Z("span",null,"参考")])],-1)),n[3]||(n[3]=Z("p",null,[gs("参考："),Z("a",{href:"https://threejs.org/",target:"_blank",rel:"noopener noreferrer"},"https://threejs.org/")],-1))])}const Gs=ms(Os,[["render",ks],["__scopeId","data-v-20bba7bb"],["__file","threejs-curve.html.vue"]]),Ns=JSON.parse('{"path":"/threejs/threejs-curve.html","title":"ThreeJS中的曲线应用","lang":"en-US","frontmatter":{"title":"ThreeJS中的曲线应用","date":"2022-02-01T00:00:00.000Z","category":["ThreeJS"],"description":"曲线运动 参考 参考：https://threejs.org/","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/threejs/threejs-curve.html"}],["meta",{"property":"og:title","content":"ThreeJS中的曲线应用"}],["meta",{"property":"og:description","content":"曲线运动 参考 参考：https://threejs.org/"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-10T14:15:12.000Z"}],["meta",{"property":"article:published_time","content":"2022-02-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-10T14:15:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ThreeJS中的曲线应用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-10T14:15:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"曲线运动","slug":"曲线运动","link":"#曲线运动","children":[]}],"git":{"createdTime":1675953479000,"updatedTime":1731248112000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":9},{"name":"卢祥","email":"example@qq.com","commits":4}]},"readingTime":{"minutes":3.89,"words":1166},"filePathRelative":"threejs/threejs-curve.md","localizedDate":"February 1, 2022","excerpt":"<h2>曲线运动</h2>\\n<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"background-color:#282A36;color:#F8F8F2\\"><pre class=\\"shiki dracula vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#6272A4\\">  // 从一系列的点创建一条平滑的三维样条曲线。</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  curve </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#FF79C6;font-weight:bold\\"> new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">CatmullRomCurve3</span><span style=\\"color:#F8F8F2\\">(</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    [</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6;font-weight:bold\\">      new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">Vector3</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#FF79C6\\">-</span><span style=\\"color:#BD93F9\\">10</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">0</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">10</span><span style=\\"color:#F8F8F2\\">),</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6;font-weight:bold\\">      new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">Vector3</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#FF79C6\\">-</span><span style=\\"color:#BD93F9\\">5</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">5</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">5</span><span style=\\"color:#F8F8F2\\">),</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6;font-weight:bold\\">      new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">Vector3</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#BD93F9\\">0</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">0</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">5</span><span style=\\"color:#F8F8F2\\">),</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6;font-weight:bold\\">      new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">Vector3</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#BD93F9\\">5</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#FF79C6\\">-</span><span style=\\"color:#BD93F9\\">5</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">5</span><span style=\\"color:#F8F8F2\\">),</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6;font-weight:bold\\">      new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">Vector3</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#BD93F9\\">10</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">0</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">10</span><span style=\\"color:#F8F8F2\\">),</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    ],</span></span>\\n<span class=\\"line\\"><span style=\\"color:#BD93F9\\">    true</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  );</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">  // 使用getPoint（t）返回一组divisions+1的点</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">  const</span><span style=\\"color:#F8F8F2\\"> points </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> curve.</span><span style=\\"color:#50FA7B\\">getPoints</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#BD93F9\\">500</span><span style=\\"color:#F8F8F2\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">  // 通过点队列设置该 BufferGeometry 的 attribute。</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">  const</span><span style=\\"color:#F8F8F2\\"> geometry </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#FF79C6;font-weight:bold\\"> new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">BufferGeometry</span><span style=\\"color:#F8F8F2\\">().</span><span style=\\"color:#50FA7B\\">setFromPoints</span><span style=\\"color:#F8F8F2\\">(points);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">  const</span><span style=\\"color:#F8F8F2\\"> material </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#FF79C6;font-weight:bold\\"> new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">LineBasicMaterial</span><span style=\\"color:#F8F8F2\\">({ color</span><span style=\\"color:#FF79C6\\">:</span><span style=\\"color:#BD93F9\\"> 0xff0000</span><span style=\\"color:#F8F8F2\\"> });</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">  const</span><span style=\\"color:#F8F8F2\\"> curveObject </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#FF79C6;font-weight:bold\\"> new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">Line</span><span style=\\"color:#F8F8F2\\">(geometry, material);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  scene.</span><span style=\\"color:#50FA7B\\">add</span><span style=\\"color:#F8F8F2\\">(curveObject);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">  function</span><span style=\\"color:#50FA7B\\"> animate</span><span style=\\"color:#F8F8F2\\">(){</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">      renderer.</span><span style=\\"color:#50FA7B\\">render</span><span style=\\"color:#F8F8F2\\">(scene, camera);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">      const</span><span style=\\"color:#F8F8F2\\"> elapsed </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> clock.</span><span style=\\"color:#50FA7B\\">getElapsedTime</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">      const</span><span style=\\"color:#F8F8F2\\"> time </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> elapsed</span><span style=\\"color:#FF79C6\\">/</span><span style=\\"color:#BD93F9\\">10</span><span style=\\"color:#FF79C6\\">%</span><span style=\\"color:#BD93F9\\">1</span><span style=\\"color:#F8F8F2\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">      const</span><span style=\\"color:#F8F8F2\\"> point </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> curve.</span><span style=\\"color:#50FA7B\\">getPoint</span><span style=\\"color:#F8F8F2\\">(time);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">      moon.position.</span><span style=\\"color:#50FA7B\\">copy</span><span style=\\"color:#F8F8F2\\">(point);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">      camera.position.</span><span style=\\"color:#50FA7B\\">copy</span><span style=\\"color:#F8F8F2\\">(point);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">      camera.</span><span style=\\"color:#50FA7B\\">lookAt</span><span style=\\"color:#F8F8F2\\">(earth.position)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#50FA7B\\">      requestAnimationFrame</span><span style=\\"color:#F8F8F2\\">(animate)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  }</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{Gs as comp,Ns as data};
