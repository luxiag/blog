import{_ as O,e as y,f as e,h as _,H as B,F as L,D as M,r as u,z as A,i as P,J as w,o as m,E as D}from"./app-DPJYBgB6.js";const j={__name:"virtual-list.html",setup(k,{expose:o}){o();const I=u(null),p=new Array(1e4).fill(0).map((l,s)=>({id:s,name:`第${s}个元素`})),F=A({list:[],height:20,startOffset:0}),b=l=>{const s=l.target.scrollTop||0,n=Math.floor(s/F.height),d=n+20;F.list=p.slice(n,d),F.startOffset=s-s%F.height};P(()=>{b({target:{scrollTop:0}})});const v=u(),h=u(),H=u(null),a=A({list:[],cachedPositions:[],height:20,startOffset:0,startIndex:0,originStartIndex:0,phantomHeight:0}),g=new Array(1e4).fill(0).map((l,s)=>({id:s,name:"123".repeat(Math.random()*100),bottom:s*a.height})),E=()=>{const l=[];for(let s=0;s<g.length;s++)l[s]={index:s,name:g[s].name,height:a.height,top:s*a.height,bottom:(s+1)*a.height,dValue:0};a.list=l.slice(0,20),a.cachedPositions=l},f=()=>{const l=h.value.childNodes;let s=null;l.forEach(t=>{if(!t||t.nodeType!==1)return;s||(s=t);const r=t.getBoundingClientRect(),{height:q}=r,C=t.dataset.index,x=a.cachedPositions[C].height-q;x&&(a.cachedPositions[C].height=q,a.cachedPositions[C].bottom-=x,a.cachedPositions[C].dValue=x)});let n=0;s&&(n=Number(s.dataset.index));const d=a.cachedPositions.length;let c=a.cachedPositions[n].dValue;a.cachedPositions[n].dValue=0;for(let t=n+1;t<d;t++){const r=a.cachedPositions[t];a.cachedPositions[t].top-=a.cachedPositions[t-1].bottom,a.cachedPositions[t].bottom=a.cachedPositions[t].bottom-c,r.dValue!==0&&(c+=r.dValue,r.dValue=0)}const i=a.cachedPositions[d-1].bottom;console.log(i,"height"),a.phantomHeight=i},R=l=>{const s=l.target.scrollTop||0,n=V(s);if(n===a.originStartIndex)return;a.originStartIndex=n,a.startIndex=n;const d=Math.min(n+20,a.cachedPositions.length+1),c=Math.max(n-5,0);a.list=a.cachedPositions.slice(c,d),a.startOffset=c>1?a.cachedPositions[c-1].bottom:0},V=l=>{const s=a.cachedPositions;let n=0,d=s.length-1,c=-1;for(;n<d;){c=Math.floor((n+d)/2);const t=s[c].bottom;if(t==l)return c;t<l?n=c+1:t>l&&(d=c-1)}const i=s[c];return i&&i.bottom<l&&(c+=1),c};w(()=>{f()});const S=()=>{E()};S(),P(()=>{f()});const T={fixedListRef:I,allList:p,fixedModel:F,fixedScrollEvent:b,phantomRef:v,waterListContainerRef:h,waterListRef:H,waterModel:a,allPhantomList:g,initCachedPositions:E,updateCachedPositions:f,waterScrollEvent:R,getStartIndex:V,initSetup:S,reactive:A,ref:u,onMounted:P,onUpdated:w};return Object.defineProperty(T,"__isScriptSetup",{enumerable:!1,value:!0}),T}},N=["data-index"];function Z(k,o,I,p,F,b){return m(),y("div",null,[o[1]||(o[1]=e("h1",{id:"固定列表",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#固定列表"},[e("span",null,"固定列表")])],-1)),e("div",{class:"list",ref:"fixedListRef",onScroll:p.fixedScrollEvent},[e("div",{class:"list-containter",style:B({transform:`translate3d(0,${p.fixedModel.startOffset}px,0)`})},[(m(!0),y(L,null,M(p.fixedModel.list,v=>(m(),y("div",{class:"fixed-list-item",key:v.id},D(v.name),1))),128))],4),o[0]||(o[0]=e("div",{class:"list-place"},null,-1))],544),o[2]||(o[2]=_(`<ul data-v-c9369a70><li data-v-c9369a70>设置2个子元素，一个子元素是列表，一个子元素是占位元素</li><li data-v-c9369a70>占位元素的高度是所有列表元素的总高度</li><li data-v-c9369a70>列表元素的高度是固定的，所以列表元素的总高度也是固定的</li><li data-v-c9369a70>当滚动时，根据滚动条的位置，计算出当前应该显示的列表元素的起始索引和结束索引</li></ul><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#282A36;color:#F8F8F2;" data-v-c9369a70><pre class="shiki dracula vp-code" data-v-c9369a70><code data-v-c9369a70><span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>&lt;</span><span style="color:#FF79C6;" data-v-c9369a70>div</span><span style="color:#50FA7B;font-style:italic;" data-v-c9369a70> class</span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#F1FA8C;" data-v-c9369a70>list</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-c9369a70> ref</span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#F1FA8C;" data-v-c9369a70>fixedListRef</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-c9369a70> @scroll</span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#F1FA8C;" data-v-c9369a70>fixedScrollEvent</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#F8F8F2;" data-v-c9369a70>&gt;</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>  &lt;!-- 列表 --&gt;</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  &lt;</span><span style="color:#FF79C6;" data-v-c9369a70>div</span><span style="color:#50FA7B;font-style:italic;" data-v-c9369a70> class</span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#F1FA8C;" data-v-c9369a70>list-containter</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-c9369a70> :style</span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#F1FA8C;" data-v-c9369a70>{transform: \`translate3d(0,\${startOffset}px,0)\`}</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#F8F8F2;" data-v-c9369a70>&gt;</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    &lt;</span><span style="color:#FF79C6;" data-v-c9369a70>div</span><span style="color:#50FA7B;font-style:italic;" data-v-c9369a70> class</span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#F1FA8C;" data-v-c9369a70>fixed-list-item</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-c9369a70> v-for</span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#F1FA8C;" data-v-c9369a70>ite in list</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-c9369a70> :key</span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#F1FA8C;" data-v-c9369a70>ite.id</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#F8F8F2;" data-v-c9369a70>&gt;</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>     {{ite.name}}</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    &lt;/</span><span style="color:#FF79C6;" data-v-c9369a70>div</span><span style="color:#F8F8F2;" data-v-c9369a70>&gt;</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  &lt;/</span><span style="color:#FF79C6;" data-v-c9369a70>div</span><span style="color:#F8F8F2;" data-v-c9369a70>&gt;</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>  &lt;!-- 占位元素 计算整体高度 赋值 --&gt;</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  &lt;</span><span style="color:#FF79C6;" data-v-c9369a70>div</span><span style="color:#50FA7B;font-style:italic;" data-v-c9369a70> class</span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#F1FA8C;" data-v-c9369a70>list-place</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-c9369a70> :height</span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#F1FA8C;" data-v-c9369a70>allHeight</span><span style="color:#E9F284;" data-v-c9369a70>&quot;</span><span style="color:#F8F8F2;" data-v-c9369a70>&gt;&lt;/</span><span style="color:#FF79C6;" data-v-c9369a70>div</span><span style="color:#F8F8F2;" data-v-c9369a70>&gt;</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>&lt;/</span><span style="color:#FF79C6;" data-v-c9369a70>div</span><span style="color:#F8F8F2;" data-v-c9369a70>&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-c9369a70><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div></div></div><p data-v-c9369a70>监听滚动事件，获取滚动高度和列表元素</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-c9369a70><pre class="shiki dracula vp-code" data-v-c9369a70><code data-v-c9369a70><span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>const</span><span style="color:#50FA7B;" data-v-c9369a70> scroll</span><span style="color:#FF79C6;" data-v-c9369a70> =</span><span style="color:#F8F8F2;" data-v-c9369a70> (</span><span style="color:#FFB86C;font-style:italic;" data-v-c9369a70>e</span><span style="color:#F8F8F2;" data-v-c9369a70>) </span><span style="color:#FF79C6;" data-v-c9369a70>=&gt;</span><span style="color:#F8F8F2;" data-v-c9369a70> {</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> scrollTop </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> e.target.scrollTop </span><span style="color:#FF79C6;" data-v-c9369a70>||</span><span style="color:#BD93F9;" data-v-c9369a70> 0</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>  // 滚动高度 / 列表元素高度 = 起始索引</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> startIndex </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> Math.</span><span style="color:#50FA7B;" data-v-c9369a70>floor</span><span style="color:#F8F8F2;" data-v-c9369a70>(scrollTop </span><span style="color:#FF79C6;" data-v-c9369a70>/</span><span style="color:#F8F8F2;" data-v-c9369a70> height)</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> endIndex </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> startIndex </span><span style="color:#FF79C6;" data-v-c9369a70>+</span><span style="color:#BD93F9;" data-v-c9369a70> 20</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> list </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> allList.</span><span style="color:#50FA7B;" data-v-c9369a70>slice</span><span style="color:#F8F8F2;" data-v-c9369a70>(startIndex, endIndex)</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>  // 计算起始偏移量 = 滚动高度 - 滚动位置相对于当前列表项高度的偏移量</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> startOffset </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> scrollTop </span><span style="color:#FF79C6;" data-v-c9369a70>-</span><span style="color:#F8F8F2;" data-v-c9369a70> (scrollTop </span><span style="color:#FF79C6;" data-v-c9369a70>%</span><span style="color:#F8F8F2;" data-v-c9369a70> height)</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-c9369a70><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div></div></div><h1 id="不固定列表" tabindex="-1" data-v-c9369a70><a class="header-anchor" href="#不固定列表" data-v-c9369a70><span data-v-c9369a70>不固定列表</span></a></h1>`,5)),e("div",{class:"water-list",ref:"waterListRef",onScroll:p.waterScrollEvent},[e("div",{class:"phantomContainer",ref:"phantomRef",style:B({position:"relative",height:p.waterModel.phantomHeight+"px"})},null,4),e("div",{ref:"waterListContainerRef",style:B({transform:`translate3d(0,${p.waterModel.startOffset}px,0)`}),class:"water-list-items"},[(m(!0),y(L,null,M(p.waterModel.list,(v,h)=>(m(),y("div",{key:v.id,"data-index":h,class:"water-list-item"},[e("p",null," No. "+D(v.index),1),e("p",null,D(v.name),1)],8,N))),128))],4)],544),o[3]||(o[3]=_(`<ul data-v-c9369a70><li data-v-c9369a70>先假设每个元素的高度都是固定的，然后计算出所有元素的总高度</li><li data-v-c9369a70>当元素渲染到dom时，获取到每个元素的真实高度，记录并重新计算元素的总高度</li><li data-v-c9369a70>滚动时获取滚动高度，从记录的元素高度中找到当前应该显示的元素，计算出起始索引和结束索引</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-c9369a70><pre class="shiki dracula vp-code" data-v-c9369a70><code data-v-c9369a70><span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>const</span><span style="color:#50FA7B;" data-v-c9369a70> initCachedPositions</span><span style="color:#FF79C6;" data-v-c9369a70> =</span><span style="color:#F8F8F2;" data-v-c9369a70> () </span><span style="color:#FF79C6;" data-v-c9369a70>=&gt;</span><span style="color:#F8F8F2;" data-v-c9369a70> {</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> cachedPositions </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> []</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>  // 假设每个元素的高度都是固定的</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> height </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#BD93F9;" data-v-c9369a70> 20</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  for</span><span style="color:#F8F8F2;" data-v-c9369a70> (</span><span style="color:#FF79C6;" data-v-c9369a70>let</span><span style="color:#F8F8F2;" data-v-c9369a70> i </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#BD93F9;" data-v-c9369a70> 0</span><span style="color:#F8F8F2;" data-v-c9369a70>; i </span><span style="color:#FF79C6;" data-v-c9369a70>&lt;</span><span style="color:#F8F8F2;" data-v-c9369a70> allPhantomList.length; i</span><span style="color:#FF79C6;" data-v-c9369a70>++</span><span style="color:#F8F8F2;" data-v-c9369a70>) {</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    cachedPositions[i] </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> {</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>      index</span><span style="color:#FF79C6;" data-v-c9369a70>:</span><span style="color:#F8F8F2;" data-v-c9369a70> i,</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>      height</span><span style="color:#FF79C6;" data-v-c9369a70>:</span><span style="color:#F8F8F2;" data-v-c9369a70> height,</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>      top</span><span style="color:#FF79C6;" data-v-c9369a70>:</span><span style="color:#F8F8F2;" data-v-c9369a70> i </span><span style="color:#FF79C6;" data-v-c9369a70>*</span><span style="color:#F8F8F2;" data-v-c9369a70> height,</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>      bottom</span><span style="color:#FF79C6;" data-v-c9369a70>:</span><span style="color:#F8F8F2;" data-v-c9369a70> (i </span><span style="color:#FF79C6;" data-v-c9369a70>+</span><span style="color:#BD93F9;" data-v-c9369a70> 1</span><span style="color:#F8F8F2;" data-v-c9369a70>) </span><span style="color:#FF79C6;" data-v-c9369a70>*</span><span style="color:#F8F8F2;" data-v-c9369a70> height,</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>      // 偏移量</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>      dValue</span><span style="color:#FF79C6;" data-v-c9369a70>:</span><span style="color:#BD93F9;" data-v-c9369a70> 0</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    }</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  }</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  list </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> cachedPositions.</span><span style="color:#50FA7B;" data-v-c9369a70>slice</span><span style="color:#F8F8F2;" data-v-c9369a70>(</span><span style="color:#BD93F9;" data-v-c9369a70>0</span><span style="color:#F8F8F2;" data-v-c9369a70>, </span><span style="color:#BD93F9;" data-v-c9369a70>20</span><span style="color:#F8F8F2;" data-v-c9369a70>)</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>}</span></span>
<span class="line" data-v-c9369a70></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>const</span><span style="color:#50FA7B;" data-v-c9369a70> updateCachedPositions</span><span style="color:#FF79C6;" data-v-c9369a70> =</span><span style="color:#F8F8F2;" data-v-c9369a70> () </span><span style="color:#FF79C6;" data-v-c9369a70>=&gt;</span><span style="color:#F8F8F2;" data-v-c9369a70> {</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>  // 元素列表中的循环元素</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>  // 获取真实高度</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> nodes </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> waterListContainerRef.value.childNodes</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  let</span><span style="color:#F8F8F2;" data-v-c9369a70> start </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#BD93F9;" data-v-c9369a70> null</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  nodes.</span><span style="color:#50FA7B;" data-v-c9369a70>forEach</span><span style="color:#F8F8F2;" data-v-c9369a70>(</span><span style="color:#FFB86C;font-style:italic;" data-v-c9369a70>node</span><span style="color:#FF79C6;" data-v-c9369a70> =&gt;</span><span style="color:#F8F8F2;" data-v-c9369a70> {</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>    // nodeType = 1  为元素，反正获取空白等文本类型</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>    if</span><span style="color:#F8F8F2;" data-v-c9369a70> (</span><span style="color:#FF79C6;" data-v-c9369a70>!</span><span style="color:#F8F8F2;" data-v-c9369a70>node </span><span style="color:#FF79C6;" data-v-c9369a70>||</span><span style="color:#F8F8F2;" data-v-c9369a70> node.nodeType </span><span style="color:#FF79C6;" data-v-c9369a70>!==</span><span style="color:#BD93F9;" data-v-c9369a70> 1</span><span style="color:#F8F8F2;" data-v-c9369a70>) {</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>      return</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    }</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>    if</span><span style="color:#F8F8F2;" data-v-c9369a70> (</span><span style="color:#FF79C6;" data-v-c9369a70>!</span><span style="color:#F8F8F2;" data-v-c9369a70>start) {</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>      start </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> node</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    }</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>    const</span><span style="color:#F8F8F2;" data-v-c9369a70> rect </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> node.</span><span style="color:#50FA7B;" data-v-c9369a70>getBoundingClientRect</span><span style="color:#F8F8F2;" data-v-c9369a70>()</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>    const</span><span style="color:#F8F8F2;" data-v-c9369a70> { height } </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> rect</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>    const</span><span style="color:#F8F8F2;" data-v-c9369a70> index </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> node.dataset.index</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>    // 原来旧的固定高度</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>    const</span><span style="color:#F8F8F2;" data-v-c9369a70> oldHeight </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> cachedPositions[index].height</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>    // 和正式高度的偏移量</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>    const</span><span style="color:#F8F8F2;" data-v-c9369a70> dValue </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> oldHeight </span><span style="color:#FF79C6;" data-v-c9369a70>-</span><span style="color:#F8F8F2;" data-v-c9369a70> height;</span></span>
<span class="line" data-v-c9369a70></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>    // 存在偏移量 更新数据</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>    if</span><span style="color:#F8F8F2;" data-v-c9369a70> (dValue) {</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>      cachedPositions[index].height </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> height</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>      cachedPositions[index].bottom </span><span style="color:#FF79C6;" data-v-c9369a70>-=</span><span style="color:#F8F8F2;" data-v-c9369a70> dValue</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>      cachedPositions[index].dValue </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> dValue</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    }</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  })</span></span>
<span class="line" data-v-c9369a70></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>  // 重新计算总高度</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  let</span><span style="color:#F8F8F2;" data-v-c9369a70> startIndex </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#BD93F9;" data-v-c9369a70> 0</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  if</span><span style="color:#F8F8F2;" data-v-c9369a70> (start) {</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>    // 当前列表的渲染元素的起始索引</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    startIndex </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#50FA7B;" data-v-c9369a70> Number</span><span style="color:#F8F8F2;" data-v-c9369a70>(start.dataset.index)</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  }</span></span>
<span class="line" data-v-c9369a70></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> cachedPositionsLen </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> cachedPositions.length</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>  // 获取偏移量</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  let</span><span style="color:#F8F8F2;" data-v-c9369a70> cumulativeDiffHeight </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> cachedPositions[startIndex].dValue</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  cachedPositions[startIndex].dValue </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#BD93F9;" data-v-c9369a70> 0</span></span>
<span class="line" data-v-c9369a70></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  for</span><span style="color:#F8F8F2;" data-v-c9369a70> (</span><span style="color:#FF79C6;" data-v-c9369a70>let</span><span style="color:#F8F8F2;" data-v-c9369a70> i </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> startIndex </span><span style="color:#FF79C6;" data-v-c9369a70>+</span><span style="color:#BD93F9;" data-v-c9369a70> 1</span><span style="color:#F8F8F2;" data-v-c9369a70>; i </span><span style="color:#FF79C6;" data-v-c9369a70>&lt;</span><span style="color:#F8F8F2;" data-v-c9369a70> cachedPositionsLen; i</span><span style="color:#FF79C6;" data-v-c9369a70>++</span><span style="color:#F8F8F2;" data-v-c9369a70>) {</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>    const</span><span style="color:#F8F8F2;" data-v-c9369a70> item </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> cachedPositions[i]</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    cachedPositions[i].top </span><span style="color:#FF79C6;" data-v-c9369a70>-=</span><span style="color:#F8F8F2;" data-v-c9369a70> cachedPositions[i </span><span style="color:#FF79C6;" data-v-c9369a70>-</span><span style="color:#BD93F9;" data-v-c9369a70> 1</span><span style="color:#F8F8F2;" data-v-c9369a70>].bottom</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    cachedPositions[i].bottom </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> cachedPositions[i].bottom </span><span style="color:#FF79C6;" data-v-c9369a70>-</span><span style="color:#F8F8F2;" data-v-c9369a70> cumulativeDiffHeight</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>    if</span><span style="color:#F8F8F2;" data-v-c9369a70> (item.dValue </span><span style="color:#FF79C6;" data-v-c9369a70>!==</span><span style="color:#BD93F9;" data-v-c9369a70> 0</span><span style="color:#F8F8F2;" data-v-c9369a70>) {</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>      // 偏移量下面的元素计算要累计上面的偏移量 才是正确的偏移量</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>      cumulativeDiffHeight </span><span style="color:#FF79C6;" data-v-c9369a70>+=</span><span style="color:#F8F8F2;" data-v-c9369a70> item.dValue</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>      item.dValue </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#BD93F9;" data-v-c9369a70> 0</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    }</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  }</span></span>
<span class="line" data-v-c9369a70></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> height </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> cachedPositions[cachedPositionsLen </span><span style="color:#FF79C6;" data-v-c9369a70>-</span><span style="color:#BD93F9;" data-v-c9369a70> 1</span><span style="color:#F8F8F2;" data-v-c9369a70>].bottom</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>  // 更新占位高度</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  phantomHeight </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> height</span></span>
<span class="line" data-v-c9369a70></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>}</span></span>
<span class="line" data-v-c9369a70></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>const</span><span style="color:#50FA7B;" data-v-c9369a70> scroll</span><span style="color:#FF79C6;" data-v-c9369a70> =</span><span style="color:#F8F8F2;" data-v-c9369a70> (</span><span style="color:#FFB86C;font-style:italic;" data-v-c9369a70>e</span><span style="color:#F8F8F2;" data-v-c9369a70>) </span><span style="color:#FF79C6;" data-v-c9369a70>=&gt;</span><span style="color:#F8F8F2;" data-v-c9369a70> {</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> scrollTop </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> e.target.scrollTop </span><span style="color:#FF79C6;" data-v-c9369a70>||</span><span style="color:#BD93F9;" data-v-c9369a70> 0</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>  // 根据滚动高度获取对应的起始索引</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> startIndex </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#50FA7B;" data-v-c9369a70> getStartIndex</span><span style="color:#F8F8F2;" data-v-c9369a70>(scrollTop)</span></span>
<span class="line" data-v-c9369a70></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  if</span><span style="color:#F8F8F2;" data-v-c9369a70>(startIndex </span><span style="color:#FF79C6;" data-v-c9369a70>===</span><span style="color:#F8F8F2;" data-v-c9369a70> originStartIndex) </span><span style="color:#FF79C6;" data-v-c9369a70>return</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  originStartIndex </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> startIndex</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  startIndex </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> startIndex</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> endIndex </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> Math.</span><span style="color:#50FA7B;" data-v-c9369a70>min</span><span style="color:#F8F8F2;" data-v-c9369a70>(startIndex </span><span style="color:#FF79C6;" data-v-c9369a70>+</span><span style="color:#BD93F9;" data-v-c9369a70> 20</span><span style="color:#F8F8F2;" data-v-c9369a70>, cachedPositions.length </span><span style="color:#FF79C6;" data-v-c9369a70>+</span><span style="color:#BD93F9;" data-v-c9369a70> 1</span><span style="color:#F8F8F2;" data-v-c9369a70>)</span></span>
<span class="line" data-v-c9369a70><span style="color:#6272A4;" data-v-c9369a70>  // startIndex -5 必须 不如滚动到最下面的时候，会造成滚动抖动</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> index </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> Math.</span><span style="color:#50FA7B;" data-v-c9369a70>max</span><span style="color:#F8F8F2;" data-v-c9369a70>(startIndex </span><span style="color:#FF79C6;" data-v-c9369a70>-</span><span style="color:#BD93F9;" data-v-c9369a70> 5</span><span style="color:#F8F8F2;" data-v-c9369a70>,</span><span style="color:#BD93F9;" data-v-c9369a70>0</span><span style="color:#F8F8F2;" data-v-c9369a70>)</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  list </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> cachedPositions.</span><span style="color:#50FA7B;" data-v-c9369a70>slice</span><span style="color:#F8F8F2;" data-v-c9369a70>(index, endIndex)</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  startOffset </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> index </span><span style="color:#FF79C6;" data-v-c9369a70>&gt;</span><span style="color:#BD93F9;" data-v-c9369a70> 1</span><span style="color:#FF79C6;" data-v-c9369a70> ?</span><span style="color:#F8F8F2;" data-v-c9369a70> cachedPositions[index </span><span style="color:#FF79C6;" data-v-c9369a70>-</span><span style="color:#BD93F9;" data-v-c9369a70>1</span><span style="color:#F8F8F2;" data-v-c9369a70>].bottom </span><span style="color:#FF79C6;" data-v-c9369a70>:</span><span style="color:#BD93F9;" data-v-c9369a70> 0</span></span>
<span class="line" data-v-c9369a70></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>}</span></span>
<span class="line" data-v-c9369a70></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>const</span><span style="color:#50FA7B;" data-v-c9369a70> getStartIndex</span><span style="color:#FF79C6;" data-v-c9369a70> =</span><span style="color:#F8F8F2;" data-v-c9369a70> (</span><span style="color:#FFB86C;font-style:italic;" data-v-c9369a70>value</span><span style="color:#F8F8F2;" data-v-c9369a70>) </span><span style="color:#FF79C6;" data-v-c9369a70>=&gt;</span><span style="color:#F8F8F2;" data-v-c9369a70> {</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> list </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> cachedPositions</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  let</span><span style="color:#F8F8F2;" data-v-c9369a70> left </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#BD93F9;" data-v-c9369a70> 0</span><span style="color:#F8F8F2;" data-v-c9369a70>, right </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> list.length </span><span style="color:#FF79C6;" data-v-c9369a70>-</span><span style="color:#BD93F9;" data-v-c9369a70> 1</span><span style="color:#F8F8F2;" data-v-c9369a70>, mid </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#FF79C6;" data-v-c9369a70> -</span><span style="color:#BD93F9;" data-v-c9369a70>1</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  while</span><span style="color:#F8F8F2;" data-v-c9369a70> (left </span><span style="color:#FF79C6;" data-v-c9369a70>&lt;</span><span style="color:#F8F8F2;" data-v-c9369a70> right) {</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    mid </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> Math.</span><span style="color:#50FA7B;" data-v-c9369a70>floor</span><span style="color:#F8F8F2;" data-v-c9369a70>((left </span><span style="color:#FF79C6;" data-v-c9369a70>+</span><span style="color:#F8F8F2;" data-v-c9369a70> right) </span><span style="color:#FF79C6;" data-v-c9369a70>/</span><span style="color:#BD93F9;" data-v-c9369a70> 2</span><span style="color:#F8F8F2;" data-v-c9369a70>)</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>    const</span><span style="color:#F8F8F2;" data-v-c9369a70> midValue </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> list[mid].bottom</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>    if</span><span style="color:#F8F8F2;" data-v-c9369a70> (midValue </span><span style="color:#FF79C6;" data-v-c9369a70>==</span><span style="color:#F8F8F2;" data-v-c9369a70> value) {</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>      return</span><span style="color:#F8F8F2;" data-v-c9369a70> mid</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    } </span><span style="color:#FF79C6;" data-v-c9369a70>else</span><span style="color:#FF79C6;" data-v-c9369a70> if</span><span style="color:#F8F8F2;" data-v-c9369a70> (midValue </span><span style="color:#FF79C6;" data-v-c9369a70>&lt;</span><span style="color:#F8F8F2;" data-v-c9369a70> value) {</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>      left </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> mid </span><span style="color:#FF79C6;" data-v-c9369a70>+</span><span style="color:#BD93F9;" data-v-c9369a70> 1</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    } </span><span style="color:#FF79C6;" data-v-c9369a70>else</span><span style="color:#FF79C6;" data-v-c9369a70> if</span><span style="color:#F8F8F2;" data-v-c9369a70> (midValue </span><span style="color:#FF79C6;" data-v-c9369a70>&gt;</span><span style="color:#F8F8F2;" data-v-c9369a70> value) {</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>      right </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> mid </span><span style="color:#FF79C6;" data-v-c9369a70>-</span><span style="color:#BD93F9;" data-v-c9369a70> 1</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    }</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  }</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  const</span><span style="color:#F8F8F2;" data-v-c9369a70> targetItem </span><span style="color:#FF79C6;" data-v-c9369a70>=</span><span style="color:#F8F8F2;" data-v-c9369a70> list[mid]</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  if</span><span style="color:#F8F8F2;" data-v-c9369a70> (targetItem </span><span style="color:#FF79C6;" data-v-c9369a70>&amp;&amp;</span><span style="color:#F8F8F2;" data-v-c9369a70> targetItem.bottom </span><span style="color:#FF79C6;" data-v-c9369a70>&lt;</span><span style="color:#F8F8F2;" data-v-c9369a70> value) {</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>    mid </span><span style="color:#FF79C6;" data-v-c9369a70>+=</span><span style="color:#BD93F9;" data-v-c9369a70> 1</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>  }</span></span>
<span class="line" data-v-c9369a70><span style="color:#FF79C6;" data-v-c9369a70>  return</span><span style="color:#F8F8F2;" data-v-c9369a70> mid</span></span>
<span class="line" data-v-c9369a70><span style="color:#F8F8F2;" data-v-c9369a70>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-c9369a70><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div><div class="line-number" data-v-c9369a70></div></div></div><h1 id="参考" tabindex="-1" data-v-c9369a70><a class="header-anchor" href="#参考" data-v-c9369a70><span data-v-c9369a70>参考</span></a></h1><ul data-v-c9369a70><li data-v-c9369a70><a href="https://codesandbox.io/p/sandbox/a-v-list-has-dynamic-inner-height-yh0r7?file=%2Fsrc%2FVList.tsx%3A129%2C31" target="_blank" rel="noopener noreferrer" data-v-c9369a70>https://codesandbox.io/p/sandbox/a-v-list-has-dynamic-inner-height-yh0r7?file=%2Fsrc%2FVList.tsx%3A129%2C31</a></li></ul>`,4))])}const U=O(j,[["render",Z],["__scopeId","data-v-c9369a70"],["__file","virtual-list.html.vue"]]),$=JSON.parse('{"path":"/javascript/virtual-list.html","title":"虚拟列表","lang":"en-US","frontmatter":{"title":"虚拟列表","date":"2025-02-20T00:00:00.000Z","category":["JavaScript"],"description":"固定列表 {{ite.name}} 设置2个子元素，一个子元素是列表，一个子元素是占位元素 占位元素的高度是所有列表元素的总高度 列表元素的高度是固定的，所以列表元素的总高度也是固定的 当滚动时，根据滚动条的位置，计算出当前应该显示的列表元素的起始索引和结束索引 监听滚动事件，获取滚动高度和列表元素 不固定列表 No. {{ ite.index }} ...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/javascript/virtual-list.html"}],["meta",{"property":"og:title","content":"虚拟列表"}],["meta",{"property":"og:description","content":"固定列表 {{ite.name}} 设置2个子元素，一个子元素是列表，一个子元素是占位元素 占位元素的高度是所有列表元素的总高度 列表元素的高度是固定的，所以列表元素的总高度也是固定的 当滚动时，根据滚动条的位置，计算出当前应该显示的列表元素的起始索引和结束索引 监听滚动事件，获取滚动高度和列表元素 不固定列表 No. {{ ite.index }} ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-04-23T08:18:43.000Z"}],["meta",{"property":"article:published_time","content":"2025-02-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-23T08:18:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"虚拟列表\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-23T08:18:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"git":{"createdTime":1740723109000,"updatedTime":1745396323000,"contributors":[{"name":"luxiag","username":"luxiag","email":"luxiag@qq.com","commits":5,"url":"https://github.com/luxiag"}]},"readingTime":{"minutes":4.7,"words":1409},"filePathRelative":"javascript/virtual-list.md","localizedDate":"February 20, 2025","excerpt":"\\n<div class=\\"list\\" ref=\\"fixedListRef\\" @scroll=\\"fixedScrollEvent\\">\\n  <div class=\\"list-containter\\" :style=\\"{transform: `translate3d(0,${fixedModel.startOffset}px,0)`}\\">\\n    <div class=\\"fixed-list-item\\" v-for=\\"ite in fixedModel.list\\" :key=\\"ite.id\\">\\n     {{ite.name}}\\n    </div>\\n  </div>\\n  <div class=\\"list-place\\"></div>\\n</div>","autoDesc":true}');export{U as comp,$ as data};
