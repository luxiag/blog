import{_ as n,e as a,g as l,o as e}from"./app-BcLUFOMF.js";const o={};function p(t,s){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="ios兼容" tabindex="-1"><a class="header-anchor" href="#ios兼容"><span>IOS兼容</span></a></h1><h2 id="ios系统下输入框光标高度不正常" tabindex="-1"><a class="header-anchor" href="#ios系统下输入框光标高度不正常"><span>IOS系统下输入框光标高度不正常</span></a></h2><ul><li>问题症状：input输入框光标，在安卓手机上显示没有问题，但是在苹果手机上当点击输入的时候，光标的高度和父盒子的高度一样</li><li>原因分析：通常我们习惯用height属性设置行间的高度和line-height属性设置行间的距离（行高），当点击输入的时候，光标的高度就自动和父盒子的高度一样了。（谷歌浏览器的设计原则，还有一种可能就是当没有内容的时候光标的高度等于input的line-height的值，当有内容时，光标从input的顶端到文字的底部）</li><li>解决方案：高度height和行高line-height内容用padding撑开</li></ul><h2 id="ios键盘唤起-键盘收起以后页面不归位" tabindex="-1"><a class="header-anchor" href="#ios键盘唤起-键盘收起以后页面不归位"><span>IOS键盘唤起，键盘收起以后页面不归位</span></a></h2><ul><li>问题症状：输入内容，软键盘弹出，页面内容整体上移，但是键盘收起，页面内容不下滑</li><li>原因分析：固定定位的元素 在元素内 input 框聚焦的时候 弹出的软键盘占位 失去焦点的时候软键盘消失 但是还是占位的 导致input框不能再次输入 在失去焦点的时候给一个事件</li><li>解决方案：<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#50FA7B;">changeBlur</span><span style="color:#F8F8F2;"> () {</span></span>
<span class="line"><span style="color:#FF79C6;">     let</span><span style="color:#F8F8F2;"> u </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> navigator.userAgent, app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> navigator.appVersion;</span></span>
<span class="line"><span style="color:#FF79C6;">     let</span><span style="color:#F8F8F2;"> isIOS </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> !!</span><span style="color:#F8F8F2;">u.</span><span style="color:#50FA7B;">match</span><span style="color:#F8F8F2;">(</span><span style="color:#FF5555;">/</span><span style="color:#F1FA8C;">\\(i</span><span style="color:#8BE9FD;">[</span><span style="color:#FF5555;">^</span><span style="color:#F1FA8C;">;</span><span style="color:#8BE9FD;">]</span><span style="color:#FF79C6;">+</span><span style="color:#F1FA8C;">;</span><span style="color:#FFB86C;">(</span><span style="color:#F1FA8C;"> U;</span><span style="color:#FFB86C;">)</span><span style="color:#FF79C6;">?</span><span style="color:#F1FA8C;"> CPU</span><span style="color:#BD93F9;">.</span><span style="color:#FF79C6;">+</span><span style="color:#F1FA8C;">Mac OS X</span><span style="color:#FF5555;">/</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">     if</span><span style="color:#F8F8F2;">(isIOS){</span></span>
<span class="line"><span style="color:#50FA7B;">        setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">          const</span><span style="color:#F8F8F2;"> scrollHeight </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.documentElement.scrollTop </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> document.body.scrollTop </span><span style="color:#FF79C6;">||</span><span style="color:#BD93F9;"> 0</span></span>
<span class="line"><span style="color:#F8F8F2;">          window.</span><span style="color:#50FA7B;">scrollTo</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">, Math.</span><span style="color:#50FA7B;">max</span><span style="color:#F8F8F2;">(scrollHeight </span><span style="color:#FF79C6;">-</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">          }, </span><span style="color:#BD93F9;">200</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">     }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="ios端h5页面上下滑动时卡顿、页面缺失" tabindex="-1"><a class="header-anchor" href="#ios端h5页面上下滑动时卡顿、页面缺失"><span>IOS端h5页面上下滑动时卡顿、页面缺失</span></a></h2><ul><li>问题描述：在IOS端，上下滑动页面时，如果页面高度超出了一屏，就会出现明显的卡顿，页面有部分内容显示不全的情况</li><li>解决方案：只需要在公共样式加入下面这行代码</li></ul><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">  -webkit-overflow-scrolling</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> touch</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>-webkit-overflow-scrolling 属性控制元素在移动设备上是否使用滚动回弹效果.</strong></p><p>auto: 使用普通滚动, 当手指从触摸屏上移开，滚动会立即停止。</p><p>touch: 使用具有回弹效果的滚动, 当手指从触摸屏上移开，内容会继续保持一段时间的滚动效果。继续滚动的速度和持续的时间和滚动手势的强烈程度成正比。同时也会创建一个新的堆栈上下文。</p><h2 id="ios双击页面缩放禁止" tabindex="-1"><a class="header-anchor" href="#ios双击页面缩放禁止"><span>IOS双击页面缩放禁止</span></a></h2><ul><li>问题描述：IOS10中自带的Safari浏览器不识别meta viewport</li><li>解决方案： IOS10以外解决移动端禁止页面缩放的方法：</li></ul><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">meta</span><span style="color:#50FA7B;font-style:italic;"> name</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">viewport</span><span style="color:#E9F284;">&quot;</span><span style="color:#50FA7B;font-style:italic;"> content</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>IOS10解决方案：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// 禁用双指缩放</span></span>
<span class="line"><span style="color:#F8F8F2;">document.documentElement.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">touchstart</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (event.touches.length </span><span style="color:#FF79C6;">&gt;</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    event.</span><span style="color:#50FA7B;">preventDefault</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">// 禁用手指双击缩放</span></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> lastTouchEnd </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">document.documentElement.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">touchend</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  var</span><span style="color:#F8F8F2;"> now </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Date.</span><span style="color:#50FA7B;">now</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (now </span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;"> lastTouchEnd </span><span style="color:#FF79C6;">&lt;=</span><span style="color:#BD93F9;"> 300</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    event.</span><span style="color:#50FA7B;">preventDefault</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  lastTouchEnd </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> now;</span></span>
<span class="line"><span style="color:#F8F8F2;">}, </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="android-ios兼容" tabindex="-1"><a class="header-anchor" href="#android-ios兼容"><span>Android/IOS兼容</span></a></h1><h2 id="移动端click事件300ms的延迟响应" tabindex="-1"><a class="header-anchor" href="#移动端click事件300ms的延迟响应"><span>移动端click事件300ms的延迟响应</span></a></h2><ul><li>问题描述：移动设备上的web网页是有300ms延迟的，往往会造成按钮点击延迟甚至是点击失效</li><li>解决方案：用tap事件来取代click事件</li></ul><h2 id="点透问题" tabindex="-1"><a class="header-anchor" href="#点透问题"><span>点透问题</span></a></h2><ul><li>问题描述：移动端开发中，经常使用<code>touchstart</code>和<code>touchend</code>来模拟<code>click</code>事件，但是这样会产生一个点透的问题。当上层元素绑定<code>touchstart</code>事件，下层元素绑定<code>click</code>事件时，点击上层元素，会触发下层元素的<code>click</code>事件。</li><li>原因分析：touchstart 早于 touchend 早于click。 亦即click的触发是有延迟的，这个时间大概在300ms左右，也就是说我们tap触发之后蒙层隐藏， 此时 click还没有触发，300ms之后由于蒙层隐藏，我们的click触发到了下面的a链接上。</li><li>解决方案：touch事件来替换click事件</li></ul><h2 id="audio-autoplay-失效问题" tabindex="-1"><a class="header-anchor" href="#audio-autoplay-失效问题"><span>audio autoplay 失效问题</span></a></h2><ul><li>问题描述：在移动端，<code>&lt;audio autoplay&gt;</code>属性在微信浏览器中无效</li><li>原因分析： 由于自动播放网页中的音频或视频，会给用户带来一些困扰或者不必要的流量消耗，所以苹果系统和安卓系统通常都会禁止自动播放和使用 JS 的触发播放，必须由用户来触发才可以播放。</li><li>解决方案：</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">document.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">touchstart</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  document.</span><span style="color:#50FA7B;">getElementsByTagName</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">audio</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">].</span><span style="color:#50FA7B;">play</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  document.</span><span style="color:#50FA7B;">getElementsByTagName</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">audio</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">].</span><span style="color:#50FA7B;">pause</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="弹出的键盘遮盖文本框" tabindex="-1"><a class="header-anchor" href="#弹出的键盘遮盖文本框"><span>弹出的键盘遮盖文本框</span></a></h2><ul><li>问题描述：H5弹出软键盘后挡住input输入框，看不到输入的字符。</li><li>解决办法：给input和textarea标签添加focus事件，先判断是不是安卓手机下的操作，当然，也可以不用判断机型，Document 对象属性和方法setTimeout延时0.5秒，因为调用安卓键盘有一点迟钝，导致如果不延时处理的话，滚动就失效了。</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#50FA7B;">changefocus</span><span style="color:#F8F8F2;">(){</span></span>
<span class="line"><span style="color:#FF79C6;">    var</span><span style="color:#F8F8F2;"> userAgent </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> navigator.userAgent;</span></span>
<span class="line"><span style="color:#FF79C6;">    var</span><span style="color:#F8F8F2;"> isAndroid </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> userAgent.</span><span style="color:#50FA7B;">indexOf</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Android</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">&gt;</span><span style="color:#FF79C6;"> -</span><span style="color:#BD93F9;">1</span><span style="color:#FF79C6;"> ||</span><span style="color:#F8F8F2;"> userAgent.</span><span style="color:#50FA7B;">indexOf</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Linux</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">&gt;</span><span style="color:#FF79C6;"> -</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;">(isAndroid){</span></span>
<span class="line"><span style="color:#50FA7B;">        setTimeout</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">            document.activeElement.</span><span style="color:#50FA7B;">scrollIntoViewIfNeeded</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">            document.activeElement.</span><span style="color:#50FA7B;">scrollIntoView</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        }, </span><span style="color:#BD93F9;">500</span><span style="color:#F8F8F2;">);       </span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27)]))}const i=n(o,[["render",p],["__file","compatible.html.vue"]]),F=JSON.parse('{"path":"/h5/compatible.html","title":"H5兼容","lang":"en-US","frontmatter":{"title":"H5兼容","category":["H5"],"date":"2024-10-02T00:00:00.000Z","description":"IOS兼容 IOS系统下输入框光标高度不正常 问题症状：input输入框光标，在安卓手机上显示没有问题，但是在苹果手机上当点击输入的时候，光标的高度和父盒子的高度一样 原因分析：通常我们习惯用height属性设置行间的高度和line-height属性设置行间的距离（行高），当点击输入的时候，光标的高度就自动和父盒子的高度一样了。（谷歌浏览器的设计原则，...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/h5/compatible.html"}],["meta",{"property":"og:title","content":"H5兼容"}],["meta",{"property":"og:description","content":"IOS兼容 IOS系统下输入框光标高度不正常 问题症状：input输入框光标，在安卓手机上显示没有问题，但是在苹果手机上当点击输入的时候，光标的高度和父盒子的高度一样 原因分析：通常我们习惯用height属性设置行间的高度和line-height属性设置行间的距离（行高），当点击输入的时候，光标的高度就自动和父盒子的高度一样了。（谷歌浏览器的设计原则，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-12T09:28:57.000Z"}],["meta",{"property":"article:published_time","content":"2024-10-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-12T09:28:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"H5兼容\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-02T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-12T09:28:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"git":{"createdTime":1739352537000,"updatedTime":1739352537000,"contributors":[{"name":"luxiag","username":"luxiag","email":"luxiag@qq.com","commits":1,"url":"https://github.com/luxiag"}]},"readingTime":{"minutes":4.02,"words":1207},"filePathRelative":"h5/compatible.md","localizedDate":"October 2, 2024","excerpt":"\\n<h2>IOS系统下输入框光标高度不正常</h2>\\n<ul>\\n<li>问题症状：input输入框光标，在安卓手机上显示没有问题，但是在苹果手机上当点击输入的时候，光标的高度和父盒子的高度一样</li>\\n<li>原因分析：通常我们习惯用height属性设置行间的高度和line-height属性设置行间的距离（行高），当点击输入的时候，光标的高度就自动和父盒子的高度一样了。（谷歌浏览器的设计原则，还有一种可能就是当没有内容的时候光标的高度等于input的line-height的值，当有内容时，光标从input的顶端到文字的底部）</li>\\n<li>解决方案：高度height和行高line-height内容用padding撑开</li>\\n</ul>","autoDesc":true}');export{i as comp,F as data};
