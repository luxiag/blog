import{S as k,P as W,u as T,M as E,W as z,z as R,V as G,b7 as da,m as ra,aK as Q,b8 as va,l as aa,b9 as Fa,b as ba,A as sa,p as ea,aN as na,az as ta,T as ia,C as fa}from"./three.module-DElcEsb7.js";import{O as V}from"./OrbitControls-COOjmuLA.js";import{a as _,C as ca}from"./CSS2DRenderer-C6955bCF.js";import{_ as ya,i as O,l as la,c as ma,a as N,d as X,o as ua}from"./app-BcWk5rXQ.js";const ha={__name:"threejs-raycaster.html",setup(oa,{expose:y}){y();const C=O(),H=()=>{const F=new k,c=new W(75,2,.1,100);c.position.set(0,0,20),F.add(c);const B=new(void 0)(1,1,1),t=new T({wireframe:!0}),e=new T({color:"#ff0000"});let p=[];for(let b=-5;b<5;b++)for(let d=-5;d<5;d++)for(let r=-5;r<5;r++){const w=new E(B,t);w.position.set(b,d,r),F.add(w),p.push(w)}const a=new z;console.log(C.value.offsetWidth,"width"),a.setSize(C.value.offsetWidth,C.value.offsetWidth/2),a.shadowMap.enabled=!0,a.physicallyCorrectLights=!0,C.value.appendChild(a.domElement);const n=new V(c,a.domElement);n.enableDamping=!0;const f=new R,A=new G;new da(5),C.value.addEventListener("pointermove",b=>{A.x=b.clientX/window.innerWidth*2-1,A.y=-(b.clientY/window.innerHeight*2-1),f.setFromCamera(A,c),f.intersectObjects(p).forEach(r=>{r.object.material=e})});function D(){n.update(),a.render(F,c),requestAnimationFrame(D)}D()},i=O(),P=()=>{let F,c,B=!1;const t=[],e=new k;e.background=new ra(15790320);const p=new W(45,2,.1,1e4);p.position.set(500,800,1300),p.lookAt(0,0,0);const a=new Q(50,50,50),n=new T({color:16711680,opacity:.5,transparent:!0}),f=new E(a,n);e.add(f);const A=new Q(50,50,50),D=new va({color:16693068,map:new aa().load("/assets/textures/square-outline-textured.png")}),b=new Fa(1e3,20);e.add(b),c=new R,F=new G;const d=new ba(1e3,1e3);d.rotateX(-Math.PI/2);const r=new E(d,new T({visible:!1}));e.add(r),t.push(r);const w=new sa(6316128);e.add(w);const m=new ea(16777215);m.position.set(1,.75,.5).normalize(),e.add(m);const g=new z({antialias:!0});g.setSize(i.value.offsetWidth,i.value.offsetWidth/2),i.value.appendChild(g.domElement),i.value.addEventListener("pointermove",S),i.value.addEventListener("pointerdown",M),i.value.addEventListener("keydown",u),i.value.addEventListener("keyup",x);function S(s){F.set(s.clientX/window.innerWidth*2-1,-(s.clientY/window.innerHeight)*2+1),c.setFromCamera(F,p);const l=c.intersectObjects(t,!1);if(l.length>0){const v=l[0];f.position.copy(v.point).add(v.face.normal),f.position.divideScalar(50).floor().multiplyScalar(50).addScalar(25),h()}}function M(s){F.set(s.clientX/window.innerWidth*2-1,-(s.clientY/window.innerHeight)*2+1),c.setFromCamera(F,p);const l=c.intersectObjects(t,!1);if(l.length>0){const v=l[0];if(B)v.object!==r&&(e.remove(v.object),t.splice(t.indexOf(v.object),1));else{const j=new E(A,D);j.position.copy(v.point).add(v.face.normal),j.position.divideScalar(50).floor().multiplyScalar(50).addScalar(25),e.add(j),t.push(j)}h()}}function u(s){switch(s.keyCode){case 16:B=!0;break}}function x(s){switch(s.keyCode){case 16:B=!1;break}}function h(){g.render(e,p)}h()},o=O();function q(){const B=new fa,t=new aa,e=new R,p=new R,a=new W(75,2,.1,200);a.position.set(0,5,-10);const n=new k,f=new ea(16777215);f.position.set(0,0,10),n.add(f);const A=new sa(16777215,.8);n.add(A);const D=new na(5,16,16),b=new ta({specular:3355443,shininess:5,map:t.load("/assets/textures/planets/earth_atmos_2048.jpg"),specularMap:t.load("/assets/textures/planets/earth_specular_2048.jpg"),normalMap:t.load("/assets/textures/planets/earth_normal_2048.jpg"),normalScale:new G(.85,.85)}),d=new E(D,b);n.add(d);const r=new na(.5,16,16),w=new ta({shininess:5,map:t.load("/assets/textures/planets/moon_1024.jpg")}),m=new E(r,w);n.add(m);const g=document.createElement("div");g.className="label",g.innerHTML="地球";const S=new _(g);S.position.set(0,6,0),d.add(S);const M=document.createElement("div");M.className="label1",M.innerHTML="中国";const u=new _(M);u.position.set(-1.5,2.5,-5),d.add(u);const x=document.createElement("div");x.className="label",x.innerHTML="月球";const h=new _(x);h.position.set(0,1,0),m.add(h);const s=new ca;s.setSize(o.value.offsetWidth,o.value.offsetWidth/2),o.value.appendChild(s.domElement),s.domElement.style.position="absolute",s.domElement.style.height="100%",s.domElement.style.width="100%";const l=new z;l.setSize(o.value.offsetWidth,o.value.offsetWidth/2),o.value.appendChild(l.domElement),l.setPixelRatio(window.devicePixelRatio),window.addEventListener("resize",j),l.render(n,a);const v=new V(a,s.domElement);v.minDistance=5,v.maxDistance=100;function j(){a.aspect=2,a.updateProjectionMatrix(),s.setSize(o.value.offsetWidth,o.value.offsetWidth/2),l.setSize(o.value.offsetWidth,o.value.offsetWidth/2)}function J(){const U=B.getElapsedTime();m.position.set(Math.sin(U)*8,0,Math.cos(U)*8);const L=u.position.clone(),Y=m.position.clone(),Z=a.position.clone(),pa=L.distanceTo(a.position);Y.distanceTo(a.position),L.project(a),e.setFromCamera(L,a),p.set(Z,Y.sub(Z).normalize());const $=e.intersectObjects(n.children,!0),K=p.intersectObjects(n.children,!0);K.length>0&&K[0].object!==m?h.element.style.visibility="hidden":h.element.style.visibility="initial",$.length==0?u.element.style.visibility="initial":$[0].distance<pa?u.element.style.visibility="hidden":u.element.style.visibility="initial",s.render(n,a),l.render(n,a),requestAnimationFrame(J)}J()}la(()=>{H(),P(),q()});const I={ray:C,init:H,voxelRef:i,initVoxel:P,curve:o,initCurve:q,ref:O,onMounted:la,get THREE(){return ia},get OrbitControls(){return V},get CSS2DRenderer(){return ca},get CSS2DObject(){return _}};return Object.defineProperty(I,"__isScriptSetup",{enumerable:!1,value:!0}),I}},Ca={ref:"voxelRef"},Ba={ref:"ray"},Aa={class:"curve",ref:"curve"};function wa(oa,y,C,H,i,P){return ua(),ma("div",null,[y[0]||(y[0]=N(`<p data-v-cb6f96e3>参考：<a href="https://threejs.org/" target="_blank" rel="noopener noreferrer" data-v-cb6f96e3>https://threejs.org/</a></p><h2 id="raycaster" tabindex="-1" data-v-cb6f96e3><a class="header-anchor" href="#raycaster" data-v-cb6f96e3><span data-v-cb6f96e3>Raycaster</span></a></h2><ul data-v-cb6f96e3><li data-v-cb6f96e3><p data-v-cb6f96e3><code data-v-cb6f96e3>Raycaster( origin : Vector3, direction : Vector3, near : Float, far : Float )</code></p><ul data-v-cb6f96e3><li data-v-cb6f96e3>origin —— 光线投射的原点向量。</li><li data-v-cb6f96e3>direction —— 向射线提供方向的方向向量，应当被标准化。</li><li data-v-cb6f96e3>near —— 返回的所有结果比near远。near不能为负值，其默认值为0。</li><li data-v-cb6f96e3>far —— 返回的所有结果都比far近。far不能小于near，其默认值为Infinity（正无穷。）</li></ul><p data-v-cb6f96e3>这将创建一个新的raycaster对象。</p></li><li data-v-cb6f96e3><p data-v-cb6f96e3><code data-v-cb6f96e3>.setFromCamera ( coords : Vector2, camera : Camera ) : undefined</code></p><ul data-v-cb6f96e3><li data-v-cb6f96e3>coords —— 在标准化设备坐标中鼠标的二维坐标 —— X分量与Y分量应当在-1到1之间。</li><li data-v-cb6f96e3>camera —— 射线所来源的摄像机。</li></ul><p data-v-cb6f96e3>使用一个新的原点和方向来更新射线。</p></li><li data-v-cb6f96e3><p data-v-cb6f96e3><code data-v-cb6f96e3>.intersectObject ( object : Object3D, recursive : Boolean, optionalTarget : Array ) : Array</code></p><ul data-v-cb6f96e3><li data-v-cb6f96e3>object —— 检查与射线相交的物体。</li><li data-v-cb6f96e3>recursive —— 若为true，则同时也会检查所有的后代。否则将只会检查对象本身。默认值为true。</li><li data-v-cb6f96e3>optionalTarget — （可选）设置结果的目标数组。如果不设置这个值，则一个新的Array会被实例化；如果设置了这个值，则在每次调用之前必须清空这个数组（例如：array.length = 0;）。</li></ul><p data-v-cb6f96e3>检测所有在射线与物体之间，包括或不包括后代的相交部分。返回结果时，相交部分将按距离进行排序，最近的位于第一个。 该方法返回一个包含有交叉部分的数组:</p></li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-cb6f96e3><pre class="shiki dracula vp-code" data-v-cb6f96e3><code data-v-cb6f96e3><span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> raycaster </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>Raycaster</span><span style="color:#F8F8F2;" data-v-cb6f96e3>();</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> pointer </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>Vector2</span><span style="color:#F8F8F2;" data-v-cb6f96e3>()</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>function</span><span style="color:#50FA7B;" data-v-cb6f96e3> render</span><span style="color:#F8F8F2;" data-v-cb6f96e3>() {</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3> // 通过摄像机和鼠标位置更新射线</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3> raycaster.</span><span style="color:#50FA7B;" data-v-cb6f96e3>setFromCamera</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( pointer, camera );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3> // 计算物体和射线的焦点</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3> const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> intersects </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> raycaster.</span><span style="color:#50FA7B;" data-v-cb6f96e3>intersectObjects</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( scene.children );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3> for</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ( </span><span style="color:#FF79C6;" data-v-cb6f96e3>let</span><span style="color:#F8F8F2;" data-v-cb6f96e3> i </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#BD93F9;" data-v-cb6f96e3> 0</span><span style="color:#F8F8F2;" data-v-cb6f96e3>; i </span><span style="color:#FF79C6;" data-v-cb6f96e3>&lt;</span><span style="color:#F8F8F2;" data-v-cb6f96e3> intersects.length; i </span><span style="color:#FF79C6;" data-v-cb6f96e3>++</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ) {</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>  intersects[ i ].object.material.color.</span><span style="color:#50FA7B;" data-v-cb6f96e3>set</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( </span><span style="color:#BD93F9;" data-v-cb6f96e3>0xff0000</span><span style="color:#F8F8F2;" data-v-cb6f96e3> );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3> }</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3> renderer.</span><span style="color:#50FA7B;" data-v-cb6f96e3>render</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( scene, camera );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-cb6f96e3><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div></div></div><h2 id="demo" tabindex="-1" data-v-cb6f96e3><a class="header-anchor" href="#demo" data-v-cb6f96e3><span data-v-cb6f96e3>demo</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-cb6f96e3><pre class="shiki dracula vp-code" data-v-cb6f96e3><code data-v-cb6f96e3><span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>// 创建一个红色的半透明方块</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> rollOverGeo </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>BoxGeometry</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( </span><span style="color:#BD93F9;" data-v-cb6f96e3>50</span><span style="color:#F8F8F2;" data-v-cb6f96e3>, </span><span style="color:#BD93F9;" data-v-cb6f96e3>50</span><span style="color:#F8F8F2;" data-v-cb6f96e3>, </span><span style="color:#BD93F9;" data-v-cb6f96e3>50</span><span style="color:#F8F8F2;" data-v-cb6f96e3> );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> rollOverMaterial </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( { color</span><span style="color:#FF79C6;" data-v-cb6f96e3>:</span><span style="color:#BD93F9;" data-v-cb6f96e3> 0xff0000</span><span style="color:#F8F8F2;" data-v-cb6f96e3>, opacity</span><span style="color:#FF79C6;" data-v-cb6f96e3>:</span><span style="color:#BD93F9;" data-v-cb6f96e3> 0.5</span><span style="color:#F8F8F2;" data-v-cb6f96e3>, transparent</span><span style="color:#FF79C6;" data-v-cb6f96e3>:</span><span style="color:#BD93F9;" data-v-cb6f96e3> true</span><span style="color:#F8F8F2;" data-v-cb6f96e3> } );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> rollOverMesh </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>Mesh</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( rollOverGeo, rollOverMaterial );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>scene.</span><span style="color:#50FA7B;" data-v-cb6f96e3>add</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( rollOverMesh );</span></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>// 创建一个黄色的方块，准备用于添加到场景中</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> cubeGeo </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>BoxGeometry</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( </span><span style="color:#BD93F9;" data-v-cb6f96e3>50</span><span style="color:#F8F8F2;" data-v-cb6f96e3>, </span><span style="color:#BD93F9;" data-v-cb6f96e3>50</span><span style="color:#F8F8F2;" data-v-cb6f96e3>, </span><span style="color:#BD93F9;" data-v-cb6f96e3>50</span><span style="color:#F8F8F2;" data-v-cb6f96e3> );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> cubeMaterial </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>MeshLambertMaterial</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( { color</span><span style="color:#FF79C6;" data-v-cb6f96e3>:</span><span style="color:#BD93F9;" data-v-cb6f96e3> 0xfeb74c</span><span style="color:#F8F8F2;" data-v-cb6f96e3>, map</span><span style="color:#FF79C6;" data-v-cb6f96e3>:</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>TextureLoader</span><span style="color:#F8F8F2;" data-v-cb6f96e3>().</span><span style="color:#50FA7B;" data-v-cb6f96e3>load</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( </span><span style="color:#E9F284;" data-v-cb6f96e3>&#39;</span><span style="color:#F1FA8C;" data-v-cb6f96e3>/assets/textures/square-outline-textured.png</span><span style="color:#E9F284;" data-v-cb6f96e3>&#39;</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ) } );</span></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>// 创建网格辅助线</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> gridHelper </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>GridHelper</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( </span><span style="color:#BD93F9;" data-v-cb6f96e3>1000</span><span style="color:#F8F8F2;" data-v-cb6f96e3>, </span><span style="color:#BD93F9;" data-v-cb6f96e3>20</span><span style="color:#F8F8F2;" data-v-cb6f96e3> );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>scene.</span><span style="color:#50FA7B;" data-v-cb6f96e3>add</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( gridHelper );</span></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>// 创建一个平面面板</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>raycaster </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>Raycaster</span><span style="color:#F8F8F2;" data-v-cb6f96e3>();</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>pointer </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>Vector2</span><span style="color:#F8F8F2;" data-v-cb6f96e3>();</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> geometry </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>PlaneGeometry</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( </span><span style="color:#BD93F9;" data-v-cb6f96e3>1000</span><span style="color:#F8F8F2;" data-v-cb6f96e3>, </span><span style="color:#BD93F9;" data-v-cb6f96e3>1000</span><span style="color:#F8F8F2;" data-v-cb6f96e3> );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>geometry.</span><span style="color:#50FA7B;" data-v-cb6f96e3>rotateX</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( </span><span style="color:#FF79C6;" data-v-cb6f96e3>-</span><span style="color:#F8F8F2;" data-v-cb6f96e3> Math.</span><span style="color:#BD93F9;" data-v-cb6f96e3>PI</span><span style="color:#FF79C6;" data-v-cb6f96e3> /</span><span style="color:#BD93F9;" data-v-cb6f96e3> 2</span><span style="color:#F8F8F2;" data-v-cb6f96e3> );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> plane </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>Mesh</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( geometry, </span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3>new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( { visible</span><span style="color:#FF79C6;" data-v-cb6f96e3>:</span><span style="color:#BD93F9;" data-v-cb6f96e3> false</span><span style="color:#F8F8F2;" data-v-cb6f96e3> } ) );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>scene.</span><span style="color:#50FA7B;" data-v-cb6f96e3>add</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( plane );</span></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>// 用于射线检测</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>objects.</span><span style="color:#50FA7B;" data-v-cb6f96e3>push</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( plane ); </span><span style="color:#6272A4;" data-v-cb6f96e3>// 加入物体数组</span></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>// 事件处理函数</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>function</span><span style="color:#50FA7B;" data-v-cb6f96e3> onPointerMove</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(</span><span style="color:#FFB86C;font-style:italic;" data-v-cb6f96e3>event</span><span style="color:#F8F8F2;" data-v-cb6f96e3>){</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3> pointer.</span><span style="color:#50FA7B;" data-v-cb6f96e3>set</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( ( event.clientX </span><span style="color:#FF79C6;" data-v-cb6f96e3>/</span><span style="color:#F8F8F2;" data-v-cb6f96e3> window.innerWidth ) </span><span style="color:#FF79C6;" data-v-cb6f96e3>*</span><span style="color:#BD93F9;" data-v-cb6f96e3> 2</span><span style="color:#FF79C6;" data-v-cb6f96e3> -</span><span style="color:#BD93F9;" data-v-cb6f96e3> 1</span><span style="color:#F8F8F2;" data-v-cb6f96e3>, </span><span style="color:#FF79C6;" data-v-cb6f96e3>-</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ( event.clientY </span><span style="color:#FF79C6;" data-v-cb6f96e3>/</span><span style="color:#F8F8F2;" data-v-cb6f96e3> window.innerHeight ) </span><span style="color:#FF79C6;" data-v-cb6f96e3>*</span><span style="color:#BD93F9;" data-v-cb6f96e3> 2</span><span style="color:#FF79C6;" data-v-cb6f96e3> +</span><span style="color:#BD93F9;" data-v-cb6f96e3> 1</span><span style="color:#F8F8F2;" data-v-cb6f96e3> );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3> raycaster.</span><span style="color:#50FA7B;" data-v-cb6f96e3>setFromCamera</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( pointer, camera );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3> const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> intersects </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> raycaster.</span><span style="color:#50FA7B;" data-v-cb6f96e3>intersectObjects</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( objects, </span><span style="color:#BD93F9;" data-v-cb6f96e3>false</span><span style="color:#F8F8F2;" data-v-cb6f96e3> );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3> if</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ( intersects.length </span><span style="color:#FF79C6;" data-v-cb6f96e3>&gt;</span><span style="color:#BD93F9;" data-v-cb6f96e3> 0</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ) {</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>  const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> intersect </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> intersects[ </span><span style="color:#BD93F9;" data-v-cb6f96e3>0</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ];</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>  // 将红色半透明方块移动到鼠标所在的位置</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>    // intersect.point 鼠标悬停点在场景中的位置</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>    // intersect.face.normal 三维模型子网格（intersect.face）的法向量（normal）</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>  rollOverMesh.position.</span><span style="color:#50FA7B;" data-v-cb6f96e3>copy</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( intersect.point ).</span><span style="color:#50FA7B;" data-v-cb6f96e3>add</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( intersect.face.normal );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>    // 将方块对准到悬停点的中心位置</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>    /*</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>    divideScalar( 50 )：将向量坐标除以 50，这是为了将位置信息进行规范化，使每个方块的位置都对应网格的中心点，避免出现半个方块的情况。</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>    floor()：将向量的每个坐标值按照四舍五入的方式转换成整数，这是确保每个网格的中心点都是整数。</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>    multiplyScalar( 50 )：将向量坐标乘以 50，把网格中心点的位置重新还原成一个完整的坐标系。这一步的作用是反向处理前面的操作，确保位置信息没有改变。</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>    addScalar( 25 )：最后加上 25，是为了让方块更好地显示在屏幕上，因为像素的起始点是在网格左上角，而不是中心点。</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>    </span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>    */</span><span style="color:#F8F8F2;" data-v-cb6f96e3> </span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>  rollOverMesh.position.</span><span style="color:#50FA7B;" data-v-cb6f96e3>divideScalar</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( </span><span style="color:#BD93F9;" data-v-cb6f96e3>50</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ).</span><span style="color:#50FA7B;" data-v-cb6f96e3>floor</span><span style="color:#F8F8F2;" data-v-cb6f96e3>().</span><span style="color:#50FA7B;" data-v-cb6f96e3>multiplyScalar</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( </span><span style="color:#BD93F9;" data-v-cb6f96e3>50</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ).</span><span style="color:#50FA7B;" data-v-cb6f96e3>addScalar</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( </span><span style="color:#BD93F9;" data-v-cb6f96e3>25</span><span style="color:#F8F8F2;" data-v-cb6f96e3> );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#50FA7B;" data-v-cb6f96e3>  render</span><span style="color:#F8F8F2;" data-v-cb6f96e3>();</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3> }      </span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>}</span></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>function</span><span style="color:#50FA7B;" data-v-cb6f96e3> onPointerDown</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(</span><span style="color:#FFB86C;font-style:italic;" data-v-cb6f96e3>event</span><span style="color:#F8F8F2;" data-v-cb6f96e3>){</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3> pointer.</span><span style="color:#50FA7B;" data-v-cb6f96e3>set</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( ( event.clientX </span><span style="color:#FF79C6;" data-v-cb6f96e3>/</span><span style="color:#F8F8F2;" data-v-cb6f96e3> window.innerWidth ) </span><span style="color:#FF79C6;" data-v-cb6f96e3>*</span><span style="color:#BD93F9;" data-v-cb6f96e3> 2</span><span style="color:#FF79C6;" data-v-cb6f96e3> -</span><span style="color:#BD93F9;" data-v-cb6f96e3> 1</span><span style="color:#F8F8F2;" data-v-cb6f96e3>, </span><span style="color:#FF79C6;" data-v-cb6f96e3>-</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ( event.clientY </span><span style="color:#FF79C6;" data-v-cb6f96e3>/</span><span style="color:#F8F8F2;" data-v-cb6f96e3> window.innerHeight ) </span><span style="color:#FF79C6;" data-v-cb6f96e3>*</span><span style="color:#BD93F9;" data-v-cb6f96e3> 2</span><span style="color:#FF79C6;" data-v-cb6f96e3> +</span><span style="color:#BD93F9;" data-v-cb6f96e3> 1</span><span style="color:#F8F8F2;" data-v-cb6f96e3> );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3> raycaster.</span><span style="color:#50FA7B;" data-v-cb6f96e3>setFromCamera</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( pointer, camera );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3> const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> intersects </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> raycaster.</span><span style="color:#50FA7B;" data-v-cb6f96e3>intersectObjects</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( objects, </span><span style="color:#BD93F9;" data-v-cb6f96e3>false</span><span style="color:#F8F8F2;" data-v-cb6f96e3> );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3> if</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ( intersects.length </span><span style="color:#FF79C6;" data-v-cb6f96e3>&gt;</span><span style="color:#BD93F9;" data-v-cb6f96e3> 0</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ) {</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>  const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> intersect </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> intersects[ </span><span style="color:#BD93F9;" data-v-cb6f96e3>0</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ];</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>  // 删除方块</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>  if</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ( isShiftDown ) {</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>   if</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ( intersect.object </span><span style="color:#FF79C6;" data-v-cb6f96e3>!==</span><span style="color:#F8F8F2;" data-v-cb6f96e3> plane ) {</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>    scene.</span><span style="color:#50FA7B;" data-v-cb6f96e3>remove</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( intersect.object );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>    objects.</span><span style="color:#50FA7B;" data-v-cb6f96e3>splice</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( objects.</span><span style="color:#50FA7B;" data-v-cb6f96e3>indexOf</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( intersect.object ), </span><span style="color:#BD93F9;" data-v-cb6f96e3>1</span><span style="color:#F8F8F2;" data-v-cb6f96e3> );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>   }</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>  // 添加方块</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>  } </span><span style="color:#FF79C6;" data-v-cb6f96e3>else</span><span style="color:#F8F8F2;" data-v-cb6f96e3> {</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>   const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> voxel </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>Mesh</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( cubeGeo, cubeMaterial );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>   voxel.position.</span><span style="color:#50FA7B;" data-v-cb6f96e3>copy</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( intersect.point ).</span><span style="color:#50FA7B;" data-v-cb6f96e3>add</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( intersect.face.normal );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>   voxel.position.</span><span style="color:#50FA7B;" data-v-cb6f96e3>divideScalar</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( </span><span style="color:#BD93F9;" data-v-cb6f96e3>50</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ).</span><span style="color:#50FA7B;" data-v-cb6f96e3>floor</span><span style="color:#F8F8F2;" data-v-cb6f96e3>().</span><span style="color:#50FA7B;" data-v-cb6f96e3>multiplyScalar</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( </span><span style="color:#BD93F9;" data-v-cb6f96e3>50</span><span style="color:#F8F8F2;" data-v-cb6f96e3> ).</span><span style="color:#50FA7B;" data-v-cb6f96e3>addScalar</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( </span><span style="color:#BD93F9;" data-v-cb6f96e3>25</span><span style="color:#F8F8F2;" data-v-cb6f96e3> );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>   scene.</span><span style="color:#50FA7B;" data-v-cb6f96e3>add</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( voxel );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>   objects.</span><span style="color:#50FA7B;" data-v-cb6f96e3>push</span><span style="color:#F8F8F2;" data-v-cb6f96e3>( voxel );</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>  }</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#50FA7B;" data-v-cb6f96e3>  render</span><span style="color:#F8F8F2;" data-v-cb6f96e3>();</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3> }</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-cb6f96e3><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div></div></div>`,6)),X("div",Ca,null,512),y[1]||(y[1]=N(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-cb6f96e3><pre class="shiki dracula vp-code" data-v-cb6f96e3><code data-v-cb6f96e3><span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> material </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-cb6f96e3>({ </span><span style="color:#6272A4;" data-v-cb6f96e3>// 创建网格基本材质</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>    wireframe</span><span style="color:#FF79C6;" data-v-cb6f96e3>:</span><span style="color:#BD93F9;" data-v-cb6f96e3> true</span><span style="color:#6272A4;" data-v-cb6f96e3>  // wireframe 为 true 时，表示显示为线框模式，否则就是默认表示实心的</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>})</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> redMaterial </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-cb6f96e3>({ </span><span style="color:#6272A4;" data-v-cb6f96e3>// 创建颜色材质，设置为红色 </span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>    color</span><span style="color:#FF79C6;" data-v-cb6f96e3>:</span><span style="color:#E9F284;" data-v-cb6f96e3>&#39;</span><span style="color:#F1FA8C;" data-v-cb6f96e3>#ff0000</span><span style="color:#E9F284;" data-v-cb6f96e3>&#39;</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>})</span></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>let</span><span style="color:#F8F8F2;" data-v-cb6f96e3> cubeArr </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> []</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>for</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(</span><span style="color:#FF79C6;" data-v-cb6f96e3>let</span><span style="color:#F8F8F2;" data-v-cb6f96e3> i </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;" data-v-cb6f96e3> -</span><span style="color:#BD93F9;" data-v-cb6f96e3>5</span><span style="color:#F8F8F2;" data-v-cb6f96e3>;i</span><span style="color:#FF79C6;" data-v-cb6f96e3>&lt;</span><span style="color:#BD93F9;" data-v-cb6f96e3>5</span><span style="color:#F8F8F2;" data-v-cb6f96e3>;i</span><span style="color:#FF79C6;" data-v-cb6f96e3>++</span><span style="color:#F8F8F2;" data-v-cb6f96e3>) { </span><span style="color:#6272A4;" data-v-cb6f96e3>// 创建多个立方体</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>    for</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(</span><span style="color:#FF79C6;" data-v-cb6f96e3>let</span><span style="color:#F8F8F2;" data-v-cb6f96e3> j </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;" data-v-cb6f96e3>  -</span><span style="color:#BD93F9;" data-v-cb6f96e3>5</span><span style="color:#F8F8F2;" data-v-cb6f96e3>;j </span><span style="color:#FF79C6;" data-v-cb6f96e3>&lt;</span><span style="color:#BD93F9;" data-v-cb6f96e3>5</span><span style="color:#F8F8F2;" data-v-cb6f96e3>;j</span><span style="color:#FF79C6;" data-v-cb6f96e3>++</span><span style="color:#F8F8F2;" data-v-cb6f96e3>) {</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>        for</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(</span><span style="color:#FF79C6;" data-v-cb6f96e3>let</span><span style="color:#F8F8F2;" data-v-cb6f96e3> z </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;" data-v-cb6f96e3> -</span><span style="color:#BD93F9;" data-v-cb6f96e3>5</span><span style="color:#F8F8F2;" data-v-cb6f96e3>;z</span><span style="color:#FF79C6;" data-v-cb6f96e3>&lt;</span><span style="color:#BD93F9;" data-v-cb6f96e3>5</span><span style="color:#F8F8F2;" data-v-cb6f96e3>;z</span><span style="color:#FF79C6;" data-v-cb6f96e3>++</span><span style="color:#F8F8F2;" data-v-cb6f96e3>) {</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>            const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> cube </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-cb6f96e3> new</span><span style="color:#BD93F9;" data-v-cb6f96e3> THREE</span><span style="color:#F8F8F2;" data-v-cb6f96e3>.</span><span style="color:#50FA7B;" data-v-cb6f96e3>Mesh</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(cubeGeometry,material); </span><span style="color:#6272A4;" data-v-cb6f96e3>// 创建立方体网格</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>            cube.position.</span><span style="color:#50FA7B;" data-v-cb6f96e3>set</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(i,j,z); </span><span style="color:#6272A4;" data-v-cb6f96e3>// 设置立方体网格的位置</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>            scene.</span><span style="color:#50FA7B;" data-v-cb6f96e3>add</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(cube); </span><span style="color:#6272A4;" data-v-cb6f96e3>// 将立方体网格添加到场景中</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>            cubeArr.</span><span style="color:#50FA7B;" data-v-cb6f96e3>push</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(cube) </span><span style="color:#6272A4;" data-v-cb6f96e3>// 将立方体放入 cubeArr 数组中</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>        }</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>    }</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>}</span></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>function</span><span style="color:#50FA7B;" data-v-cb6f96e3> onPointerMove</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(</span><span style="color:#FFB86C;font-style:italic;" data-v-cb6f96e3>event</span><span style="color:#F8F8F2;" data-v-cb6f96e3>) {</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>    mouse.x </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> (event.clientX </span><span style="color:#FF79C6;" data-v-cb6f96e3>/</span><span style="color:#F8F8F2;" data-v-cb6f96e3> window.innerWidth) </span><span style="color:#FF79C6;" data-v-cb6f96e3>*</span><span style="color:#BD93F9;" data-v-cb6f96e3>2</span><span style="color:#FF79C6;" data-v-cb6f96e3> -</span><span style="color:#BD93F9;" data-v-cb6f96e3> 1</span><span style="color:#F8F8F2;" data-v-cb6f96e3>; </span><span style="color:#6272A4;" data-v-cb6f96e3>// 计算鼠标在屏幕上的位置，转换为 Three.js 坐标系的位置</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>    mouse.y </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#FF79C6;" data-v-cb6f96e3> -</span><span style="color:#F8F8F2;" data-v-cb6f96e3>((event.clientY </span><span style="color:#FF79C6;" data-v-cb6f96e3>/</span><span style="color:#F8F8F2;" data-v-cb6f96e3> window.innerHeight)</span><span style="color:#FF79C6;" data-v-cb6f96e3>*</span><span style="color:#BD93F9;" data-v-cb6f96e3> 2</span><span style="color:#FF79C6;" data-v-cb6f96e3> -</span><span style="color:#BD93F9;" data-v-cb6f96e3> 1</span><span style="color:#F8F8F2;" data-v-cb6f96e3>);</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>    raycaster.</span><span style="color:#50FA7B;" data-v-cb6f96e3>setFromCamera</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(mouse, camera); </span><span style="color:#6272A4;" data-v-cb6f96e3>// 从相机透视投影的位置发射一个射线，并求出射线经过的物体</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>    let</span><span style="color:#F8F8F2;" data-v-cb6f96e3> result </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> raycaster.</span><span style="color:#50FA7B;" data-v-cb6f96e3>intersectObjects</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(cubeArr); </span><span style="color:#6272A4;" data-v-cb6f96e3>// 射线选择器与立方体数组作为参数，返回一个对象数组 result，其中包含射线经过的物体</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>    result.</span><span style="color:#50FA7B;" data-v-cb6f96e3>forEach</span><span style="color:#F8F8F2;" data-v-cb6f96e3>((</span><span style="color:#FFB86C;font-style:italic;" data-v-cb6f96e3>item</span><span style="color:#F8F8F2;" data-v-cb6f96e3>) </span><span style="color:#FF79C6;" data-v-cb6f96e3>=&gt;</span><span style="color:#F8F8F2;" data-v-cb6f96e3> { </span><span style="color:#6272A4;" data-v-cb6f96e3>// 遍历射线碰撞得到的所有物体，将它们的材质改为红色</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>      item.object.material </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> redMaterial;</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>    });</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-cb6f96e3><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div></div></div>`,1)),X("div",Ba,null,512),y[2]||(y[2]=N(`<h2 id="文字显示隐藏" tabindex="-1" data-v-cb6f96e3><a class="header-anchor" href="#文字显示隐藏" data-v-cb6f96e3><span data-v-cb6f96e3>文字显示隐藏</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-cb6f96e3><pre class="shiki dracula vp-code" data-v-cb6f96e3><code data-v-cb6f96e3><span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>// 月亮Label隐藏</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> elapsed </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> clock.</span><span style="color:#50FA7B;" data-v-cb6f96e3>getElapsedTime</span><span style="color:#F8F8F2;" data-v-cb6f96e3>();</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>moon.position.</span><span style="color:#50FA7B;" data-v-cb6f96e3>set</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(Math.</span><span style="color:#50FA7B;" data-v-cb6f96e3>sin</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(elapsed) </span><span style="color:#FF79C6;" data-v-cb6f96e3>*</span><span style="color:#BD93F9;" data-v-cb6f96e3> 8</span><span style="color:#F8F8F2;" data-v-cb6f96e3>, </span><span style="color:#BD93F9;" data-v-cb6f96e3>0</span><span style="color:#F8F8F2;" data-v-cb6f96e3>, Math.</span><span style="color:#50FA7B;" data-v-cb6f96e3>cos</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(elapsed) </span><span style="color:#FF79C6;" data-v-cb6f96e3>*</span><span style="color:#BD93F9;" data-v-cb6f96e3> 8</span><span style="color:#F8F8F2;" data-v-cb6f96e3>);</span></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> moonPosition </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> moon.position.</span><span style="color:#50FA7B;" data-v-cb6f96e3>clone</span><span style="color:#F8F8F2;" data-v-cb6f96e3>();</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> cameraPos </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> camera.position.</span><span style="color:#50FA7B;" data-v-cb6f96e3>clone</span><span style="color:#F8F8F2;" data-v-cb6f96e3>()</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>/*</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>通过 moonPosition.clone() 和 camera.position.clone() 克隆 moon 的位置和摄像机的位置，避免直接修改 moonPosition 和 cameraPos 对象的值。</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>通过 moonPosition.sub(cameraPos) 计算出从摄像机指向 moon 的向量。</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>通过 .normalize() 将向量转换为单位向量，即长度为 1 的向量，方便后续的计算。这样得到的向量就是一个方向，指向摄像机位置和 moon 位置之间的向量。</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>*/</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>rayCasterMoon.</span><span style="color:#50FA7B;" data-v-cb6f96e3>set</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(cameraPos,moonPosition.</span><span style="color:#50FA7B;" data-v-cb6f96e3>sub</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(cameraPos).</span><span style="color:#50FA7B;" data-v-cb6f96e3>normalize</span><span style="color:#F8F8F2;" data-v-cb6f96e3>())</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> intersectsMoon </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> rayCasterMoon.</span><span style="color:#50FA7B;" data-v-cb6f96e3>intersectObjects</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(scene.children,</span><span style="color:#BD93F9;" data-v-cb6f96e3>true</span><span style="color:#F8F8F2;" data-v-cb6f96e3>)</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>if</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(intersectsMoon.length </span><span style="color:#FF79C6;" data-v-cb6f96e3>&gt;</span><span style="color:#BD93F9;" data-v-cb6f96e3>0</span><span style="color:#FF79C6;" data-v-cb6f96e3> &amp;&amp;</span><span style="color:#F8F8F2;" data-v-cb6f96e3> intersectsMoon[</span><span style="color:#BD93F9;" data-v-cb6f96e3>0</span><span style="color:#F8F8F2;" data-v-cb6f96e3>].object </span><span style="color:#FF79C6;" data-v-cb6f96e3>!==</span><span style="color:#F8F8F2;" data-v-cb6f96e3> moon) {</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>    moonLabel.element.style.visibility </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#E9F284;" data-v-cb6f96e3> &#39;</span><span style="color:#F1FA8C;" data-v-cb6f96e3>hidden</span><span style="color:#E9F284;" data-v-cb6f96e3>&#39;</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>}</span><span style="color:#FF79C6;" data-v-cb6f96e3>else</span><span style="color:#F8F8F2;" data-v-cb6f96e3>{</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>    moonLabel.element.style.visibility </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#E9F284;" data-v-cb6f96e3> &#39;</span><span style="color:#F1FA8C;" data-v-cb6f96e3>initial</span><span style="color:#E9F284;" data-v-cb6f96e3>&#39;</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>}</span></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>// 中国Label隐藏</span></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> chinaPosition </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> chinaLabel.position.</span><span style="color:#50FA7B;" data-v-cb6f96e3>clone</span><span style="color:#F8F8F2;" data-v-cb6f96e3>();</span></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>// 计算出标签跟摄像机的距离</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> labelDistance </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> chinaPosition.</span><span style="color:#50FA7B;" data-v-cb6f96e3>distanceTo</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(camera.position);</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>// 检测射线的碰撞</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>// 向量(坐标)从世界空间投影到相机的标准化设备坐标 (NDC) 空间。</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>/*</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>project() 方法是 Object3D 类的一个方法，用于将三维坐标转换为屏幕上的二维坐标。</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>它需要传入一个参数 camera，表示用于投影计算的相机</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#6272A4;" data-v-cb6f96e3>*/</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>chinaPosition.</span><span style="color:#50FA7B;" data-v-cb6f96e3>project</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(camera);</span></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>raycaster.</span><span style="color:#50FA7B;" data-v-cb6f96e3>setFromCamera</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(chinaPosition,camera);</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>       </span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> intersects </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> raycaster.</span><span style="color:#50FA7B;" data-v-cb6f96e3>intersectObjects</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(scene.children,</span><span style="color:#BD93F9;" data-v-cb6f96e3>true</span><span style="color:#F8F8F2;" data-v-cb6f96e3>)</span></span>
<span class="line" data-v-cb6f96e3></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>if</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(intersects.length </span><span style="color:#FF79C6;" data-v-cb6f96e3>==</span><span style="color:#BD93F9;" data-v-cb6f96e3> 0</span><span style="color:#F8F8F2;" data-v-cb6f96e3>){</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>  chinaLabel.element.style.visibility </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#E9F284;" data-v-cb6f96e3> &#39;</span><span style="color:#F1FA8C;" data-v-cb6f96e3>initial</span><span style="color:#E9F284;" data-v-cb6f96e3>&#39;</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>}</span><span style="color:#FF79C6;" data-v-cb6f96e3>else</span><span style="color:#F8F8F2;" data-v-cb6f96e3>{</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>  const</span><span style="color:#F8F8F2;" data-v-cb6f96e3> minDistance </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#F8F8F2;" data-v-cb6f96e3> intersects[</span><span style="color:#BD93F9;" data-v-cb6f96e3>0</span><span style="color:#F8F8F2;" data-v-cb6f96e3>].distance;</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#FF79C6;" data-v-cb6f96e3>  if</span><span style="color:#F8F8F2;" data-v-cb6f96e3>(minDistance</span><span style="color:#FF79C6;" data-v-cb6f96e3>&lt;</span><span style="color:#F8F8F2;" data-v-cb6f96e3>labelDistance){</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>    chinaLabel.element.style.visibility </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#E9F284;" data-v-cb6f96e3> &#39;</span><span style="color:#F1FA8C;" data-v-cb6f96e3>hidden</span><span style="color:#E9F284;" data-v-cb6f96e3>&#39;</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>  }</span><span style="color:#FF79C6;" data-v-cb6f96e3>else</span><span style="color:#F8F8F2;" data-v-cb6f96e3>{</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>    chinaLabel.element.style.visibility </span><span style="color:#FF79C6;" data-v-cb6f96e3>=</span><span style="color:#E9F284;" data-v-cb6f96e3> &#39;</span><span style="color:#F1FA8C;" data-v-cb6f96e3>initial</span><span style="color:#E9F284;" data-v-cb6f96e3>&#39;</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>  }</span></span>
<span class="line" data-v-cb6f96e3><span style="color:#F8F8F2;" data-v-cb6f96e3>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-cb6f96e3><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div><div class="line-number" data-v-cb6f96e3></div></div></div>`,2)),X("div",Aa,null,512)])}const xa=ya(ha,[["render",wa],["__scopeId","data-v-cb6f96e3"],["__file","threejs-raycaster.html.vue"]]),Sa=JSON.parse('{"path":"/threejs/threejs-raycaster.html","title":"ThreeJS中的射线检测","lang":"en-US","frontmatter":{"title":"ThreeJS中的射线检测","category":["ThreeJS"],"date":"2022-01-24T00:00:00.000Z","description":"参考：https://threejs.org/ Raycaster Raycaster( origin : Vector3, direction : Vector3, near : Float, far : Float ) origin —— 光线投射的原点向量。 direction —— 向射线提供方向的方向向量，应当被标准化。 near —— 返回...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/threejs/threejs-raycaster.html"}],["meta",{"property":"og:title","content":"ThreeJS中的射线检测"}],["meta",{"property":"og:description","content":"参考：https://threejs.org/ Raycaster Raycaster( origin : Vector3, direction : Vector3, near : Float, far : Float ) origin —— 光线投射的原点向量。 direction —— 向射线提供方向的方向向量，应当被标准化。 near —— 返回..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-03T04:27:20.000Z"}],["meta",{"property":"article:published_time","content":"2022-01-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-03T04:27:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ThreeJS中的射线检测\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-24T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-03T04:27:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"Raycaster","slug":"raycaster","link":"#raycaster","children":[]},{"level":2,"title":"demo","slug":"demo","link":"#demo","children":[]},{"level":2,"title":"文字显示隐藏","slug":"文字显示隐藏","link":"#文字显示隐藏","children":[]}],"git":{"createdTime":1681717941000,"updatedTime":1730608040000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":7},{"name":"卢祥","email":"example@qq.com","commits":2}]},"readingTime":{"minutes":8.5,"words":2550},"filePathRelative":"threejs/threejs-raycaster.md","localizedDate":"January 24, 2022","excerpt":"<p>参考：<a href=\\"https://threejs.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://threejs.org/</a></p>","autoDesc":true}');export{xa as comp,Sa as data};
