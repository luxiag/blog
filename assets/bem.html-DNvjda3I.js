import{_ as s,e as a,f as l,o as n}from"./app-Bd-A8UqK.js";const t={};function o(i,e){return n(),a("div",null,e[0]||(e[0]=[l(`<ul><li>仅从名字就能知道一个 CSS 选择器具体做什么</li><li>从名字能大致清楚一个选择器可以在哪里使用</li><li>从 CSS 类的名称可以看出它们之间的联系</li></ul><h2 id="b代表区块-block" tabindex="-1"><a class="header-anchor" href="#b代表区块-block"><span><strong>B代表区块(Block)</strong></span></a></h2><p>在实际中，这里『区块』可以表示一个网站导航、页眉、页脚或者其他一些设计区块。</p><p>Encapsulates a standalone entity that is meaningful on its own. While blocks can be nested and interact with each other, semantically they remain equal; there is no precedence or hierarchy. Holistic entities without DOM representation (such as controllers or models) can be blocks as well.</p><p><code>Naming</code></p><p>Block names may consist of Latin letters, digits, and dashes. To form a CSS class, add a short prefix for namespacing: <code>.block</code></p><p><code>html</code></p><p>Any DOM node can be a block if it accepts a class name.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span> &lt;div class=&quot;block&quot;&gt;...&lt;/div&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>css</code></p><ul><li>Use class name selector only</li><li>No tag name or ids</li><li>No dependency on other blocks/elements on a page</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span> .block { color: #042; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="e代表元素-elements" tabindex="-1"><a class="header-anchor" href="#e代表元素-elements"><span><strong>E代表元素(Elements)</strong></span></a></h2><p>Parts of a block and have no standalone meaning. Any element is semantically tied to its block.</p><p><strong>Naming</strong></p><p>Element names may consist of Latin letters, digits, dashes and underscores. CSS class is formed as block name plus two underscores plus element name: <code>.block__elem</code></p><p><strong>HTML</strong></p><p>Any DOM node within a block can be an element. Within a given block, all elements are semantically equal.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span> &lt;div class=&quot;block&quot;&gt;</span></span>
<span class="line"><span>       ...</span></span>
<span class="line"><span>       &lt;span class=&quot;block__elem&quot;&gt;&lt;/span&gt;</span></span>
<span class="line"><span>     &lt;/div&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>CSS</strong></p><ul><li>Use class name selector only</li><li>No tag name or ids</li><li>No dependency on other blocks/elements on a page</li></ul><p><strong>Good</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span> .block__elem { color: #042; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Bad</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span> .block .block__elem { color: #042; }</span></span>
<span class="line"><span>     div.block__elem { color: #042; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="m代表修饰符-modifiers" tabindex="-1"><a class="header-anchor" href="#m代表修饰符-modifiers"><span><strong>M代表修饰符(Modifiers)</strong></span></a></h2><p>Flags on blocks or elements. Use them to change appearance, behavior or state.</p><p><strong>Naming</strong></p><p>Modifier names may consist of Latin letters, digits, dashes and underscores. CSS class is formed as block’s or element’s name plus two dashes: <code>.block--mod</code> or <code>.block__elem--mod</code> and <code>.block--color-black</code> with <code>.block--color-red</code>. Spaces in complicated modifiers are replaced by dash.</p><p><strong>HTML</strong></p><p>Modifier is an extra class name which you add to a block/element DOM node. Add modifier classes only to blocks/elements they modify, and keep the original class:</p><p><strong>Good</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span> &lt;div class=&quot;block block--mod&quot;&gt;...&lt;/div&gt;</span></span>
<span class="line"><span>     &lt;div class=&quot;block block--size-big</span></span>
<span class="line"><span>         block--shadow-yes&quot;&gt;...&lt;/div&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Bad</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span> &lt;div class=&quot;block--mod&quot;&gt;...&lt;/div&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>CSS</strong></p><p>Use modifier class name as selector:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span> .block--hidden { }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>To alter elements based on a block-level modifier:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span> .block--mod .block__elem { }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Element modifier:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span> .block__elem--mod { }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Example</strong></p><p>Suppose you have block form with modifiers <code>theme: &quot;xmas&quot;</code> and <code>simple: true</code> and with elements <code>input</code> and <code>submit</code>, and element <code>submit</code> with its own modifier <code>disabled: true</code> for not submitting form while it is not filled:</p><p><strong>HTML</strong></p><p>/səbˈmɪt/</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;"> &lt;</span><span style="color:#FF79C6;">form</span><span style="color:#50FA7B;font-style:italic;"> class</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">form form--theme-xmas form--simple</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">   &lt;</span><span style="color:#FF79C6;">input</span><span style="color:#50FA7B;font-style:italic;"> class</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">form__input</span><span style="color:#E9F284;">&quot;</span><span style="color:#50FA7B;font-style:italic;"> type</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">text</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">   &lt;</span><span style="color:#FF79C6;">input</span></span>
<span class="line"><span style="color:#50FA7B;font-style:italic;">     class</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">form__submit form__submit--disabled</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#50FA7B;font-style:italic;">     type</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">submit</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;"> &lt;/</span><span style="color:#FF79C6;">form</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>CSS</strong></p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#50FA7B;font-style:italic;">.form</span><span style="color:#F8F8F2;"> { }</span></span>
<span class="line"><span style="color:#50FA7B;font-style:italic;"> .form--theme-xmas</span><span style="color:#F8F8F2;"> { }</span></span>
<span class="line"><span style="color:#50FA7B;font-style:italic;"> .form--simple</span><span style="color:#F8F8F2;"> { }</span></span>
<span class="line"><span style="color:#50FA7B;font-style:italic;"> .form__input</span><span style="color:#F8F8F2;"> { }</span></span>
<span class="line"><span style="color:#50FA7B;font-style:italic;"> .form__submit</span><span style="color:#F8F8F2;"> { }</span></span>
<span class="line"><span style="color:#50FA7B;font-style:italic;"> .form__submit--disabled</span><span style="color:#F8F8F2;"> { }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,49)]))}const r=s(t,[["render",o],["__file","bem.html.vue"]]),d=JSON.parse('{"path":"/css/bem.html","title":"BEM规范","lang":"en-US","frontmatter":{"title":"BEM规范","date":"2021-11-22T00:00:00.000Z","category":["CSS"],"description":"仅从名字就能知道一个 CSS 选择器具体做什么 从名字能大致清楚一个选择器可以在哪里使用 从 CSS 类的名称可以看出它们之间的联系 B代表区块(Block) 在实际中，这里『区块』可以表示一个网站导航、页眉、页脚或者其他一些设计区块。 Encapsulates a standalone entity that is meaningful on its...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/css/bem.html"}],["meta",{"property":"og:title","content":"BEM规范"}],["meta",{"property":"og:description","content":"仅从名字就能知道一个 CSS 选择器具体做什么 从名字能大致清楚一个选择器可以在哪里使用 从 CSS 类的名称可以看出它们之间的联系 B代表区块(Block) 在实际中，这里『区块』可以表示一个网站导航、页眉、页脚或者其他一些设计区块。 Encapsulates a standalone entity that is meaningful on its..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-27T15:30:43.000Z"}],["meta",{"property":"article:published_time","content":"2021-11-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-27T15:30:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"BEM规范\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-11-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-27T15:30:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"git":{"createdTime":1665145185000,"updatedTime":1730043043000,"contributors":[{"name":"luxiang","username":"luxiang","email":"luxiag@qq.com","commits":1,"url":"https://github.com/luxiang"},{"name":"luxiag","username":"luxiag","email":"luxiag@qq.com","commits":6,"url":"https://github.com/luxiag"}]},"readingTime":{"minutes":1.82,"words":546},"filePathRelative":"css/bem.md","localizedDate":"November 22, 2021","excerpt":"<ul>\\n<li>仅从名字就能知道一个 CSS 选择器具体做什么</li>\\n<li>从名字能大致清楚一个选择器可以在哪里使用</li>\\n<li>从 CSS 类的名称可以看出它们之间的联系</li>\\n</ul>","autoDesc":true}');export{r as comp,d as data};
