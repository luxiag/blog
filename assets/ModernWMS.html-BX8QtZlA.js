import{_ as n,e as a,g as l,o as e}from"./app-Dt3FNJM0.js";const p={};function o(t,s){return e(),a("div",null,s[0]||(s[0]=[l(`<h2 id="startup" tabindex="-1"><a class="header-anchor" href="#startup"><span>startup</span></a></h2><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Startup</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#6272A4;">        /// </span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">summary</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#6272A4;">        /// startup</span></span>
<span class="line"><span style="color:#6272A4;">        /// </span><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">summary</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#6272A4;">        /// </span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">param</span><span style="color:#50FA7B;font-style:italic;"> name</span><span style="color:#6272A4;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">configuration</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span><span style="color:#6272A4;">Config</span><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">param</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#50FA7B;"> Startup</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IConfiguration</span><span style="color:#FFB86C;font-style:italic;"> configuration</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            Configuration </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configuration;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#8BE9FD;font-style:italic;"> IConfiguration</span><span style="color:#F8F8F2;"> Configuration { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        /// </span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">summary</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#6272A4;">        ///  register service </span></span>
<span class="line"><span style="color:#6272A4;">        /// </span><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">summary</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#6272A4;">        /// </span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">param</span><span style="color:#50FA7B;font-style:italic;"> name</span><span style="color:#6272A4;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">services</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span><span style="color:#6272A4;">services</span><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">param</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> ConfigureServices</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IServiceCollection</span><span style="color:#FFB86C;font-style:italic;"> services</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            services.</span><span style="color:#50FA7B;">AddExtensionsService</span><span style="color:#F8F8F2;">(Configuration);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        /// </span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">summary</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#6272A4;">        /// configure</span></span>
<span class="line"><span style="color:#6272A4;">        /// </span><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">summary</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#6272A4;">        /// </span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">param</span><span style="color:#50FA7B;font-style:italic;"> name</span><span style="color:#6272A4;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">app</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span><span style="color:#6272A4;">app</span><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">param</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#6272A4;">        /// </span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">param</span><span style="color:#50FA7B;font-style:italic;"> name</span><span style="color:#6272A4;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">env</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span><span style="color:#6272A4;">env</span><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">param</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#6272A4;">        /// </span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">param</span><span style="color:#50FA7B;font-style:italic;"> name</span><span style="color:#6272A4;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">serviceProvider</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span><span style="color:#6272A4;">serviceProvider</span><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">param</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Configure</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IApplicationBuilder</span><span style="color:#FFB86C;font-style:italic;"> app</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">IWebHostEnvironment</span><span style="color:#FFB86C;font-style:italic;"> env</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">IServiceProvider</span><span style="color:#FFB86C;font-style:italic;"> service_provider</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            app.</span><span style="color:#50FA7B;">UseExtensionsConfigure</span><span style="color:#F8F8F2;">(env, service_provider, Configuration);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>configuration</span></a></h3><p><code>configuration</code>是配置，用来获取配置文件中的内容 例如： <code>appsettings.json</code></p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#8BE9FE;">  &quot;</span><span style="color:#8BE9FD;">MyAppSettings</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#8BE9FE;">    &quot;</span><span style="color:#8BE9FD;">ApiKey</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">123456</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 Configuration[&quot;MyAppSettings:ApiKey&quot;] 来读取这个值。</p><h3 id="configureservices" tabindex="-1"><a class="header-anchor" href="#configureservices"><span>ConfigureServices</span></a></h3><p>将你需要的服务添加到依赖注入容器中。所有通过 services.AddXxx() 添加的服务都可以在控制器、服务类中注入使用。</p><ul><li>该方法是可选的</li><li>该方法用于添加服务到DI容器中</li><li>该方法在Configure方法之前被调用</li><li>该方法要么无参数，要么只能有一个参数且类型必须为IServiceCollection</li><li>该方法内的代码大多是形如Add{Service}的扩展方法</li></ul><p><code>AddExtensionsService</code></p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">     public</span><span style="color:#FF79C6;"> static</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> AddExtensionsService</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">this</span><span style="color:#8BE9FD;font-style:italic;"> IServiceCollection</span><span style="color:#FFB86C;font-style:italic;"> services</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">IConfiguration</span><span style="color:#FFB86C;font-style:italic;"> configuration</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">     {  </span></span>
<span class="line"><span style="color:#6272A4;">        // 注册本地化支持</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddLocalization</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddSingleton</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IStringLocalizer</span><span style="color:#F8F8F2;">&gt;((</span><span style="color:#FFB86C;font-style:italic;">sp</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">         {  </span></span>
<span class="line"><span style="color:#6272A4;">            // 注入 IStringLocalizer，默认使用泛型版 IStringLocalizer&lt;MultiLanguage&gt;，实现多语言功能。</span></span>
<span class="line"><span style="color:#FF79C6;">             var</span><span style="color:#F8F8F2;"> sharedLocalizer </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> sp.</span><span style="color:#50FA7B;">GetRequiredService</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IStringLocalizer</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">MultiLanguage</span><span style="color:#F8F8F2;">&gt;&gt;();</span></span>
<span class="line"><span style="color:#FF79C6;">             return</span><span style="color:#F8F8F2;"> sharedLocalizer;</span></span>
<span class="line"><span style="color:#F8F8F2;">         });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        //  用于发送 HTTP 请求。</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddHttpClient</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">        //  允许在服务类中访问 HttpContext，比如用户信息、请求头等。</span></span>
<span class="line"><span style="color:#6272A4;">        // </span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddSingleton</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IHttpContextAccessor</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">HttpContextAccessor</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        //  注册缓存管理器</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddSingleton</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">CacheManager</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddSingleton</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IMemoryCache</span><span style="color:#F8F8F2;">&gt;(</span><span style="color:#FFB86C;font-style:italic;">factory</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">         {</span></span>
<span class="line"><span style="color:#FF79C6;">             var</span><span style="color:#F8F8F2;"> cache </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> MemoryCache</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> MemoryCacheOptions</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#FF79C6;">             return</span><span style="color:#F8F8F2;"> cache;</span></span>
<span class="line"><span style="color:#F8F8F2;">         });</span></span>
<span class="line"><span style="color:#6272A4;">        // 数据库连接（多数据库支持）</span></span>
<span class="line"><span style="color:#FF79C6;">         var</span><span style="color:#F8F8F2;"> database_config </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configuration.</span><span style="color:#50FA7B;">GetSection</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Database</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)[</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">db</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddDbContextPool</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">SqlDBContext</span><span style="color:#F8F8F2;">&gt;(</span><span style="color:#FFB86C;font-style:italic;">t</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">         {</span></span>
<span class="line"><span style="color:#FF79C6;">             if</span><span style="color:#F8F8F2;"> (database_config.</span><span style="color:#50FA7B;">ToUpper</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">==</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">SQLLITE</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">             {</span></span>
<span class="line"><span style="color:#FF79C6;">                 var</span><span style="color:#F8F8F2;"> SqlLite_connection </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configuration.</span><span style="color:#50FA7B;">GetConnectionString</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">SqlLiteConn</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">                 t.</span><span style="color:#50FA7B;">UseSqlite</span><span style="color:#F8F8F2;">(SqlLite_connection, </span><span style="color:#FFB86C;font-style:italic;">b</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> b.</span><span style="color:#50FA7B;">MigrationsAssembly</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">ModernWMS</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">             }</span></span>
<span class="line"><span style="color:#FF79C6;">             else</span><span style="color:#FF79C6;"> if</span><span style="color:#F8F8F2;"> (database_config.</span><span style="color:#50FA7B;">ToUpper</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">==</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">MYSQL</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">             {</span></span>
<span class="line"><span style="color:#FF79C6;">                 var</span><span style="color:#F8F8F2;"> Mysql_connection </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configuration.</span><span style="color:#50FA7B;">GetConnectionString</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">MySqlConn</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">                 t.</span><span style="color:#50FA7B;">UseMySql</span><span style="color:#F8F8F2;">(Mysql_connection, </span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> MySqlServerVersion</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> Version</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">26</span><span style="color:#F8F8F2;">)));</span></span>
<span class="line"><span style="color:#F8F8F2;">             }</span></span>
<span class="line"><span style="color:#FF79C6;">             else</span><span style="color:#FF79C6;"> if</span><span style="color:#F8F8F2;"> (database_config.</span><span style="color:#50FA7B;">ToUpper</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">==</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">SQLSERVER</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">             {</span></span>
<span class="line"><span style="color:#FF79C6;">                 var</span><span style="color:#F8F8F2;"> SqlServer_connection </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configuration.</span><span style="color:#50FA7B;">GetConnectionString</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">SqlServerConn</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">                 t.</span><span style="color:#50FA7B;">UseSqlServer</span><span style="color:#F8F8F2;">(SqlServer_connection);</span></span>
<span class="line"><span style="color:#F8F8F2;">             }</span></span>
<span class="line"><span style="color:#FF79C6;">             else</span><span style="color:#FF79C6;"> if</span><span style="color:#F8F8F2;"> (database_config.</span><span style="color:#50FA7B;">ToUpper</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">==</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">POSTGRES</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">             {</span></span>
<span class="line"><span style="color:#FF79C6;">                 var</span><span style="color:#F8F8F2;"> Postgre_connection </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configuration.</span><span style="color:#50FA7B;">GetConnectionString</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">PostGresConn</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">                 t.</span><span style="color:#50FA7B;">UseNpgsql</span><span style="color:#F8F8F2;">(Postgre_connection);</span></span>
<span class="line"><span style="color:#F8F8F2;">                 AppContext.</span><span style="color:#50FA7B;">SetSwitch</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Npgsql.EnableLegacyTimestampBehavior</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">                 AppContext.</span><span style="color:#50FA7B;">SetSwitch</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Npgsql.DisableDateTimeInfinityConversions</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">             }</span></span>
<span class="line"><span style="color:#F8F8F2;">             t.</span><span style="color:#50FA7B;">EnableSensitiveDataLogging</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">             t.</span><span style="color:#50FA7B;">UseLoggerFactory</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> LoggerFactory</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;">[] { </span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> DebugLoggerProvider</span><span style="color:#F8F8F2;">() }));</span></span>
<span class="line"><span style="color:#F8F8F2;">         }, </span><span style="color:#BD93F9;">100</span><span style="color:#F8F8F2;">); ;</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddMemoryCache</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddScoped</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">MultiTenancy</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">ITenantProvider</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">MultiTenancy</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">TenantProvider</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddSwaggerService</span><span style="color:#F8F8F2;">(configuration, AppContext.BaseDirectory);</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddTokenGeneratorService</span><span style="color:#F8F8F2;">(configuration);</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">RegisterAssembly</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddControllers</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">c</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">         {</span></span>
<span class="line"><span style="color:#F8F8F2;">             c.Filters.</span><span style="color:#50FA7B;">Add</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ViewModelActionFiter</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">             c.MaxModelValidationErrors </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 99999</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">         }).</span><span style="color:#50FA7B;">ConfigureApiBehaviorOptions</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">o</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">         {</span></span>
<span class="line"><span style="color:#F8F8F2;">             o.SuppressModelStateInvalidFilter </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">         })</span><span style="color:#6272A4;">//format</span></span>
<span class="line"><span style="color:#F8F8F2;">           .</span><span style="color:#50FA7B;">AddNewtonsoftJson</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">           {</span></span>
<span class="line"><span style="color:#F8F8F2;">               options.SerializerSettings.ReferenceLoopHandling </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> ReferenceLoopHandling.Ignore;</span></span>
<span class="line"><span style="color:#F8F8F2;">               options.SerializerSettings.DateFormatString </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">yyyy-MM-dd HH:mm:ss</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">               options.SerializerSettings.Converters.</span><span style="color:#50FA7B;">Add</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> JsonStringTrimConverter</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#F8F8F2;">               options.SerializerSettings.Formatting </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Formatting.Indented;</span></span>
<span class="line"><span style="color:#F8F8F2;">               options.SerializerSettings.ContractResolver </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> Newtonsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Json</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Serialization</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">CamelCasePropertyNamesContractResolver</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">           }).</span><span style="color:#50FA7B;">AddDataAnnotationsLocalization</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">           {</span></span>
<span class="line"><span style="color:#F8F8F2;">               options.DataAnnotationLocalizerProvider </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">factory</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">                   factory.</span><span style="color:#50FA7B;">Create</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">ModernWMS</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Core</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">MultiLanguage</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">           });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">         // Hangfire</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddHangfire</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">x</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> x.</span><span style="color:#50FA7B;">SetDataCompatibilityLevel</span><span style="color:#F8F8F2;">(CompatibilityLevel.Version_170)</span></span>
<span class="line"><span style="color:#F8F8F2;">             .</span><span style="color:#50FA7B;">UseSimpleAssemblyNameTypeSerializer</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">             .</span><span style="color:#50FA7B;">UseRecommendedSerializerSettings</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">             .</span><span style="color:#50FA7B;">UseStorage</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> MemoryStorage</span><span style="color:#F8F8F2;">()));</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddHangfireServer</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">         services.</span><span style="color:#50FA7B;">AddScoped</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">FunctionHelper</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#F8F8F2;">     }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="addhttpclient" tabindex="-1"><a class="header-anchor" href="#addhttpclient"><span>AddHttpClient</span></a></h4><p>在依赖注入（Dependency Injection, DI）容器中注册 HttpClient 实例。这使得你可以在应用程序中方便地使用 HttpClient 来发送 HTTP 请求，并且可以利用 ASP.NET Core 的依赖注入机制来管理 HttpClient 的生命周期。</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// **注册**</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> ConfigureServices</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IServiceCollection</span><span style="color:#FFB86C;font-style:italic;"> services</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    services.</span><span style="color:#50FA7B;">AddHttpClient</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#6272A4;">// 使用</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> MyController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> HttpClient</span><span style="color:#F8F8F2;"> _httpClient;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> MyController</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">HttpClient</span><span style="color:#FFB86C;font-style:italic;"> httpClient</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _httpClient </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> httpClient;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/data</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> async</span><span style="color:#8BE9FD;font-style:italic;"> Task</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IActionResult</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#50FA7B;">GetData</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> response </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> await</span><span style="color:#F8F8F2;"> _httpClient.</span><span style="color:#50FA7B;">GetAsync</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">https://api.example.com/data</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> content </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> await</span><span style="color:#F8F8F2;"> response.Content.</span><span style="color:#50FA7B;">ReadAsStringAsync</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(content);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="httpcontextaccessor" tabindex="-1"><a class="header-anchor" href="#httpcontextaccessor"><span>HttpContextAccessor</span></a></h4><div class="hint-container info"><p class="hint-container-title">httpContext</p><p>HttpContext 是 ASP.NET Core 处理每一个 HTTP 请求时的重要对象。</p><p>它包含了请求、响应、用户、Session、请求头、Cookies 等等信息。</p><p>但是它默认只能在中间件或控制器中使用，在普通的服务类里是无法直接访问的。</p></div><div class="hint-container info"><p class="hint-container-title"><code>AsyncLocal&lt;T&gt;</code></p><p>在异步编程中，任务（ Task ）可能会在不同的线程之间切换，这使得传统的线程局部存储（TLS）无法正确地维护上下文信息。例如，如果你在异步方法中使用 <code>ThreadLocal&lt;T&gt;</code> ，可能会因为任务切换到不同的线程而导致上下文丢失或混乱。</p><p><code>AsyncLocal&lt;T&gt;</code> 解决了这个问题，它确保在异步任务切换时，上下文信息能够正确地传播和保持一致。</p></div><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// 让你在服务类、工具类或中间件之外的地方，也能获取当前的 HttpContext</span></span>
<span class="line"><span style="color:#F8F8F2;">services.</span><span style="color:#50FA7B;">AddSingleton</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IHttpContextAccessor</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">HttpContextAccessor</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#6272A4;">// IHttpContextAccessor 是 ASP.NET Core 提供的接口，它能让你在任何地方拿到当前请求的 HttpContext</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> HttpContextAccessor</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IHttpContextAccessor</span></span>
<span class="line"><span style="color:#F8F8F2;">{   </span></span>
<span class="line"><span style="color:#6272A4;">    /*</span></span>
<span class="line"><span style="color:#6272A4;">    🔧 AsyncLocal&lt;T&gt; 是 .NET 提供的一个异步线程本地变量容器，适用于：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    每个请求独立（不会被并发污染）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    跨中间件、跨异步方法传递状态</span></span>
<span class="line"><span style="color:#6272A4;">    </span></span>
<span class="line"><span style="color:#6272A4;">    */</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> static</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> AsyncLocal</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">HttpContextHolder</span><span style="color:#F8F8F2;">&gt; _httpContextCurrent </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> AsyncLocal</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">HttpContextHolder</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    /// </span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">inheritdoc</span><span style="color:#F8F8F2;">/&gt;</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> HttpContext</span><span style="color:#F8F8F2;">? HttpContext</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        get</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#FF79C6;">            return</span><span style="color:#F8F8F2;"> _httpContextCurrent.Value</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;">.Context;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#FF79C6;">        set</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#FF79C6;">            var</span><span style="color:#F8F8F2;"> holder </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> _httpContextCurrent.Value;</span></span>
<span class="line"><span style="color:#FF79C6;">            if</span><span style="color:#F8F8F2;"> (holder </span><span style="color:#FF79C6;">!=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#6272A4;">                // Clear current HttpContext trapped in the AsyncLocals, as its done.</span></span>
<span class="line"><span style="color:#F8F8F2;">                holder.Context </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">            if</span><span style="color:#F8F8F2;"> (value </span><span style="color:#FF79C6;">!=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#6272A4;">                // Use an object indirection to hold the HttpContext in the AsyncLocal,</span></span>
<span class="line"><span style="color:#6272A4;">                // so it can be cleared in all ExecutionContexts when its cleared.</span></span>
<span class="line"><span style="color:#F8F8F2;">                _httpContextCurrent.Value </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> HttpContextHolder</span><span style="color:#F8F8F2;"> { Context </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> value };</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> sealed</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> HttpContextHolder</span></span>
<span class="line"><span style="color:#F8F8F2;">    {   </span></span>
<span class="line"><span style="color:#6272A4;">        // 解决 AsyncLocal&lt;T&gt; 对象生命周期和线程清理的问题。</span></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#8BE9FD;font-style:italic;"> HttpContext</span><span style="color:#F8F8F2;">? Context;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="configure" tabindex="-1"><a class="header-anchor" href="#configure"><span>Configure</span></a></h3><p>Configure 是 ASP.NET Core 框架在应用启动时调用的方法之一</p><ul><li>该方法是必须的</li><li>该方法用于配置HTTP请求管道，通过向管道添加中间件，应用不同的响应方式。</li><li>该方法在ConfigureServices方法之后被调用</li><li>该方法中的参数可以接受任何已注入到DI容器中的服务</li><li>该方法内的代码大多是形如Use{Middleware}的扩展方法</li><li>该方法内中间件的注册顺序与代码的书写顺序是一致的，先注册的先执行，后注册的后执行</li></ul>`,21)]))}const F=n(p,[["render",o],["__file","ModernWMS.html.vue"]]),i=JSON.parse('{"path":"/dotnet/ModernWMS.html","title":"ModernWMS学习笔记","lang":"en-US","frontmatter":{"title":"ModernWMS学习笔记","description":"startup configuration configuration是配置，用来获取配置文件中的内容 例如： appsettings.json 通过 Configuration[\\"MyAppSettings:ApiKey\\"] 来读取这个值。 ConfigureServices 将你需要的服务添加到依赖注入容器中。所有通过 services.AddXx...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/dotnet/ModernWMS.html"}],["meta",{"property":"og:title","content":"ModernWMS学习笔记"}],["meta",{"property":"og:description","content":"startup configuration configuration是配置，用来获取配置文件中的内容 例如： appsettings.json 通过 Configuration[\\"MyAppSettings:ApiKey\\"] 来读取这个值。 ConfigureServices 将你需要的服务添加到依赖注入容器中。所有通过 services.AddXx..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-04-23T08:18:43.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-23T08:18:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ModernWMS学习笔记\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-23T08:18:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"git":{"createdTime":1745396323000,"updatedTime":1745396323000,"contributors":[{"name":"luxiag","username":"luxiag","email":"luxiag@qq.com","commits":1,"url":"https://github.com/luxiag"}]},"readingTime":{"minutes":3.89,"words":1168},"filePathRelative":"dotnet/ModernWMS.md","localizedDate":"April 23, 2025","excerpt":"<h2>startup</h2>\\n<div class=\\"language-csharp line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"csharp\\" data-title=\\"csharp\\" style=\\"background-color:#282A36;color:#F8F8F2\\"><pre class=\\"shiki dracula vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#FF79C6\\">    public</span><span style=\\"color:#FF79C6\\"> class</span><span style=\\"color:#8BE9FD\\"> Startup</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        /// </span><span style=\\"color:#F8F8F2\\">&lt;</span><span style=\\"color:#FF79C6\\">summary</span><span style=\\"color:#F8F8F2\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        /// startup</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        /// </span><span style=\\"color:#F8F8F2\\">&lt;/</span><span style=\\"color:#FF79C6\\">summary</span><span style=\\"color:#F8F8F2\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        /// </span><span style=\\"color:#F8F8F2\\">&lt;</span><span style=\\"color:#FF79C6\\">param</span><span style=\\"color:#50FA7B;font-style:italic\\"> name</span><span style=\\"color:#6272A4\\">=</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F1FA8C\\">configuration</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F8F8F2\\">&gt;</span><span style=\\"color:#6272A4\\">Config</span><span style=\\"color:#F8F8F2\\">&lt;/</span><span style=\\"color:#FF79C6\\">param</span><span style=\\"color:#F8F8F2\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">        public</span><span style=\\"color:#50FA7B\\"> Startup</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#8BE9FD;font-style:italic\\">IConfiguration</span><span style=\\"color:#FFB86C;font-style:italic\\"> configuration</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">        {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">            Configuration </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> configuration;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">        }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">        public</span><span style=\\"color:#8BE9FD;font-style:italic\\"> IConfiguration</span><span style=\\"color:#F8F8F2\\"> Configuration { </span><span style=\\"color:#FF79C6\\">get</span><span style=\\"color:#F8F8F2\\">; }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        /// </span><span style=\\"color:#F8F8F2\\">&lt;</span><span style=\\"color:#FF79C6\\">summary</span><span style=\\"color:#F8F8F2\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        ///  register service </span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        /// </span><span style=\\"color:#F8F8F2\\">&lt;/</span><span style=\\"color:#FF79C6\\">summary</span><span style=\\"color:#F8F8F2\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        /// </span><span style=\\"color:#F8F8F2\\">&lt;</span><span style=\\"color:#FF79C6\\">param</span><span style=\\"color:#50FA7B;font-style:italic\\"> name</span><span style=\\"color:#6272A4\\">=</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F1FA8C\\">services</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F8F8F2\\">&gt;</span><span style=\\"color:#6272A4\\">services</span><span style=\\"color:#F8F8F2\\">&lt;/</span><span style=\\"color:#FF79C6\\">param</span><span style=\\"color:#F8F8F2\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">        public</span><span style=\\"color:#FF79C6\\"> void</span><span style=\\"color:#50FA7B\\"> ConfigureServices</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#8BE9FD;font-style:italic\\">IServiceCollection</span><span style=\\"color:#FFB86C;font-style:italic\\"> services</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">        {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">            services.</span><span style=\\"color:#50FA7B\\">AddExtensionsService</span><span style=\\"color:#F8F8F2\\">(Configuration);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">        }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        /// </span><span style=\\"color:#F8F8F2\\">&lt;</span><span style=\\"color:#FF79C6\\">summary</span><span style=\\"color:#F8F8F2\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        /// configure</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        /// </span><span style=\\"color:#F8F8F2\\">&lt;/</span><span style=\\"color:#FF79C6\\">summary</span><span style=\\"color:#F8F8F2\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        /// </span><span style=\\"color:#F8F8F2\\">&lt;</span><span style=\\"color:#FF79C6\\">param</span><span style=\\"color:#50FA7B;font-style:italic\\"> name</span><span style=\\"color:#6272A4\\">=</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F1FA8C\\">app</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F8F8F2\\">&gt;</span><span style=\\"color:#6272A4\\">app</span><span style=\\"color:#F8F8F2\\">&lt;/</span><span style=\\"color:#FF79C6\\">param</span><span style=\\"color:#F8F8F2\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        /// </span><span style=\\"color:#F8F8F2\\">&lt;</span><span style=\\"color:#FF79C6\\">param</span><span style=\\"color:#50FA7B;font-style:italic\\"> name</span><span style=\\"color:#6272A4\\">=</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F1FA8C\\">env</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F8F8F2\\">&gt;</span><span style=\\"color:#6272A4\\">env</span><span style=\\"color:#F8F8F2\\">&lt;/</span><span style=\\"color:#FF79C6\\">param</span><span style=\\"color:#F8F8F2\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        /// </span><span style=\\"color:#F8F8F2\\">&lt;</span><span style=\\"color:#FF79C6\\">param</span><span style=\\"color:#50FA7B;font-style:italic\\"> name</span><span style=\\"color:#6272A4\\">=</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F1FA8C\\">serviceProvider</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F8F8F2\\">&gt;</span><span style=\\"color:#6272A4\\">serviceProvider</span><span style=\\"color:#F8F8F2\\">&lt;/</span><span style=\\"color:#FF79C6\\">param</span><span style=\\"color:#F8F8F2\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">        public</span><span style=\\"color:#FF79C6\\"> void</span><span style=\\"color:#50FA7B\\"> Configure</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#8BE9FD;font-style:italic\\">IApplicationBuilder</span><span style=\\"color:#FFB86C;font-style:italic\\"> app</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#8BE9FD;font-style:italic\\">IWebHostEnvironment</span><span style=\\"color:#FFB86C;font-style:italic\\"> env</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#8BE9FD;font-style:italic\\">IServiceProvider</span><span style=\\"color:#FFB86C;font-style:italic\\"> service_provider</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">        {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">            app.</span><span style=\\"color:#50FA7B\\">UseExtensionsConfigure</span><span style=\\"color:#F8F8F2\\">(env, service_provider, Configuration);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">        }</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    }</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{F as comp,i as data};
