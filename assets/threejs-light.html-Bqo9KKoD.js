import{_ as U,h as E,i as G,q as K,c as X,b as P,d as F,e as Q,o as Y}from"./app-DmuFHWsy.js";import{l as S,m as T,as as I,W as _,at as J,n as aa,o as N,aH as sa,aI as ea,aA as O,aJ as na,p as R,aK as ta,r as la,y as oa,aL as Z,A as pa,aM as da,ac as va,X as V,s as ia}from"./three.module-BzA_QsZm.js";import{O as D}from"./OrbitControls-DTSS7XTZ.js";import{g as j}from"./index-DjKJqAo0.js";import{R as z}from"./RGBELoader-DZo1sXki.js";import{G as W}from"./GLTFLoader-CQSwUyoN.js";import{W as ra}from"./Water2-Bv9AerBY.js";const ca={__name:"threejs-light.html",setup($,{expose:t}){t();let m;const c=E(),M=async()=>{const e=new S,d=new T(45,2,.25,20);d.position.set(-2,1.5,3);const l=await new z().loadAsync("./assets/textures/equirectangular/moonless_golf_1k.hdr ");l.mapping=I,e.background=l,e.environment=l;const b=await new W().loadAsync("./assets/models/LightsPunctualLamp.glb");e.add(b.scene);const v=new m.GUI;c.value.appendChild(v.domElement),v.domElement.style.position="absolute",v.domElement.style.top="0px",v.domElement.style.right="0px";const o={punctualLightsEnabled:!0};v.add(o,"punctualLightsEnabled").onChange(u),v.open();const s=new _({antialias:!0});s.setSize(c.value.offsetWidth,c.value.offsetWidth/2),s.toneMapping=J,s.toneMappingExposure=1,s.outputEncoding=void 0,s.useLegacyLights=!1,c.value.appendChild(s.domElement);const i=new D(d,s.domElement);i.addEventListener("change",p),i.minDistance=2,i.maxDistance=10,i.target.set(0,1,0),i.update(),window.addEventListener("resize",r);function r(){s.setSize(c.value.offsetWidth,c.value.offsetWidth/2),p()}function u(h){e.traverse(function(a){a.isLight&&(a.visible=h)}),p()}function p(){s.render(e,d)}p()},f=E(),k=()=>{const e=new S,d=new T(90,2,.1,1e3);d.position.y=5,new z().loadAsync("./assets/textures/2k.hdr").then(r=>{r.mapping=I,e.background=r,e.environment=r});const l=new aa({vertexShader:`
            precision lowp float;
            varying vec4 vPosition;
            varying vec4 gPosition;
            void main(){
                vec4 modelPosition = modelMatrix * vec4( position, 1.0 );

                vPosition = modelPosition;
                gPosition = vec4( position, 1.0 );
                gl_Position =  projectionMatrix * viewMatrix * modelPosition;
            }
        `,fragmentShader:`
            precision lowp float;
            varying vec4 vPosition;
            varying vec4 gPosition;

            void main(){
                vec4 redColor = vec4(1,0,0,1);
                vec4 yellowColor = vec4(1,1,0.5,1);
                vec4 mixColor = mix(yellowColor,redColor,gPosition.y/3.0);

                if(gl_FrontFacing){
                    gl_FragColor = vec4(mixColor.xyz-(vPosition.y-20.0)/80.0-0.1,1);
                    // gl_FragColor = vec4(1,1,1,1);
                }else{
                    gl_FragColor = vec4(mixColor.xyz,1);
                }
            }  
        `,uniforms:{},side:N}),n=new _;n.outputEncoding=void 0,n.toneMapping=J,n.toneMappingExposure=.2;const b=new W;let v=null;b.load("./assets/models/flyLight.glb",r=>{v=r.scene.children[0],v.material=l;for(let u=0;u<150;u++){let p=r.scene.clone(!0),h=(Math.random()-.5)*300,a=(Math.random()-.5)*300,g=Math.random()*60+25;p.position.set(h,g,a),j.to(p.rotation,{y:2*Math.PI,duration:10+Math.random()*30,repeat:-1}),j.to(p.position,{x:"+="+Math.random()*5,y:"+="+Math.random()*20,yoyo:!0,duration:5+Math.random()*10,repeat:-1}),e.add(p)}}),n.setSize(f.value.offsetWidth,f.value.offsetWidth/2),window.addEventListener("resize",()=>{n.setSize(f.value.offsetWidth,f.value.offsetWidth/2),n.setPixelRatio(window.devicePixelRatio)}),f.value.appendChild(n.domElement);const o=new D(d,n.domElement);o.enableDamping=!0,o.update(),o.autoRotate=!0,o.autoRotateSpeed=.1,o.maxPolarAngle=Math.PI/3*2,o.minPolarAngle=Math.PI/3*2;const s=new ia;function i(r){s.getElapsedTime(),requestAnimationFrame(i),n.render(e,d)}i()},y=E(),H=()=>{const e=new S,d=new T(45,2,1,2e3);d.position.z=20,e.add(new sa(1118498));function w(a){const C=new oa(a,2,20);C.castShadow=!0,C.shadow.bias=-.005;let L=new Z(.3,12,6),x=new pa({color:a});x.color.multiplyScalar(2);let A=new R(L,x);C.add(A);const B=new da(u());return B.magFilter=va,B.wrapT=V,B.wrapS=V,B.repeat.set(1,4.5),L=new Z(2,32,8),x=new O({side:N,alphaMap:B,alphaTest:.5}),A=new R(L,x),A.castShadow=!0,A.receiveShadow=!0,C.add(A),C}const l=w(35071);e.add(l);const n=w(16746632);e.add(n);const b=new ea(30,30,30),v=new O({color:10530223,shininess:10,specular:1118481,side:na}),o=new R(b,v);o.position.y=10,o.receiveShadow=!0,e.add(o);const s=new _({antialias:!0});s.setPixelRatio(window.devicePixelRatio),s.setSize(y.value.offsetWidth,y.value.offsetWidth/2),s.shadowMap.enabled=!0,s.shadowMap.type=ta,y.value.appendChild(s.domElement);const i=new D(d,s.domElement);i.target.set(0,10,0),i.update(),window.addEventListener("resize",r);function r(){s.setSize(y.value.offsetWidth,y.value.offsetWidth/2)}function u(){const a=document.createElement("canvas");a.width=2,a.height=2;const g=a.getContext("2d");return g.fillStyle="white",g.fillRect(0,1,2,1),a}function p(){requestAnimationFrame(p),h()}function h(){let a=performance.now()*.001;l.position.x=Math.sin(a*.6)*9,l.position.y=Math.sin(a*.7)*9+6,l.position.z=Math.sin(a*.8)*9,l.rotation.x=a,l.rotation.z=a,a+=1e4,n.position.x=Math.sin(a*.6)*9,n.position.y=Math.sin(a*.7)*9+6,n.position.z=Math.sin(a*.8)*9,n.rotation.x=a,n.rotation.z=a,s.render(e,d)}p()};G(async()=>{m=await K(()=>import("./dat.gui.module-DNo137I2.js"),[]),k(),M(),H()});const q={get dat(){return m},set dat(e){m=e},lightRef:c,initLights:M,lanternRef:f,initLantern:k,pointLightRef:y,initPointLight:H,ref:E,onMounted:G,get THREE(){return la},get OrbitControls(){return D},get gsap(){return j},get RGBELoader(){return z},get GLTFLoader(){return W},get Water(){return ra}};return Object.defineProperty(q,"__isScriptSetup",{enumerable:!1,value:!0}),q}},Fa={ref:"lightRef",class:"light"},fa={ref:"lanternRef"},ya={ref:"pointLightRef"};function ua($,t,m,c,M,f){return Y(),X("div",null,[t[0]||(t[0]=P(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-39f0ea18><pre class="shiki dracula vp-code" data-v-39f0ea18><code data-v-39f0ea18><span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>//遍历场景中的所有对象，然后判断当前对象是否是光源对象</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>function</span><span style="color:#50FA7B;" data-v-39f0ea18> toggleLights</span><span style="color:#F8F8F2;" data-v-39f0ea18>( </span><span style="color:#FFB86C;font-style:italic;" data-v-39f0ea18>visible</span><span style="color:#F8F8F2;" data-v-39f0ea18> ) {</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18> scene.</span><span style="color:#50FA7B;" data-v-39f0ea18>traverse</span><span style="color:#F8F8F2;" data-v-39f0ea18>( </span><span style="color:#FF79C6;" data-v-39f0ea18>function</span><span style="color:#F8F8F2;" data-v-39f0ea18> ( </span><span style="color:#FFB86C;font-style:italic;" data-v-39f0ea18>object</span><span style="color:#F8F8F2;" data-v-39f0ea18> ) {</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>  if</span><span style="color:#F8F8F2;" data-v-39f0ea18> ( object.isLight ) {</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>   object.visible </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#F8F8F2;" data-v-39f0ea18> visible;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  }</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18> } );</span></span>
<span class="line" data-v-39f0ea18><span style="color:#50FA7B;" data-v-39f0ea18> render</span><span style="color:#F8F8F2;" data-v-39f0ea18>();</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-39f0ea18><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div></div></div>`,1)),F("div",Fa,null,512),t[1]||(t[1]=P(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-39f0ea18><pre class="shiki dracula vp-code" data-v-39f0ea18><code data-v-39f0ea18><span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>    const</span><span style="color:#F8F8F2;" data-v-39f0ea18> shaderMaterial </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-39f0ea18> new</span><span style="color:#BD93F9;" data-v-39f0ea18> THREE</span><span style="color:#F8F8F2;" data-v-39f0ea18>.</span><span style="color:#50FA7B;" data-v-39f0ea18>ShaderMaterial</span><span style="color:#F8F8F2;" data-v-39f0ea18>({</span></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>        // 定义顶点着色器，用于处理顶点属性</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>        vertexShader</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#F1FA8C;" data-v-39f0ea18> \`</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>            precision lowp float;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>            // 传递顶点位置信息到片元着色器</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>            varying vec4 vPosition;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>            // 传递变换后的顶点位置信息到片元着色器</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>            varying vec4 gPosition;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>            void main(){</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                // 将顶点坐标从模型空间变换到世界空间</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                vec4 modelPosition = modelMatrix * vec4( position, 1.0 );</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                // 将变换后的顶点坐标从世界空间变换到相机空间</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                // 并传递给 varying vPosition</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                vPosition = modelPosition;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                // 将顶点坐标从模型空间变换到世界空间</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                // 并传递给 varying gPosition</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                gPosition = vec4( position, 1.0 );</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                // 将顶点坐标从模型空间变换到相机空间和投影空间</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                gl_Position =  projectionMatrix * viewMatrix * modelPosition;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>            }</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>        \`</span><span style="color:#F8F8F2;" data-v-39f0ea18>,</span></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>        // 定义片元着色器，用于处理像素颜色</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>        fragmentShader</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#F1FA8C;" data-v-39f0ea18>\`</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>            precision lowp float;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>            // 接收来自顶点着色器的变量</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>            varying vec4 vPosition;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>            varying vec4 gPosition;</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>            void main(){</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                // 定义红色和黄色的颜色值</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                vec4 redColor = vec4(1,0,0,1);</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                vec4 yellowColor = vec4(1,1,0.5,1);</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                // 计算需要混合的颜色值，并传递给 gl_FragColor</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                vec4 mixColor = mix(yellowColor,redColor,gPosition.y/3.0);</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                if(gl_FrontFacing){</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                    // 对于正面的面，计算并设置像素颜色</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                    gl_FragColor = vec4(mixColor.xyz-(vPosition.y-20.0)/80.0-0.1,1);</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                }else{</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                    // 对于背面的面，直接设置像素颜色</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                    gl_FragColor = vec4(mixColor.xyz,1);</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>                }</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>            }  </span></span>
<span class="line" data-v-39f0ea18><span style="color:#F1FA8C;" data-v-39f0ea18>        \`</span><span style="color:#F8F8F2;" data-v-39f0ea18>,</span></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>        // 传递给着色器的变量，这里为空对象</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>        uniforms</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#F8F8F2;" data-v-39f0ea18>{},</span></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>        // 设置物体的两面都需要渲染</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>        side</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#BD93F9;" data-v-39f0ea18>THREE</span><span style="color:#F8F8F2;" data-v-39f0ea18>.DoubleSide</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>    })</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>    const</span><span style="color:#F8F8F2;" data-v-39f0ea18> gltfLoader </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-39f0ea18> new</span><span style="color:#50FA7B;" data-v-39f0ea18> GLTFLoader</span><span style="color:#F8F8F2;" data-v-39f0ea18>()</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>    let</span><span style="color:#F8F8F2;" data-v-39f0ea18> LightBox </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#BD93F9;" data-v-39f0ea18> null</span><span style="color:#F8F8F2;" data-v-39f0ea18> </span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>    gltfLoader.</span><span style="color:#50FA7B;" data-v-39f0ea18>load</span><span style="color:#F8F8F2;" data-v-39f0ea18>(</span><span style="color:#E9F284;" data-v-39f0ea18>&quot;</span><span style="color:#F1FA8C;" data-v-39f0ea18>/blog/assets/model/flyLight.glb</span><span style="color:#E9F284;" data-v-39f0ea18>&quot;</span><span style="color:#F8F8F2;" data-v-39f0ea18>,(</span><span style="color:#FFB86C;font-style:italic;" data-v-39f0ea18>gltf</span><span style="color:#F8F8F2;" data-v-39f0ea18>) </span><span style="color:#FF79C6;" data-v-39f0ea18>=&gt;</span><span style="color:#F8F8F2;" data-v-39f0ea18> {</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>        LightBox </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#F8F8F2;" data-v-39f0ea18> gltf.scene.children[</span><span style="color:#BD93F9;" data-v-39f0ea18>1</span><span style="color:#F8F8F2;" data-v-39f0ea18>]</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>        LightBox.material </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#F8F8F2;" data-v-39f0ea18> shaderMaterial;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>        </span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>        for</span><span style="color:#F8F8F2;" data-v-39f0ea18> (</span><span style="color:#FF79C6;" data-v-39f0ea18>let</span><span style="color:#F8F8F2;" data-v-39f0ea18> i </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#BD93F9;" data-v-39f0ea18> 0</span><span style="color:#F8F8F2;" data-v-39f0ea18>; i </span><span style="color:#FF79C6;" data-v-39f0ea18>&lt;</span><span style="color:#BD93F9;" data-v-39f0ea18> 150</span><span style="color:#F8F8F2;" data-v-39f0ea18>; i</span><span style="color:#FF79C6;" data-v-39f0ea18>++</span><span style="color:#F8F8F2;" data-v-39f0ea18>) {</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>          let</span><span style="color:#F8F8F2;" data-v-39f0ea18> flyLight </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#F8F8F2;" data-v-39f0ea18> gltf.scene.</span><span style="color:#50FA7B;" data-v-39f0ea18>clone</span><span style="color:#F8F8F2;" data-v-39f0ea18>(</span><span style="color:#BD93F9;" data-v-39f0ea18>true</span><span style="color:#F8F8F2;" data-v-39f0ea18>);</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>          let</span><span style="color:#F8F8F2;" data-v-39f0ea18> x </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#F8F8F2;" data-v-39f0ea18> (Math.</span><span style="color:#50FA7B;" data-v-39f0ea18>random</span><span style="color:#F8F8F2;" data-v-39f0ea18>() </span><span style="color:#FF79C6;" data-v-39f0ea18>-</span><span style="color:#BD93F9;" data-v-39f0ea18> 0.5</span><span style="color:#F8F8F2;" data-v-39f0ea18>) </span><span style="color:#FF79C6;" data-v-39f0ea18>*</span><span style="color:#BD93F9;" data-v-39f0ea18> 300</span><span style="color:#F8F8F2;" data-v-39f0ea18>;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>          let</span><span style="color:#F8F8F2;" data-v-39f0ea18> z </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#F8F8F2;" data-v-39f0ea18> (Math.</span><span style="color:#50FA7B;" data-v-39f0ea18>random</span><span style="color:#F8F8F2;" data-v-39f0ea18>() </span><span style="color:#FF79C6;" data-v-39f0ea18>-</span><span style="color:#BD93F9;" data-v-39f0ea18> 0.5</span><span style="color:#F8F8F2;" data-v-39f0ea18>) </span><span style="color:#FF79C6;" data-v-39f0ea18>*</span><span style="color:#BD93F9;" data-v-39f0ea18> 300</span><span style="color:#F8F8F2;" data-v-39f0ea18>;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>          let</span><span style="color:#F8F8F2;" data-v-39f0ea18> y </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#F8F8F2;" data-v-39f0ea18> Math.</span><span style="color:#50FA7B;" data-v-39f0ea18>random</span><span style="color:#F8F8F2;" data-v-39f0ea18>() </span><span style="color:#FF79C6;" data-v-39f0ea18>*</span><span style="color:#BD93F9;" data-v-39f0ea18> 60</span><span style="color:#FF79C6;" data-v-39f0ea18> +</span><span style="color:#BD93F9;" data-v-39f0ea18> 25</span><span style="color:#F8F8F2;" data-v-39f0ea18>;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>          flyLight.position.</span><span style="color:#50FA7B;" data-v-39f0ea18>set</span><span style="color:#F8F8F2;" data-v-39f0ea18>(x, y, z);</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>          gsap.</span><span style="color:#50FA7B;" data-v-39f0ea18>to</span><span style="color:#F8F8F2;" data-v-39f0ea18>(flyLight.rotation, {</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>            y</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#BD93F9;" data-v-39f0ea18> 2</span><span style="color:#FF79C6;" data-v-39f0ea18> *</span><span style="color:#F8F8F2;" data-v-39f0ea18> Math.</span><span style="color:#BD93F9;" data-v-39f0ea18>PI</span><span style="color:#F8F8F2;" data-v-39f0ea18>,</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>            duration</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#BD93F9;" data-v-39f0ea18> 10</span><span style="color:#FF79C6;" data-v-39f0ea18> +</span><span style="color:#F8F8F2;" data-v-39f0ea18> Math.</span><span style="color:#50FA7B;" data-v-39f0ea18>random</span><span style="color:#F8F8F2;" data-v-39f0ea18>() </span><span style="color:#FF79C6;" data-v-39f0ea18>*</span><span style="color:#BD93F9;" data-v-39f0ea18> 30</span><span style="color:#F8F8F2;" data-v-39f0ea18>,</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>            repeat</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#FF79C6;" data-v-39f0ea18> -</span><span style="color:#BD93F9;" data-v-39f0ea18>1</span><span style="color:#F8F8F2;" data-v-39f0ea18>,</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>          });</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>          gsap.</span><span style="color:#50FA7B;" data-v-39f0ea18>to</span><span style="color:#F8F8F2;" data-v-39f0ea18>(flyLight.position, {</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>            x</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#E9F284;" data-v-39f0ea18> &quot;</span><span style="color:#F1FA8C;" data-v-39f0ea18>+=</span><span style="color:#E9F284;" data-v-39f0ea18>&quot;</span><span style="color:#FF79C6;" data-v-39f0ea18> +</span><span style="color:#F8F8F2;" data-v-39f0ea18> Math.</span><span style="color:#50FA7B;" data-v-39f0ea18>random</span><span style="color:#F8F8F2;" data-v-39f0ea18>() </span><span style="color:#FF79C6;" data-v-39f0ea18>*</span><span style="color:#BD93F9;" data-v-39f0ea18> 5</span><span style="color:#F8F8F2;" data-v-39f0ea18>,</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>            y</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#E9F284;" data-v-39f0ea18> &quot;</span><span style="color:#F1FA8C;" data-v-39f0ea18>+=</span><span style="color:#E9F284;" data-v-39f0ea18>&quot;</span><span style="color:#FF79C6;" data-v-39f0ea18> +</span><span style="color:#F8F8F2;" data-v-39f0ea18> Math.</span><span style="color:#50FA7B;" data-v-39f0ea18>random</span><span style="color:#F8F8F2;" data-v-39f0ea18>() </span><span style="color:#FF79C6;" data-v-39f0ea18>*</span><span style="color:#BD93F9;" data-v-39f0ea18> 20</span><span style="color:#F8F8F2;" data-v-39f0ea18>,</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>            yoyo</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#BD93F9;" data-v-39f0ea18> true</span><span style="color:#F8F8F2;" data-v-39f0ea18>,</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>            duration</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#BD93F9;" data-v-39f0ea18> 5</span><span style="color:#FF79C6;" data-v-39f0ea18> +</span><span style="color:#F8F8F2;" data-v-39f0ea18> Math.</span><span style="color:#50FA7B;" data-v-39f0ea18>random</span><span style="color:#F8F8F2;" data-v-39f0ea18>() </span><span style="color:#FF79C6;" data-v-39f0ea18>*</span><span style="color:#BD93F9;" data-v-39f0ea18> 10</span><span style="color:#F8F8F2;" data-v-39f0ea18>,</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>            repeat</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#FF79C6;" data-v-39f0ea18> -</span><span style="color:#BD93F9;" data-v-39f0ea18>1</span><span style="color:#F8F8F2;" data-v-39f0ea18>,</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>          });</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>          scene.</span><span style="color:#50FA7B;" data-v-39f0ea18>add</span><span style="color:#F8F8F2;" data-v-39f0ea18>(flyLight);</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>        }</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>    })</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-39f0ea18><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div></div></div>`,1)),F("div",fa,null,512),t[2]||(t[2]=P(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-39f0ea18><pre class="shiki dracula vp-code" data-v-39f0ea18><code data-v-39f0ea18><span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>function</span><span style="color:#50FA7B;" data-v-39f0ea18> createLight</span><span style="color:#F8F8F2;" data-v-39f0ea18>(</span><span style="color:#FFB86C;font-style:italic;" data-v-39f0ea18>color</span><span style="color:#F8F8F2;" data-v-39f0ea18>) {</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 定义光源强度为2</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>  const</span><span style="color:#F8F8F2;" data-v-39f0ea18> intensity </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#BD93F9;" data-v-39f0ea18> 2</span><span style="color:#F8F8F2;" data-v-39f0ea18>;</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 创建一个点光源</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>  const</span><span style="color:#F8F8F2;" data-v-39f0ea18> light </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-39f0ea18> new</span><span style="color:#BD93F9;" data-v-39f0ea18> THREE</span><span style="color:#F8F8F2;" data-v-39f0ea18>.</span><span style="color:#50FA7B;" data-v-39f0ea18>PointLight</span><span style="color:#F8F8F2;" data-v-39f0ea18>(color, intensity, </span><span style="color:#BD93F9;" data-v-39f0ea18>20</span><span style="color:#F8F8F2;" data-v-39f0ea18>);</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 开启阴影</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  light.castShadow </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#BD93F9;" data-v-39f0ea18> true</span><span style="color:#F8F8F2;" data-v-39f0ea18>;</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 减少双面对象自身阴影</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  light.shadow.bias </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#FF79C6;" data-v-39f0ea18> -</span><span style="color:#BD93F9;" data-v-39f0ea18>0.005</span><span style="color:#F8F8F2;" data-v-39f0ea18>;</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 创建一个球体作为光源的可视化表示</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>  let</span><span style="color:#F8F8F2;" data-v-39f0ea18> geometry </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-39f0ea18> new</span><span style="color:#BD93F9;" data-v-39f0ea18> THREE</span><span style="color:#F8F8F2;" data-v-39f0ea18>.</span><span style="color:#50FA7B;" data-v-39f0ea18>SphereGeometry</span><span style="color:#F8F8F2;" data-v-39f0ea18>(</span><span style="color:#BD93F9;" data-v-39f0ea18>0.3</span><span style="color:#F8F8F2;" data-v-39f0ea18>, </span><span style="color:#BD93F9;" data-v-39f0ea18>12</span><span style="color:#F8F8F2;" data-v-39f0ea18>, </span><span style="color:#BD93F9;" data-v-39f0ea18>6</span><span style="color:#F8F8F2;" data-v-39f0ea18>);</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>  let</span><span style="color:#F8F8F2;" data-v-39f0ea18> material </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-39f0ea18> new</span><span style="color:#BD93F9;" data-v-39f0ea18> THREE</span><span style="color:#F8F8F2;" data-v-39f0ea18>.</span><span style="color:#50FA7B;" data-v-39f0ea18>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-39f0ea18>({</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>    color</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#F8F8F2;" data-v-39f0ea18> color</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  });</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 根据光源强度调整颜色</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  material.color.</span><span style="color:#50FA7B;" data-v-39f0ea18>multiplyScalar</span><span style="color:#F8F8F2;" data-v-39f0ea18>(intensity);</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>  let</span><span style="color:#F8F8F2;" data-v-39f0ea18> sphere </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-39f0ea18> new</span><span style="color:#BD93F9;" data-v-39f0ea18> THREE</span><span style="color:#F8F8F2;" data-v-39f0ea18>.</span><span style="color:#50FA7B;" data-v-39f0ea18>Mesh</span><span style="color:#F8F8F2;" data-v-39f0ea18>(geometry, material);</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 将球体添加到光源上</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  light.</span><span style="color:#50FA7B;" data-v-39f0ea18>add</span><span style="color:#F8F8F2;" data-v-39f0ea18>(sphere);</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 生成纹理</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>  const</span><span style="color:#F8F8F2;" data-v-39f0ea18> texture </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-39f0ea18> new</span><span style="color:#BD93F9;" data-v-39f0ea18> THREE</span><span style="color:#F8F8F2;" data-v-39f0ea18>.</span><span style="color:#50FA7B;" data-v-39f0ea18>CanvasTexture</span><span style="color:#F8F8F2;" data-v-39f0ea18>(</span><span style="color:#50FA7B;" data-v-39f0ea18>generateTexture</span><span style="color:#F8F8F2;" data-v-39f0ea18>());</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 设置纹理过滤器和重复方式</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  texture.magFilter </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#BD93F9;" data-v-39f0ea18> THREE</span><span style="color:#F8F8F2;" data-v-39f0ea18>.NearestFilter;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  texture.wrapT </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#BD93F9;" data-v-39f0ea18> THREE</span><span style="color:#F8F8F2;" data-v-39f0ea18>.RepeatWrapping;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  texture.wrapS </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#BD93F9;" data-v-39f0ea18> THREE</span><span style="color:#F8F8F2;" data-v-39f0ea18>.RepeatWrapping;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  texture.repeat.</span><span style="color:#50FA7B;" data-v-39f0ea18>set</span><span style="color:#F8F8F2;" data-v-39f0ea18>(</span><span style="color:#BD93F9;" data-v-39f0ea18>1</span><span style="color:#F8F8F2;" data-v-39f0ea18>, </span><span style="color:#BD93F9;" data-v-39f0ea18>4.5</span><span style="color:#F8F8F2;" data-v-39f0ea18>);</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 创建一个球体作为光源的光晕效果</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  geometry </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-39f0ea18> new</span><span style="color:#BD93F9;" data-v-39f0ea18> THREE</span><span style="color:#F8F8F2;" data-v-39f0ea18>.</span><span style="color:#50FA7B;" data-v-39f0ea18>SphereGeometry</span><span style="color:#F8F8F2;" data-v-39f0ea18>(</span><span style="color:#BD93F9;" data-v-39f0ea18>2</span><span style="color:#F8F8F2;" data-v-39f0ea18>, </span><span style="color:#BD93F9;" data-v-39f0ea18>32</span><span style="color:#F8F8F2;" data-v-39f0ea18>, </span><span style="color:#BD93F9;" data-v-39f0ea18>8</span><span style="color:#F8F8F2;" data-v-39f0ea18>);</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  material </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-39f0ea18> new</span><span style="color:#BD93F9;" data-v-39f0ea18> THREE</span><span style="color:#F8F8F2;" data-v-39f0ea18>.</span><span style="color:#50FA7B;" data-v-39f0ea18>MeshPhongMaterial</span><span style="color:#F8F8F2;" data-v-39f0ea18>({</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>    side</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#BD93F9;" data-v-39f0ea18> THREE</span><span style="color:#F8F8F2;" data-v-39f0ea18>.DoubleSide, </span><span style="color:#6272A4;" data-v-39f0ea18>// 双面显示</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>    alphaMap</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#F8F8F2;" data-v-39f0ea18> texture, </span><span style="color:#6272A4;" data-v-39f0ea18>// 设置透明度贴图</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>    alphaTest</span><span style="color:#FF79C6;" data-v-39f0ea18>:</span><span style="color:#BD93F9;" data-v-39f0ea18> 0.5</span><span style="color:#6272A4;" data-v-39f0ea18> // 设置透明度阈值</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  });</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  sphere </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-39f0ea18> new</span><span style="color:#BD93F9;" data-v-39f0ea18> THREE</span><span style="color:#F8F8F2;" data-v-39f0ea18>.</span><span style="color:#50FA7B;" data-v-39f0ea18>Mesh</span><span style="color:#F8F8F2;" data-v-39f0ea18>(geometry, material);</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 开启球体阴影和接收阴影</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  sphere.castShadow </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#BD93F9;" data-v-39f0ea18> true</span><span style="color:#F8F8F2;" data-v-39f0ea18>;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  sphere.receiveShadow </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#BD93F9;" data-v-39f0ea18> true</span><span style="color:#F8F8F2;" data-v-39f0ea18>;</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 将球体添加到光源上</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  light.</span><span style="color:#50FA7B;" data-v-39f0ea18>add</span><span style="color:#F8F8F2;" data-v-39f0ea18>(sphere);</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 返回创建的光源</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>  return</span><span style="color:#F8F8F2;" data-v-39f0ea18> light;</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>}</span></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>/**</span></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18> * 生成一个 2x2 的纯白色 canvas 纹理</span></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18> */</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>function</span><span style="color:#50FA7B;" data-v-39f0ea18> generateTexture</span><span style="color:#F8F8F2;" data-v-39f0ea18>() {</span></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 创建一个 canvas 元素，并设置它的宽高为 2</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>  const</span><span style="color:#F8F8F2;" data-v-39f0ea18> canvas </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#F8F8F2;" data-v-39f0ea18> document.</span><span style="color:#50FA7B;" data-v-39f0ea18>createElement</span><span style="color:#F8F8F2;" data-v-39f0ea18>( </span><span style="color:#E9F284;" data-v-39f0ea18>&#39;</span><span style="color:#F1FA8C;" data-v-39f0ea18>canvas</span><span style="color:#E9F284;" data-v-39f0ea18>&#39;</span><span style="color:#F8F8F2;" data-v-39f0ea18> );</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  canvas.width </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#BD93F9;" data-v-39f0ea18> 2</span><span style="color:#F8F8F2;" data-v-39f0ea18>;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  canvas.height </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#BD93F9;" data-v-39f0ea18> 2</span><span style="color:#F8F8F2;" data-v-39f0ea18>;</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 获取 canvas 的绘制上下文，并将其填充为白色</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>  const</span><span style="color:#F8F8F2;" data-v-39f0ea18> context </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#F8F8F2;" data-v-39f0ea18> canvas.</span><span style="color:#50FA7B;" data-v-39f0ea18>getContext</span><span style="color:#F8F8F2;" data-v-39f0ea18>( </span><span style="color:#E9F284;" data-v-39f0ea18>&#39;</span><span style="color:#F1FA8C;" data-v-39f0ea18>2d</span><span style="color:#E9F284;" data-v-39f0ea18>&#39;</span><span style="color:#F8F8F2;" data-v-39f0ea18> );</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  context.fillStyle </span><span style="color:#FF79C6;" data-v-39f0ea18>=</span><span style="color:#E9F284;" data-v-39f0ea18> &#39;</span><span style="color:#F1FA8C;" data-v-39f0ea18>white</span><span style="color:#E9F284;" data-v-39f0ea18>&#39;</span><span style="color:#F8F8F2;" data-v-39f0ea18>;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>  context.</span><span style="color:#50FA7B;" data-v-39f0ea18>fillRect</span><span style="color:#F8F8F2;" data-v-39f0ea18>( </span><span style="color:#BD93F9;" data-v-39f0ea18>0</span><span style="color:#F8F8F2;" data-v-39f0ea18>, </span><span style="color:#BD93F9;" data-v-39f0ea18>1</span><span style="color:#F8F8F2;" data-v-39f0ea18>, </span><span style="color:#BD93F9;" data-v-39f0ea18>2</span><span style="color:#F8F8F2;" data-v-39f0ea18>, </span><span style="color:#BD93F9;" data-v-39f0ea18>1</span><span style="color:#F8F8F2;" data-v-39f0ea18> );</span></span>
<span class="line" data-v-39f0ea18></span>
<span class="line" data-v-39f0ea18><span style="color:#6272A4;" data-v-39f0ea18>  // 返回生成的纹理</span></span>
<span class="line" data-v-39f0ea18><span style="color:#FF79C6;" data-v-39f0ea18>  return</span><span style="color:#F8F8F2;" data-v-39f0ea18> canvas;</span></span>
<span class="line" data-v-39f0ea18><span style="color:#F8F8F2;" data-v-39f0ea18>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-39f0ea18><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div><div class="line-number" data-v-39f0ea18></div></div></div>`,1)),F("div",ya,null,512),t[3]||(t[3]=F("h1",{id:"参考",tabindex:"-1"},[F("a",{class:"header-anchor",href:"#参考"},[F("span",null,"参考")])],-1)),t[4]||(t[4]=F("p",null,[Q("参考："),F("a",{href:"https://threejs.org/",target:"_blank",rel:"noopener noreferrer"},"https://threejs.org/")],-1))])}const wa=U(ca,[["render",ua],["__scopeId","data-v-39f0ea18"],["__file","threejs-light.html.vue"]]),xa=JSON.parse('{"path":"/threejs/threejs-light.html","title":"ThreeJS中的灯光","lang":"en-US","frontmatter":{"title":"ThreeJS中的灯光","category":["ThreeJS"],"date":"2022-03-07T00:00:00.000Z","description":"参考 参考：https://threejs.org/","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/threejs/threejs-light.html"}],["meta",{"property":"og:title","content":"ThreeJS中的灯光"}],["meta",{"property":"og:description","content":"参考 参考：https://threejs.org/"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-10T14:15:12.000Z"}],["meta",{"property":"article:published_time","content":"2022-03-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-10T14:15:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ThreeJS中的灯光\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-07T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-10T14:15:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[],"git":{"createdTime":1682066702000,"updatedTime":1731248112000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":6},{"name":"卢祥","email":"example@qq.com","commits":2}]},"readingTime":{"minutes":5.53,"words":1658},"filePathRelative":"threejs/threejs-light.md","localizedDate":"March 7, 2022","excerpt":"<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"background-color:#282A36;color:#F8F8F2\\"><pre class=\\"shiki dracula vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#6272A4\\">//遍历场景中的所有对象，然后判断当前对象是否是光源对象</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">function</span><span style=\\"color:#50FA7B\\"> toggleLights</span><span style=\\"color:#F8F8F2\\">( </span><span style=\\"color:#FFB86C;font-style:italic\\">visible</span><span style=\\"color:#F8F8F2\\"> ) {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\"> scene.</span><span style=\\"color:#50FA7B\\">traverse</span><span style=\\"color:#F8F8F2\\">( </span><span style=\\"color:#FF79C6\\">function</span><span style=\\"color:#F8F8F2\\"> ( </span><span style=\\"color:#FFB86C;font-style:italic\\">object</span><span style=\\"color:#F8F8F2\\"> ) {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">  if</span><span style=\\"color:#F8F8F2\\"> ( object.isLight ) {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">   object.visible </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> visible;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\"> } );</span></span>\\n<span class=\\"line\\"><span style=\\"color:#50FA7B\\"> render</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{wa as comp,xa as data};
