import{l as M,J as R,A as w,o as H,q as j,p as _,h as D,m as k,W as L,z as q,r as S}from"./three.module-BzA_QsZm.js";import{O as b}from"./OrbitControls-DTSS7XTZ.js";import{_ as P,h as F,i as c,c as O,b as y,d as N,o as J}from"./app-BupRR3ON.js";const V="/blog/assets/color-kaj-FADn.jpg",W="/blog/assets/alpha-BVV1PVvO.jpg",z="/blog/assets/ambientOcclusion-Cpn-KbSr.jpg",Z="/blog/assets/height-Bed5fDer.jpg",G="/blog/assets/roughness-BvXaFbLD.jpg",U="/blog/assets/metalness-Z1AicQxD.jpg",K="/blog/assets/normal-TQKT5D1r.jpg",$="/blog/assets/857005209041712323-CAWMAwfM.png",I={__name:"threejs-texture.html",setup(u,{expose:s}){s();const t=F(),o=()=>{const n=new M,e=new R,m=e.load("./assets/textures/door/color.jpg"),g=e.load("./assets/textures/door/alpha.jpg"),h=e.load("./assets/textures/door/ambientOcclusion.jpg"),E=e.load("./assets/textures/door/height.jpg"),f=e.load("./assets/textures/door/roughness.jpg"),T=e.load("./assets/textures/door/metalness.jpg"),C=e.load("./assets/textures/door/normal.jpg"),x=new w({color:"#ffff00",map:m,alphaMap:g,transparent:!0,aoMap:h,aoMapIntensity:1,displacementMap:E,displacementScale:.1,roughness:1,roughnessMap:f,metalness:1,metalnessMap:T,normalMap:C,side:H}),d=new j(1,1),A=new _(d,x);n.add(A),d.setAttribute("uv2",new D(d.attributes.uv.array,2));const l=new k(75,2,.1,10);l.position.set(0,0,1),n.add(l);const a=new L;a.setPixelRatio(window.devicePixelRatio),window.addEventListener("resize",B),a.setSize(t.value.offsetWidth,t.value.offsetWidth/2);const r=new b(l,a.domElement);r.enableDamping=!0,t.value.appendChild(a.domElement),a.render(n,l);const v=new q(16777215,.5);v.position.set(0,0,10),n.add(v);function i(Y){r.update(),a.render(n,l),requestAnimationFrame(i)}function B(){a.setPixelRatio(window.devicePixelRatio),a.setSize(helloCube.value.offsetWidth,helloCube.value.offsetWidth/2)}i()};c(()=>{o()});const p={textureKeyRef:t,initTextureRef:o,ref:F,onMounted:c,get THREE(){return S},get OrbitControls(){return b}};return Object.defineProperty(p,"__isScriptSetup",{enumerable:!1,value:!0}),p}},Q={ref:"textureKeyRef"};function X(u,s,t,o,p,n){return J(),O("div",null,[s[0]||(s[0]=y(`<h2 id="纹理的使用" tabindex="-1" data-v-89e9b013><a class="header-anchor" href="#纹理的使用" data-v-89e9b013><span data-v-89e9b013>纹理的使用</span></a></h2><ul data-v-89e9b013><li data-v-89e9b013><strong data-v-89e9b013>map</strong>：漫反射纹理，用于指定材质的baseColor，可以是THREE.Texture类型的实例对象。默认值为undefined。</li><li data-v-89e9b013><strong data-v-89e9b013>alphaMap</strong>：透明度纹理，用于指定材质的透明度，可以是THREE.Texture类型的实例对象。默认值为undefined。</li><li data-v-89e9b013><strong data-v-89e9b013>bumpMap</strong>：凹凸贴图，可以再次深化材质的表面，可以是THREE.Texture类型的实例对象。默认值为undefined。</li><li data-v-89e9b013><strong data-v-89e9b013>normalMap</strong>：法线贴图，可以为表面增加微妙的细节，可以是THREE.Texture类型的实例对象。默认值为undefined。</li><li data-v-89e9b013><strong data-v-89e9b013>specularMap</strong>：镜面反射贴图，用于指定材质的specular，可以是THREE.Texture类型的实例对象。默认值为undefined。</li><li data-v-89e9b013><strong data-v-89e9b013>displacementMap</strong>：高度图或位移贴图，用于模拟表面物体位移，可以是THREE.Texture类型的实例对象。默认值为undefined。</li><li data-v-89e9b013><strong data-v-89e9b013>roughnessMap</strong>：粗糙度贴图，可以模拟表面的粗糙程度，可以是THREE.Texture类型的实例对象。默认值为undefined。</li><li data-v-89e9b013><strong data-v-89e9b013>metalnessMap</strong>：金属度贴图，用于指定表面的金属部分，可以是THREE.Texture类型的实例对象。默认值为undefined。</li><li data-v-89e9b013><strong data-v-89e9b013>envMap</strong>：环境贴图，用于模拟环境反射，可以是THREE.Texture类型的实例对象或CubeTexture类型的实例对象。默认值为undefined。</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-89e9b013><pre class="shiki dracula vp-code" data-v-89e9b013><code data-v-89e9b013><span class="line" data-v-89e9b013><span style="color:#FF79C6;" data-v-89e9b013>const</span><span style="color:#F8F8F2;" data-v-89e9b013> loader </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013> new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>TextureLoader</span><span style="color:#F8F8F2;" data-v-89e9b013>();</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013> </span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;" data-v-89e9b013>const</span><span style="color:#F8F8F2;" data-v-89e9b013> material </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013> new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-89e9b013>({</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  color</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#BD93F9;" data-v-89e9b013> 0xFF8844</span><span style="color:#F8F8F2;" data-v-89e9b013>,</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  map</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> loader.</span><span style="color:#50FA7B;" data-v-89e9b013>load</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F1FA8C;" data-v-89e9b013>resources/images/wall.jpg</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F8F8F2;" data-v-89e9b013>),</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-89e9b013><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-89e9b013><pre class="shiki dracula vp-code" data-v-89e9b013><code data-v-89e9b013><span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>// 创建一个基础材质对象</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;" data-v-89e9b013>const</span><span style="color:#F8F8F2;" data-v-89e9b013> basicMaterial </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013> new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-89e9b013>({</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 设置材质的颜色为黄色</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  color</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#E9F284;" data-v-89e9b013> &quot;</span><span style="color:#F1FA8C;" data-v-89e9b013>#ffff00</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F8F8F2;" data-v-89e9b013>,</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 设置映射纹理为门的颜色纹理</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  map</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> doorColorTexture,</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 设置门透明度的纹理贴图</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  alphaMap</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> doorAplhaTexture,</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 允许材质的透明度被纹理影响</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  transparent</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#BD93F9;" data-v-89e9b013> true</span><span style="color:#F8F8F2;" data-v-89e9b013>,</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 设置环境遮挡纹理为门的AO纹理</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  aoMap</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> doorAoTexture,</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 设置AO纹理影响的强度系数</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  aoMapIntensity</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#BD93F9;" data-v-89e9b013> 1</span><span style="color:#F8F8F2;" data-v-89e9b013>,</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 设置门的高度贴图纹理用于使门产生凸起效果</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  displacementMap</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> doorHeightTexture,</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 设置凸起效果的缩放系数，值越高凸起越明显</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  displacementScale</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#BD93F9;" data-v-89e9b013> 0.1</span><span style="color:#F8F8F2;" data-v-89e9b013>,</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 设置材质的粗糙度为1</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  roughness</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#BD93F9;" data-v-89e9b013> 1</span><span style="color:#F8F8F2;" data-v-89e9b013>,</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 设置粗糙度对应的纹理贴图</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  roughnessMap</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> roughnessTexture,</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 设置金属度为1</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  metalness</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#BD93F9;" data-v-89e9b013> 1</span><span style="color:#F8F8F2;" data-v-89e9b013>,</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 设置金属度对应的纹理贴图</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  metalnessMap</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> metalnessTexture,</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 设置法线贴图用于制作凹凸效果</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  normalMap</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> normalTexture,</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 设置材质的透明度，可以通过alphaMap实现这一效果</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // opacity: 0.3,</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>  // 设置材质的两侧都能被渲染</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  side</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.DoubleSide,</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>});</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>/*</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>在 Three.js 中，当我们需要对平面几何体进行细分（Subdivision）或进行 Parallax Mapping（视差贴图）时，为了维持高质量的视觉效果，会用到 uv2 属性。</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>将 uv 属性的值复制给 uv2 属性，就能够在平面几何体进行细分或者 Parallax Mapping 操作时，避免贴图失真产生的模糊或锯齿效果。</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>这种做法的原理是：在进行细分或 Parallax Mapping 时，需要利用旧的UV映射坐标计算新的UV映射坐标，而复制了一遍的 uv2 属性就可以提供旧的UV映射坐标了。</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>*/</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>planeGeometry.</span><span style="color:#50FA7B;" data-v-89e9b013>setAttribute</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span></span>
<span class="line" data-v-89e9b013><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F1FA8C;" data-v-89e9b013>uv2</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F8F8F2;" data-v-89e9b013>,</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013>new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>BufferAttribute</span><span style="color:#F8F8F2;" data-v-89e9b013>(planeGeometry.attributes.uv.array, </span><span style="color:#BD93F9;" data-v-89e9b013>2</span><span style="color:#F8F8F2;" data-v-89e9b013>)</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-89e9b013><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div></div></div>`,4)),N("div",Q,null,512),s[1]||(s[1]=y('<div class="texture-imgs" data-v-89e9b013><div class="img" data-v-89e9b013> doorColorTexture <img src="'+V+'" data-v-89e9b013></div><div class="img" data-v-89e9b013> doorAplhaTexture <img src="'+W+'" data-v-89e9b013></div><div class="img" data-v-89e9b013> doorAoTexture <img src="'+z+'" data-v-89e9b013></div><div class="img" data-v-89e9b013> doorHeightTexture <img src="'+Z+'" data-v-89e9b013></div><div class="img" data-v-89e9b013> roughnessTexture <img src="'+G+'" data-v-89e9b013></div><div class="img" data-v-89e9b013> metalnessTexture <img src="'+U+'" data-v-89e9b013></div><div class="img" data-v-89e9b013> normalTexture <img src="'+K+`" data-v-89e9b013></div></div><h2 id="纹理的加载" tabindex="-1" data-v-89e9b013><a class="header-anchor" href="#纹理的加载" data-v-89e9b013><span data-v-89e9b013>纹理的加载</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-89e9b013><pre class="shiki dracula vp-code" data-v-89e9b013><code data-v-89e9b013><span class="line" data-v-89e9b013><span style="color:#FF79C6;" data-v-89e9b013>const</span><span style="color:#F8F8F2;" data-v-89e9b013> loader </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013> new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>TextureLoader</span><span style="color:#F8F8F2;" data-v-89e9b013>();</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>// 1</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;" data-v-89e9b013>const</span><span style="color:#F8F8F2;" data-v-89e9b013> texture </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#F8F8F2;" data-v-89e9b013> loader.</span><span style="color:#50FA7B;" data-v-89e9b013>load</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F1FA8C;" data-v-89e9b013>resources/images/flower-1.jpg</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F8F8F2;" data-v-89e9b013>);</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>// 2</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>loader.</span><span style="color:#50FA7B;" data-v-89e9b013>load</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F1FA8C;" data-v-89e9b013>resources/images/wall.jpg</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F8F8F2;" data-v-89e9b013>, (</span><span style="color:#FFB86C;font-style:italic;" data-v-89e9b013>texture</span><span style="color:#F8F8F2;" data-v-89e9b013>) </span><span style="color:#FF79C6;" data-v-89e9b013>=&gt;</span><span style="color:#F8F8F2;" data-v-89e9b013> {</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;" data-v-89e9b013>  const</span><span style="color:#F8F8F2;" data-v-89e9b013> material </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013> new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-89e9b013>({</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>    map</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> texture,</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  });</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;" data-v-89e9b013>  const</span><span style="color:#F8F8F2;" data-v-89e9b013> cube </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013> new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>Mesh</span><span style="color:#F8F8F2;" data-v-89e9b013>(geometry, material);</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  scene.</span><span style="color:#50FA7B;" data-v-89e9b013>add</span><span style="color:#F8F8F2;" data-v-89e9b013>(cube);</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  cubes.</span><span style="color:#50FA7B;" data-v-89e9b013>push</span><span style="color:#F8F8F2;" data-v-89e9b013>(cube);  </span><span style="color:#6272A4;" data-v-89e9b013>// 添加到我们要旋转的立方体数组中</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-89e9b013><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div></div></div><h3 id="多个纹理的加载-loadingmanager" tabindex="-1" data-v-89e9b013><a class="header-anchor" href="#多个纹理的加载-loadingmanager" data-v-89e9b013><span data-v-89e9b013>多个纹理的加载(LoadingManager)</span></a></h3><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-89e9b013><pre class="shiki dracula vp-code" data-v-89e9b013><code data-v-89e9b013><span class="line" data-v-89e9b013><span style="color:#FF79C6;" data-v-89e9b013>const</span><span style="color:#F8F8F2;" data-v-89e9b013> loadManager </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013> new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>LoadingManager</span><span style="color:#F8F8F2;" data-v-89e9b013>();</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;" data-v-89e9b013>const</span><span style="color:#F8F8F2;" data-v-89e9b013> loader </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013> new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>TextureLoader</span><span style="color:#F8F8F2;" data-v-89e9b013>(loadManager);</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013> </span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;" data-v-89e9b013>const</span><span style="color:#F8F8F2;" data-v-89e9b013> materials </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#F8F8F2;" data-v-89e9b013> [</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013>  new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-89e9b013>({map</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> loader.</span><span style="color:#50FA7B;" data-v-89e9b013>load</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F1FA8C;" data-v-89e9b013>resources/images/flower-1.jpg</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F8F8F2;" data-v-89e9b013>)}),</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013>  new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-89e9b013>({map</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> loader.</span><span style="color:#50FA7B;" data-v-89e9b013>load</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F1FA8C;" data-v-89e9b013>resources/images/flower-2.jpg</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F8F8F2;" data-v-89e9b013>)}),</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013>  new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-89e9b013>({map</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> loader.</span><span style="color:#50FA7B;" data-v-89e9b013>load</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F1FA8C;" data-v-89e9b013>resources/images/flower-3.jpg</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F8F8F2;" data-v-89e9b013>)}),</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013>  new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-89e9b013>({map</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> loader.</span><span style="color:#50FA7B;" data-v-89e9b013>load</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F1FA8C;" data-v-89e9b013>resources/images/flower-4.jpg</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F8F8F2;" data-v-89e9b013>)}),</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013>  new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-89e9b013>({map</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> loader.</span><span style="color:#50FA7B;" data-v-89e9b013>load</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F1FA8C;" data-v-89e9b013>resources/images/flower-5.jpg</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F8F8F2;" data-v-89e9b013>)}),</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013>  new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-89e9b013>({map</span><span style="color:#FF79C6;" data-v-89e9b013>:</span><span style="color:#F8F8F2;" data-v-89e9b013> loader.</span><span style="color:#50FA7B;" data-v-89e9b013>load</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F1FA8C;" data-v-89e9b013>resources/images/flower-6.jpg</span><span style="color:#E9F284;" data-v-89e9b013>&#39;</span><span style="color:#F8F8F2;" data-v-89e9b013>)}),</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>];</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013> </span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>loadManager.</span><span style="color:#50FA7B;" data-v-89e9b013>onLoad</span><span style="color:#FF79C6;" data-v-89e9b013> =</span><span style="color:#F8F8F2;" data-v-89e9b013> () </span><span style="color:#FF79C6;" data-v-89e9b013>=&gt;</span><span style="color:#F8F8F2;" data-v-89e9b013> {</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;" data-v-89e9b013>  const</span><span style="color:#F8F8F2;" data-v-89e9b013> cube </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013> new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>Mesh</span><span style="color:#F8F8F2;" data-v-89e9b013>(geometry, materials);</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  scene.</span><span style="color:#50FA7B;" data-v-89e9b013>add</span><span style="color:#F8F8F2;" data-v-89e9b013>(cube);</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  cubes.</span><span style="color:#50FA7B;" data-v-89e9b013>push</span><span style="color:#F8F8F2;" data-v-89e9b013>(cube);  </span><span style="color:#6272A4;" data-v-89e9b013>// 添加到我们要旋转的立方体数组中</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-89e9b013><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div></div></div><h3 id="设置纹理加载进度" tabindex="-1" data-v-89e9b013><a class="header-anchor" href="#设置纹理加载进度" data-v-89e9b013><span data-v-89e9b013>设置纹理加载进度</span></a></h3><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-89e9b013><pre class="shiki dracula vp-code" data-v-89e9b013><code data-v-89e9b013><span class="line" data-v-89e9b013><span style="color:#FF79C6;" data-v-89e9b013>let</span><span style="color:#F8F8F2;" data-v-89e9b013> event </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#F8F8F2;" data-v-89e9b013> {};</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>event.</span><span style="color:#50FA7B;" data-v-89e9b013>onLoad</span><span style="color:#FF79C6;" data-v-89e9b013> =</span><span style="color:#FF79C6;" data-v-89e9b013> function</span><span style="color:#F8F8F2;" data-v-89e9b013> () {</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  console.</span><span style="color:#50FA7B;" data-v-89e9b013>log</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F1FA8C;" data-v-89e9b013>图片加载完成</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F8F8F2;" data-v-89e9b013>);</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>};</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>event.</span><span style="color:#50FA7B;" data-v-89e9b013>onProgress</span><span style="color:#FF79C6;" data-v-89e9b013> =</span><span style="color:#FF79C6;" data-v-89e9b013> function</span><span style="color:#F8F8F2;" data-v-89e9b013> (</span><span style="color:#FFB86C;font-style:italic;" data-v-89e9b013>url</span><span style="color:#F8F8F2;" data-v-89e9b013>, </span><span style="color:#FFB86C;font-style:italic;" data-v-89e9b013>num</span><span style="color:#F8F8F2;" data-v-89e9b013>, </span><span style="color:#FFB86C;font-style:italic;" data-v-89e9b013>total</span><span style="color:#F8F8F2;" data-v-89e9b013>) {</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  console.</span><span style="color:#50FA7B;" data-v-89e9b013>log</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F1FA8C;" data-v-89e9b013>图片加载完成:</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F8F8F2;" data-v-89e9b013>, url);</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  console.</span><span style="color:#50FA7B;" data-v-89e9b013>log</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F1FA8C;" data-v-89e9b013>图片加载进度:</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F8F8F2;" data-v-89e9b013>, num);</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  console.</span><span style="color:#50FA7B;" data-v-89e9b013>log</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F1FA8C;" data-v-89e9b013>图片总数:</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F8F8F2;" data-v-89e9b013>, total);</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;" data-v-89e9b013>  let</span><span style="color:#F8F8F2;" data-v-89e9b013> value </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#F8F8F2;" data-v-89e9b013> ((num </span><span style="color:#FF79C6;" data-v-89e9b013>/</span><span style="color:#F8F8F2;" data-v-89e9b013> total) </span><span style="color:#FF79C6;" data-v-89e9b013>*</span><span style="color:#BD93F9;" data-v-89e9b013> 100</span><span style="color:#F8F8F2;" data-v-89e9b013>).</span><span style="color:#50FA7B;" data-v-89e9b013>toFixed</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#BD93F9;" data-v-89e9b013>2</span><span style="color:#F8F8F2;" data-v-89e9b013>) </span><span style="color:#FF79C6;" data-v-89e9b013>+</span><span style="color:#E9F284;" data-v-89e9b013> &quot;</span><span style="color:#F1FA8C;" data-v-89e9b013>%</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F8F8F2;" data-v-89e9b013>;</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  console.</span><span style="color:#50FA7B;" data-v-89e9b013>log</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F1FA8C;" data-v-89e9b013>加载进度的百分比：</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F8F8F2;" data-v-89e9b013>, value);</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  div.innerHTML </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#F8F8F2;" data-v-89e9b013> value;</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>};</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>event.</span><span style="color:#50FA7B;" data-v-89e9b013>onError</span><span style="color:#FF79C6;" data-v-89e9b013> =</span><span style="color:#FF79C6;" data-v-89e9b013> function</span><span style="color:#F8F8F2;" data-v-89e9b013> (</span><span style="color:#FFB86C;font-style:italic;" data-v-89e9b013>e</span><span style="color:#F8F8F2;" data-v-89e9b013>) {</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  console.</span><span style="color:#50FA7B;" data-v-89e9b013>log</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F1FA8C;" data-v-89e9b013>图片加载出现错误</span><span style="color:#E9F284;" data-v-89e9b013>&quot;</span><span style="color:#F8F8F2;" data-v-89e9b013>);</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  console.</span><span style="color:#50FA7B;" data-v-89e9b013>log</span><span style="color:#F8F8F2;" data-v-89e9b013>(e);</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>};</span></span>
<span class="line" data-v-89e9b013><span style="color:#6272A4;" data-v-89e9b013>// 设置加载管理器</span></span>
<span class="line" data-v-89e9b013><span style="color:#FF79C6;" data-v-89e9b013>const</span><span style="color:#F8F8F2;" data-v-89e9b013> loadingManager </span><span style="color:#FF79C6;" data-v-89e9b013>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-89e9b013> new</span><span style="color:#BD93F9;" data-v-89e9b013> THREE</span><span style="color:#F8F8F2;" data-v-89e9b013>.</span><span style="color:#50FA7B;" data-v-89e9b013>LoadingManager</span><span style="color:#F8F8F2;" data-v-89e9b013>(</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  event.onLoad,</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  event.onProgress,</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>  event.onError</span></span>
<span class="line" data-v-89e9b013><span style="color:#F8F8F2;" data-v-89e9b013>);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-89e9b013><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div><div class="line-number" data-v-89e9b013></div></div></div><h2 id="filtering过滤" tabindex="-1" data-v-89e9b013><a class="header-anchor" href="#filtering过滤" data-v-89e9b013><span data-v-89e9b013>filtering过滤</span></a></h2><h3 id="mips" tabindex="-1" data-v-89e9b013><a class="header-anchor" href="#mips" data-v-89e9b013><span data-v-89e9b013>mips</span></a></h3><p data-v-89e9b013>Mips 是纹理的副本，每一个都是前一个 mip 的一半宽和一半高，其中的像素已经被混合以制作下一个较小的 mip。Mips一直被创建，直到我们得到1x1像素的Mip。对于上面的图片，所有的Mip最终会变成这样的样子</p><figure data-v-89e9b013><img src="`+$+'" alt="" tabindex="0" loading="lazy" data-v-89e9b013><figcaption data-v-89e9b013></figcaption></figure><p data-v-89e9b013>当立方体被画得很小，只有1或2个像素大时，GPU可以选择只用最小或次小级别的mip来决定让小立方体变成什么颜色。</p><h3 id="magfilter" tabindex="-1" data-v-89e9b013><a class="header-anchor" href="#magfilter" data-v-89e9b013><span data-v-89e9b013>magFilter</span></a></h3><p data-v-89e9b013>当一个纹素覆盖大于一个像素时，贴图将如何采样。</p><ul data-v-89e9b013><li data-v-89e9b013>默认值为THREE.LinearFilter， 指从纹理中选择离我们应该选择颜色的地方最近的4个像素，并根据实际点与4个像素的距离，以适当的比例进行混合。</li><li data-v-89e9b013>另一个选项是THREE.NearestFilter，只需从原始纹理中选取最接近的一个像素。</li></ul><h3 id="minfilter" tabindex="-1" data-v-89e9b013><a class="header-anchor" href="#minfilter" data-v-89e9b013><span data-v-89e9b013>minFilter</span></a></h3><p data-v-89e9b013>当一个纹素覆盖小于一个像素时，贴图将如何采样。默认值为THREE.LinearMipmapLinearFilter， 它将使用mipmapping以及三次线性滤镜。</p><ul data-v-89e9b013><li data-v-89e9b013><p data-v-89e9b013><code data-v-89e9b013>THREE.NearestFilter</code>在纹理中选择最近的像素。</p></li><li data-v-89e9b013><p data-v-89e9b013><code data-v-89e9b013>THREE.LinearFilter</code>从纹理中选择4个像素，然后混合它们</p></li><li data-v-89e9b013><p data-v-89e9b013><code data-v-89e9b013>THREE.NearestMipmapNearestFilter</code>选择合适的mip，然后选择一个像素。</p></li><li data-v-89e9b013><p data-v-89e9b013><code data-v-89e9b013>THREE.NearestMipmapLinearFilter</code>选择2个mips，从每个mips中选择一个像素，混合这2个像素。</p></li><li data-v-89e9b013><p data-v-89e9b013><code data-v-89e9b013>THREE.LinearMipmapNearestFilter</code>选择合适的mip，然后选择4个像素并将它们混合。</p></li><li data-v-89e9b013><p data-v-89e9b013><code data-v-89e9b013>THREE.LinearMipmapLinearFilter</code>选择2个mips，从每个mips中选择4个像素，然后将所有8个像素混合成1个像素。</p></li></ul><h1 id="参考" tabindex="-1" data-v-89e9b013><a class="header-anchor" href="#参考" data-v-89e9b013><span data-v-89e9b013>参考</span></a></h1><p data-v-89e9b013>参考：<a href="https://threejs.org/" target="_blank" rel="noopener noreferrer" data-v-89e9b013>https://threejs.org/</a></p>',20))])}const na=P(I,[["render",X],["__scopeId","data-v-89e9b013"],["__file","threejs-texture.html.vue"]]),ta=JSON.parse('{"path":"/threejs/threejs-texture.html","title":"ThreeJS中的纹理","lang":"en-US","frontmatter":{"title":"ThreeJS中的纹理","date":"2022-01-18T00:00:00.000Z","category":["ThreeJS"],"description":"纹理的使用 map：漫反射纹理，用于指定材质的baseColor，可以是THREE.Texture类型的实例对象。默认值为undefined。 alphaMap：透明度纹理，用于指定材质的透明度，可以是THREE.Texture类型的实例对象。默认值为undefined。 bumpMap：凹凸贴图，可以再次深化材质的表面，可以是THREE.Textur...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/threejs/threejs-texture.html"}],["meta",{"property":"og:title","content":"ThreeJS中的纹理"}],["meta",{"property":"og:description","content":"纹理的使用 map：漫反射纹理，用于指定材质的baseColor，可以是THREE.Texture类型的实例对象。默认值为undefined。 alphaMap：透明度纹理，用于指定材质的透明度，可以是THREE.Texture类型的实例对象。默认值为undefined。 bumpMap：凹凸贴图，可以再次深化材质的表面，可以是THREE.Textur..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-10T14:15:12.000Z"}],["meta",{"property":"article:published_time","content":"2022-01-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-10T14:15:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ThreeJS中的纹理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-10T14:15:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"纹理的使用","slug":"纹理的使用","link":"#纹理的使用","children":[]},{"level":2,"title":"纹理的加载","slug":"纹理的加载","link":"#纹理的加载","children":[{"level":3,"title":"多个纹理的加载(LoadingManager)","slug":"多个纹理的加载-loadingmanager","link":"#多个纹理的加载-loadingmanager","children":[]},{"level":3,"title":"设置纹理加载进度","slug":"设置纹理加载进度","link":"#设置纹理加载进度","children":[]}]},{"level":2,"title":"filtering过滤","slug":"filtering过滤","link":"#filtering过滤","children":[{"level":3,"title":"mips","slug":"mips","link":"#mips","children":[]},{"level":3,"title":"magFilter","slug":"magfilter","link":"#magfilter","children":[]},{"level":3,"title":"minFilter","slug":"minfilter","link":"#minfilter","children":[]}]}],"git":{"createdTime":1681465313000,"updatedTime":1731248112000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":11},{"name":"卢祥","email":"example@qq.com","commits":3}]},"readingTime":{"minutes":5.93,"words":1778},"filePathRelative":"threejs/threejs-texture.md","localizedDate":"January 18, 2022","excerpt":"<h2>纹理的使用</h2>\\n<ul>\\n<li><strong>map</strong>：漫反射纹理，用于指定材质的baseColor，可以是THREE.Texture类型的实例对象。默认值为undefined。</li>\\n<li><strong>alphaMap</strong>：透明度纹理，用于指定材质的透明度，可以是THREE.Texture类型的实例对象。默认值为undefined。</li>\\n<li><strong>bumpMap</strong>：凹凸贴图，可以再次深化材质的表面，可以是THREE.Texture类型的实例对象。默认值为undefined。</li>\\n<li><strong>normalMap</strong>：法线贴图，可以为表面增加微妙的细节，可以是THREE.Texture类型的实例对象。默认值为undefined。</li>\\n<li><strong>specularMap</strong>：镜面反射贴图，用于指定材质的specular，可以是THREE.Texture类型的实例对象。默认值为undefined。</li>\\n<li><strong>displacementMap</strong>：高度图或位移贴图，用于模拟表面物体位移，可以是THREE.Texture类型的实例对象。默认值为undefined。</li>\\n<li><strong>roughnessMap</strong>：粗糙度贴图，可以模拟表面的粗糙程度，可以是THREE.Texture类型的实例对象。默认值为undefined。</li>\\n<li><strong>metalnessMap</strong>：金属度贴图，用于指定表面的金属部分，可以是THREE.Texture类型的实例对象。默认值为undefined。</li>\\n<li><strong>envMap</strong>：环境贴图，用于模拟环境反射，可以是THREE.Texture类型的实例对象或CubeTexture类型的实例对象。默认值为undefined。</li>\\n</ul>","autoDesc":true}');export{na as comp,ta as data};
