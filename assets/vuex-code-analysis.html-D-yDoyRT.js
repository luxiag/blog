import{_ as n,c as a,b as l,o as e}from"./app-Ogdo9Bdm.js";const p="/blog/assets/1680123401008144724-BiwneOnV.png",o={};function t(F,s){return e(),a("div",null,s[0]||(s[0]=[l('<figure><img src="'+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><details class="hint-container details"><summary>vuex 使用</summary><p><code>main.js</code></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> Vue </span><span style="color:#FF79C6;">from</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">vue</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> Vuex </span><span style="color:#FF79C6;">from</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">vuex</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Vue.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">(Vuex);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> store </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#F8F8F2;"> Vuex.</span><span style="color:#50FA7B;">store</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  state</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { count</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">  mutations</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">    increment</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.count</span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  actions</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">    increment</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">context</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      context.</span><span style="color:#50FA7B;">commit</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">increment</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#50FA7B;"> Vue</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  store,</span></span>
<span class="line"><span style="color:#6272A4;">  // ...</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="vue-use-安装" tabindex="-1"><a class="header-anchor" href="#vue-use-安装"><span>Vue.use 安装</span></a></h2><details class="hint-container details"><summary>install</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> install</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">_Vue</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (Vue </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> _Vue </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> Vue) {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (__DEV__) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">error</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#E9F284;">        &quot;</span><span style="color:#F1FA8C;">[vuex] already installed. Vue.use(Vuex) should be called only once.</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">      );</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  Vue </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> _Vue;</span></span>
<span class="line"><span style="color:#50FA7B;">  applyMixin</span><span style="color:#F8F8F2;">(Vue);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p><code>applyMixin</code>通过全局 mixin 将$store 混入到所有 vue 组件中</p><details class="hint-container details"><summary>applyMixin</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> default</span><span style="color:#FF79C6;"> function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">Vue</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> version </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> Number</span><span style="color:#F8F8F2;">(Vue.version.</span><span style="color:#50FA7B;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">.</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (version </span><span style="color:#FF79C6;">&gt;=</span><span style="color:#BD93F9;"> 2</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    Vue.</span><span style="color:#50FA7B;">mixin</span><span style="color:#F8F8F2;">({ beforeCreate</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> vuexInit });</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">    // 处理 vue 1.x的代码</span></span>
<span class="line"><span style="color:#6272A4;">    // 。。。</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#6272A4;">  //  this = Vue实例</span></span>
<span class="line"><span style="color:#6272A4;">  // options.store</span></span>
<span class="line"><span style="color:#FF79C6;">  function</span><span style="color:#50FA7B;"> vuexInit</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> options </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.$options;</span></span>
<span class="line"><span style="color:#6272A4;">    // store injection</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (options.store) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.$store </span><span style="color:#FF79C6;">=</span></span>
<span class="line"><span style="color:#FF79C6;">        typeof</span><span style="color:#F8F8F2;"> options.store </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">function</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> ?</span><span style="color:#F8F8F2;"> options.</span><span style="color:#50FA7B;">store</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> options.store;</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#FF79C6;"> if</span><span style="color:#F8F8F2;"> (options.parent </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> options.parent.$store) {</span></span>
<span class="line"><span style="color:#6272A4;">      // 子组件从其父组件引用$store属性，层层嵌套进行设置</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.$store </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> options.parent.$store;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="store-类" tabindex="-1"><a class="header-anchor" href="#store-类"><span>Store 类</span></a></h2><details class="hint-container details"><summary>class Store</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// 定义局部 Vue 变量，用于判断是否已经装载和减少全局作用域查找。</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> Vue; </span><span style="color:#6272A4;">// bind on install</span></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Store</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">  /*</span></span>
<span class="line"><span style="color:#6272A4;">     options =&gt;  new Vuex.store(options)</span></span>
<span class="line"><span style="color:#6272A4;">     {state,getter,mutation,action}</span></span>
<span class="line"><span style="color:#6272A4;">    */</span></span>
<span class="line"><span style="color:#FF79C6;">  constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> {}) {</span></span>
<span class="line"><span style="color:#6272A4;">    // 若处于浏览器环境下且加载过Vue，则执行install方法。</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">Vue </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#FF79C6;"> typeof</span><span style="color:#F8F8F2;"> window </span><span style="color:#FF79C6;">!==</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">undefined</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> &amp;&amp;</span><span style="color:#F8F8F2;"> window.Vue) {</span></span>
<span class="line"><span style="color:#50FA7B;">      install</span><span style="color:#F8F8F2;">(window.Vue);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#6272A4;">    // 用于判断是否 mutation 更改的state</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._committing </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">    //  action操作对象</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._actions </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Object.</span><span style="color:#50FA7B;">create</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">    // 存放 action订阅</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._actionSubscribers </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [];</span></span>
<span class="line"><span style="color:#6272A4;">    // mutations操作对象</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._mutations </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Object.</span><span style="color:#50FA7B;">create</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">    //  getter 操作对象</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._wrappedGetters </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Object.</span><span style="color:#50FA7B;">create</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">    // 存放 modules 构建module树</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._modules </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> ModuleCollection</span><span style="color:#F8F8F2;">(options);</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._modulesNamespaceMap </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Object.</span><span style="color:#50FA7B;">create</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">    // 收集订阅者</span></span>
<span class="line"><span style="color:#6272A4;">    // https://v3.vuex.vuejs.org/zh/api/#watch</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._subscribers </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [];</span></span>
<span class="line"><span style="color:#6272A4;">    // Vue组件用于watch监视变化</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._watcherVM </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> Vue</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._makeLocalGettersCache </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Object.</span><span style="color:#50FA7B;">create</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> store </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> { dispatch, commit } </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">dispatch</span><span style="color:#FF79C6;"> =</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> boundDispatch</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">payload</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#F8F8F2;"> dispatch.</span><span style="color:#50FA7B;">call</span><span style="color:#F8F8F2;">(store, type, payload);</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">commit</span><span style="color:#FF79C6;"> =</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> boundCommit</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">payload</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#F8F8F2;"> commit.</span><span style="color:#50FA7B;">call</span><span style="color:#F8F8F2;">(store, type, payload, options);</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // strict mode</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.strict </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> strict;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 获取 state</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> state </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">._modules.root.state;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 安装 module</span></span>
<span class="line"><span style="color:#50FA7B;">    installModule</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">, state, [], </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">._modules.root);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // initialize the store vm, which is responsible for the reactivity</span></span>
<span class="line"><span style="color:#6272A4;">    // (also registers _wrappedGetters as computed properties)</span></span>
<span class="line"><span style="color:#50FA7B;">    resetStoreVM</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">, state);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // apply plugins</span></span>
<span class="line"><span style="color:#F8F8F2;">    plugins.</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">plugin</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#50FA7B;"> plugin</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> useDevtools </span><span style="color:#FF79C6;">=</span></span>
<span class="line"><span style="color:#F8F8F2;">      options.devtools </span><span style="color:#FF79C6;">!==</span><span style="color:#BD93F9;"> undefined</span><span style="color:#FF79C6;"> ?</span><span style="color:#F8F8F2;"> options.devtools </span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> Vue.config.devtools;</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (useDevtools) {</span></span>
<span class="line"><span style="color:#50FA7B;">      devtoolPlugin</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="dispatch" tabindex="-1"><a class="header-anchor" href="#dispatch"><span>dispatch</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">dispatch</span><span style="color:#FF79C6;"> =</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> boundDispatch</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">payload</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> dispatch.</span><span style="color:#50FA7B;">call</span><span style="color:#F8F8F2;">(store, type, payload);</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#6272A4;">// type action中的方法</span></span>
<span class="line"><span style="color:#6272A4;">// payload 传递给action的参数</span></span>
<span class="line"><span style="color:#F8F8F2;">store.</span><span style="color:#50FA7B;">dispatch</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">increment</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">10</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>dispatch</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"></span>
<span class="line"><span style="color:#50FA7B;">  dispatch</span><span style="color:#F8F8F2;"> (_type, _payload) {</span></span>
<span class="line"><span style="color:#6272A4;">    // check object-style dispatch</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      type,</span></span>
<span class="line"><span style="color:#F8F8F2;">      payload</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> unifyObjectStyle</span><span style="color:#F8F8F2;">(_type, _payload)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> action </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { type, payload }</span></span>
<span class="line"><span style="color:#6272A4;">    // 获取 当前 type下所有action处理函数的集合</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> entry </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">._actions[type]</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._actionSubscribers</span></span>
<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#50FA7B;">filter</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">sub</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> sub.before)</span></span>
<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">sub</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> sub.</span><span style="color:#50FA7B;">before</span><span style="color:#F8F8F2;">(action, </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.state))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> result </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> entry.length </span><span style="color:#FF79C6;">&gt;</span><span style="color:#BD93F9;"> 1</span></span>
<span class="line"><span style="color:#FF79C6;">      ?</span><span style="color:#8BE9FD;font-style:italic;"> Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">all</span><span style="color:#F8F8F2;">(entry.</span><span style="color:#50FA7B;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">handler</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#50FA7B;"> handler</span><span style="color:#F8F8F2;">(payload)))</span></span>
<span class="line"><span style="color:#FF79C6;">      :</span><span style="color:#F8F8F2;"> entry[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">](payload)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#8BE9FD;font-style:italic;"> Promise</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">resolve</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">reject</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      result.</span><span style="color:#50FA7B;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">          this</span><span style="color:#F8F8F2;">._actionSubscribers</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">filter</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">sub</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> sub.after)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">sub</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> sub.</span><span style="color:#50FA7B;">after</span><span style="color:#F8F8F2;">(action, </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.state))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">        resolve</span><span style="color:#F8F8F2;">(res)</span></span>
<span class="line"><span style="color:#F8F8F2;">      })</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="commit" tabindex="-1"><a class="header-anchor" href="#commit"><span>commit</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">commit</span><span style="color:#FF79C6;"> =</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> boundCommit</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">payload</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> commit.</span><span style="color:#50FA7B;">call</span><span style="color:#F8F8F2;">(store, type, payload, options);</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#6272A4;">//  type mutations中的 type</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">store.</span><span style="color:#50FA7B;">commit</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">increment</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>commit</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#50FA7B;">commit</span><span style="color:#F8F8F2;"> (_type, _payload, _options) {</span></span>
<span class="line"><span style="color:#6272A4;">    // check object-style commit</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      type,</span></span>
<span class="line"><span style="color:#F8F8F2;">      payload,</span></span>
<span class="line"><span style="color:#F8F8F2;">      options</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> unifyObjectStyle</span><span style="color:#F8F8F2;">(_type, _payload, _options)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> mutation </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { type, payload }</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> entry </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">._mutations[type]</span></span>
<span class="line"><span style="color:#6272A4;">    // 专用修改state方法，其他修改state方法均是非法修改</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">_withCommit</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      entry.</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> commitIterator</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">handler</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">        handler</span><span style="color:#F8F8F2;">(payload)</span></span>
<span class="line"><span style="color:#F8F8F2;">      })</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#6272A4;">    // 订阅者函数遍历执行，传入当前的mutation对象和当前的state</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._subscribers</span></span>
<span class="line"><span style="color:#F8F8F2;">      .</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">() </span><span style="color:#6272A4;">// shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe</span></span>
<span class="line"><span style="color:#F8F8F2;">      .</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">sub</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#50FA7B;"> sub</span><span style="color:#F8F8F2;">(mutation, </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.state))</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">_withCommit</span><span style="color:#F8F8F2;"> (fn) {</span></span>
<span class="line"><span style="color:#6272A4;">     // 保存之前的提交状态</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> committing </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">._committing</span></span>
<span class="line"><span style="color:#6272A4;">    // 进行本次提交，若不设置为true，直接修改state，strict模式下，Vuex将会产生非法修改state的警告</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._committing </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span></span>
<span class="line"><span style="color:#6272A4;">     // 执行state的修改操作</span></span>
<span class="line"><span style="color:#50FA7B;">    fn</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._committing </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> committing</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="module-安装" tabindex="-1"><a class="header-anchor" href="#module-安装"><span>module 安装</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">._modules </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> ModuleCollection</span><span style="color:#F8F8F2;">(options);</span></span>
<span class="line"><span style="color:#6272A4;">// 获取 state</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> state </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">._modules.root.state;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 安装 module</span></span>
<span class="line"><span style="color:#50FA7B;">installModule</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">, state, [], </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">._modules.root);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">resetStoreVM</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">, state);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> moduleA </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">  state</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> ({ </span><span style="color:#FF79C6;">...</span><span style="color:#F8F8F2;"> }),</span></span>
<span class="line"><span style="color:#F8F8F2;">  mutations</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { </span><span style="color:#FF79C6;">...</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">  actions</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { </span><span style="color:#FF79C6;">...</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">  getters</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { </span><span style="color:#FF79C6;">...</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> moduleB </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">  state</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> ({ </span><span style="color:#FF79C6;">...</span><span style="color:#F8F8F2;"> }),</span></span>
<span class="line"><span style="color:#F8F8F2;">  mutations</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { </span><span style="color:#FF79C6;">...</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">  actions</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { </span><span style="color:#FF79C6;">...</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> store </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#F8F8F2;"> Vuex.</span><span style="color:#50FA7B;">Store</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  modules</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    a</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> moduleA,</span></span>
<span class="line"><span style="color:#F8F8F2;">    b</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> moduleB</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">store.state.a </span><span style="color:#6272A4;">// -&gt; moduleA 的状态</span></span>
<span class="line"><span style="color:#F8F8F2;">store.state.b </span><span style="color:#6272A4;">// -&gt; moduleB 的状态</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>收集模块构造模块树</p><details class="hint-container details"><summary>ModuleCollection</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> default</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> ModuleCollection</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">  // rawRootModule = options</span></span>
<span class="line"><span style="color:#FF79C6;">  constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">rawRootModule</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">    // register root module (Vuex.Store options)</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">register</span><span style="color:#F8F8F2;">([], rawRootModule, </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">  get</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">path</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">    //  this.root 为默认值</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#F8F8F2;"> path.</span><span style="color:#50FA7B;">reduce</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">module</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#8BE9FD;font-style:italic;"> module</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">getChild</span><span style="color:#F8F8F2;">(key);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }, </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.root);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#50FA7B;">  register</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">path</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">rawModule</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">runtime</span><span style="color:#FF79C6;"> =</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> newModule </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> Module</span><span style="color:#F8F8F2;">(rawModule, runtime);</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (path.length </span><span style="color:#FF79C6;">===</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">      // 将root module 赋值给 root</span></span>
<span class="line"><span style="color:#6272A4;">      //  this.root.state = options.state</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.root </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> newModule;</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">      // -1 表示最后一个元素 (不包含最后一个元素)</span></span>
<span class="line"><span style="color:#6272A4;">      // 浅拷贝 path</span></span>
<span class="line"><span style="color:#6272A4;">      // 获取 父module</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> parent </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(path.</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">-</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#6272A4;">      //  将循环注册的子模块 添加到父模块的 _children对象中</span></span>
<span class="line"><span style="color:#F8F8F2;">      parent.</span><span style="color:#50FA7B;">addChild</span><span style="color:#F8F8F2;">(path[path.length </span><span style="color:#FF79C6;">-</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">], newModule);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // register nested modules</span></span>
<span class="line"><span style="color:#6272A4;">    // 注册子模块</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (rawModule.modules) {</span></span>
<span class="line"><span style="color:#50FA7B;">      forEachValue</span><span style="color:#F8F8F2;">(rawModule.modules, (</span><span style="color:#FFB86C;font-style:italic;">rawChildModule</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">register</span><span style="color:#F8F8F2;">(path.</span><span style="color:#50FA7B;">concat</span><span style="color:#F8F8F2;">(key), rawChildModule, runtime);</span></span>
<span class="line"><span style="color:#F8F8F2;">      });</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> default</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Module</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">rawModule</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">runtime</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.runtime </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> runtime;</span></span>
<span class="line"><span style="color:#6272A4;">    // Store some children item</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._children </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Object.</span><span style="color:#50FA7B;">create</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">    // Store the origin module object which passed by programmer</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._rawModule </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> rawModule;</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> rawState </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> rawModule.state;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // Store the origin module&#39;s state</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.state </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> rawState </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">function</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> ?</span><span style="color:#50FA7B;"> rawState</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> rawState) </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> {};</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#50FA7B;">  getChild</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">._children[key];</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#50FA7B;">  addChild</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">module</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._children[key] </span><span style="color:#FF79C6;">=</span><span style="color:#8BE9FD;font-style:italic;"> module</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>module 安装，注册对应的 state,mutations,actions,getters</p><details class="hint-container details"><summary>installModule</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">//</span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> installModule</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">store</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">rootState</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">path</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">module</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">hot</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> isRoot </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> !</span><span style="color:#F8F8F2;">path.length;</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> namespace </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> store._modules.</span><span style="color:#50FA7B;">getNamespace</span><span style="color:#F8F8F2;">(path);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // register in namespace map</span></span>
<span class="line"><span style="color:#6272A4;">  // 注册命名空间</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (</span><span style="color:#8BE9FD;font-style:italic;">module</span><span style="color:#F8F8F2;">.namespaced) {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (store._modulesNamespaceMap[namespace] </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> __DEV__) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">error</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F1FA8C;">        \`[vuex] duplicate namespace </span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">namespace</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;"> for the namespaced module </span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">path.</span><span style="color:#50FA7B;">join</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#E9F284;">          &quot;</span><span style="color:#F1FA8C;">/</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">        )</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">\`</span></span>
<span class="line"><span style="color:#F8F8F2;">      );</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    store._modulesNamespaceMap[namespace] </span><span style="color:#FF79C6;">=</span><span style="color:#8BE9FD;font-style:italic;"> module</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // set state</span></span>
<span class="line"><span style="color:#6272A4;">  // 不是跟主机设置 state方法</span></span>
<span class="line"><span style="color:#6272A4;">  // this.$store.a.state.stateA</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">isRoot </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#FF79C6;"> !</span><span style="color:#F8F8F2;">hot) {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> parentState </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> getNestedState</span><span style="color:#F8F8F2;">(rootState, path.</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">-</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> moduleName </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> path[path.length </span><span style="color:#FF79C6;">-</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">    store.</span><span style="color:#50FA7B;">_withCommit</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      Vue.</span><span style="color:#50FA7B;">set</span><span style="color:#F8F8F2;">(parentState, moduleName, </span><span style="color:#8BE9FD;font-style:italic;">module</span><span style="color:#F8F8F2;">.state);</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> local </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#8BE9FD;font-style:italic;">module</span><span style="color:#F8F8F2;">.context </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> makeLocalContext</span><span style="color:#F8F8F2;">(store, namespace, path));</span></span>
<span class="line"><span style="color:#6272A4;">  // 注册对应模块的mutation，供state修改使用</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">  module</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">forEachMutation</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">mutation</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> namespacedType </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> namespace </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> key;</span></span>
<span class="line"><span style="color:#50FA7B;">    registerMutation</span><span style="color:#F8F8F2;">(store, namespacedType, mutation, local);</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#6272A4;">  //</span></span>
<span class="line"><span style="color:#FF79C6;">  function</span><span style="color:#50FA7B;"> registerMutation</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">store</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">handler</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">local</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> entry </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> store._mutations[type] </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> (store._mutations[type] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> []);</span></span>
<span class="line"><span style="color:#F8F8F2;">    entry.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> wrappedMutationHandler</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">payload</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      handler.</span><span style="color:#50FA7B;">call</span><span style="color:#F8F8F2;">(store, local.state, payload);</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#6272A4;">  // 注册对应模块的action，供数据操作、提交mutation等异步操作使用</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">  module</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">forEachAction</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">action</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> type </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> action.root </span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> key </span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> namespace </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> key;</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> handler </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> action.handler </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> action;</span></span>
<span class="line"><span style="color:#50FA7B;">    registerAction</span><span style="color:#F8F8F2;">(store, type, handler, local);</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">  function</span><span style="color:#50FA7B;"> registerAction</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">store</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">handler</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">local</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> entry </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> store._actions[type] </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> (store._actions[type] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> []);</span></span>
<span class="line"><span style="color:#F8F8F2;">    entry.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> wrappedActionHandler</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">payload</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      let</span><span style="color:#F8F8F2;"> res </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> handler.</span><span style="color:#50FA7B;">call</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">        store,</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">          dispatch</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> local.dispatch,</span></span>
<span class="line"><span style="color:#F8F8F2;">          commit</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> local.commit,</span></span>
<span class="line"><span style="color:#F8F8F2;">          getters</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> local.getters,</span></span>
<span class="line"><span style="color:#F8F8F2;">          state</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> local.state,</span></span>
<span class="line"><span style="color:#F8F8F2;">          rootGetters</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> store.getters,</span></span>
<span class="line"><span style="color:#F8F8F2;">          rootState</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> store.state,</span></span>
<span class="line"><span style="color:#F8F8F2;">        },</span></span>
<span class="line"><span style="color:#F8F8F2;">        payload</span></span>
<span class="line"><span style="color:#F8F8F2;">      );</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#50FA7B;">isPromise</span><span style="color:#F8F8F2;">(res)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        res </span><span style="color:#FF79C6;">=</span><span style="color:#8BE9FD;font-style:italic;"> Promise</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">resolve</span><span style="color:#F8F8F2;">(res);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (store._devtoolHook) {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;"> res.</span><span style="color:#50FA7B;">catch</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">err</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          store._devtoolHook.</span><span style="color:#50FA7B;">emit</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">vuex:error</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, err);</span></span>
<span class="line"><span style="color:#FF79C6;">          throw</span><span style="color:#F8F8F2;"> err;</span></span>
<span class="line"><span style="color:#F8F8F2;">        });</span></span>
<span class="line"><span style="color:#F8F8F2;">      } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;"> res;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#6272A4;">  // 注册对应模块的getters，供state读取使用</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">  module</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">forEachGetter</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">getter</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> namespacedType </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> namespace </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> key;</span></span>
<span class="line"><span style="color:#50FA7B;">    registerGetter</span><span style="color:#F8F8F2;">(store, namespacedType, getter, local);</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#FF79C6;">  function</span><span style="color:#50FA7B;"> registerGetter</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">store</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">type</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">rawGetter</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">local</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (store._wrappedGetters[type]) {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    store._wrappedGetters[type] </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> wrappedGetter</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">store</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#50FA7B;"> rawGetter</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">        local.state, </span><span style="color:#6272A4;">// local state</span></span>
<span class="line"><span style="color:#F8F8F2;">        local.getters, </span><span style="color:#6272A4;">// local getters</span></span>
<span class="line"><span style="color:#F8F8F2;">        store.state, </span><span style="color:#6272A4;">// root state</span></span>
<span class="line"><span style="color:#F8F8F2;">        store.getters </span><span style="color:#6272A4;">// root getters</span></span>
<span class="line"><span style="color:#F8F8F2;">      );</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#6272A4;">  // 遍历子module 安装</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">  module</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">forEachChild</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">child</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">    installModule</span><span style="color:#F8F8F2;">(store, rootState, path.</span><span style="color:#50FA7B;">concat</span><span style="color:#F8F8F2;">(key), child, hot);</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>store 组件初始化</p><details class="hint-container details"><summary>resetStoreVM</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> resetStoreVM</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">store</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">hot</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> oldVm </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> store._vm;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // bind store public getters</span></span>
<span class="line"><span style="color:#F8F8F2;">  store.getters </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {};</span></span>
<span class="line"><span style="color:#6272A4;">  // reset local getters cache</span></span>
<span class="line"><span style="color:#F8F8F2;">  store._makeLocalGettersCache </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Object.</span><span style="color:#50FA7B;">create</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> wrappedGetters </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> store._wrappedGetters;</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> computed </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {};</span></span>
<span class="line"><span style="color:#6272A4;">  // 选好遍历所有getter</span></span>
<span class="line"><span style="color:#50FA7B;">  forEachValue</span><span style="color:#F8F8F2;">(wrappedGetters, (</span><span style="color:#FFB86C;font-style:italic;">fn</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    computed[key] </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> partial</span><span style="color:#F8F8F2;">(fn, store);</span></span>
<span class="line"><span style="color:#F8F8F2;">    Object.</span><span style="color:#50FA7B;">defineProperty</span><span style="color:#F8F8F2;">(store.getters, key, {</span></span>
<span class="line"><span style="color:#6272A4;">      // this.$store.getters.xxxgetters 能够访问</span></span>
<span class="line"><span style="color:#50FA7B;">      get</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> store._vm[key],</span></span>
<span class="line"><span style="color:#6272A4;">      //</span></span>
<span class="line"><span style="color:#F8F8F2;">      enumerable</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">, </span><span style="color:#6272A4;">// for local getters</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // use a Vue instance to store the state tree</span></span>
<span class="line"><span style="color:#6272A4;">  // suppress warnings just in case the user has added</span></span>
<span class="line"><span style="color:#6272A4;">  // some funky global mixins</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> silent </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Vue.config.silent;</span></span>
<span class="line"><span style="color:#F8F8F2;">  Vue.config.silent </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">  // 设置新的storeVm，将当前初始化的state以及getters作为computed属性（刚刚遍历生成的）</span></span>
<span class="line"><span style="color:#6272A4;">  // Vuex其实构建的就是一个名为store的vm组件</span></span>
<span class="line"><span style="color:#F8F8F2;">  store._vm </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> Vue</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">    data</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      $$state</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> state,</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">    computed,</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#F8F8F2;">  Vue.config.silent </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> silent;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // enable strict mode for new vm</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (store.strict) {</span></span>
<span class="line"><span style="color:#6272A4;">    // 该方法对state执行$watch以禁止从mutation外部修改state</span></span>
<span class="line"><span style="color:#50FA7B;">    enableStrictMode</span><span style="color:#F8F8F2;">(store);</span></span>
<span class="line"><span style="color:#FF79C6;">    function</span><span style="color:#50FA7B;"> enableStrictMode</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">store</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      store._vm.</span><span style="color:#50FA7B;">$watch</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#E9F284;">        &quot;</span><span style="color:#F1FA8C;">state</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">          assert</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">            store._committing,</span></span>
<span class="line"><span style="color:#F1FA8C;">            \`Do not mutate vuex store state outside mutation handlers.\`</span></span>
<span class="line"><span style="color:#F8F8F2;">          );</span></span>
<span class="line"><span style="color:#F8F8F2;">        },</span></span>
<span class="line"><span style="color:#F8F8F2;">        { deep</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">, sync</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">      );</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 若不是初始化过程执行的该方法，将旧的组件state设置为null，强制更新所有监听者(watchers)，待更新生效，DOM更新完成后，执行vm组件的destroy方法进行销毁，减少内存的占用</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (oldVm) {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (hot) {</span></span>
<span class="line"><span style="color:#6272A4;">      // dispatch changes in all subscribed watchers</span></span>
<span class="line"><span style="color:#6272A4;">      // to force getter re-evaluation for hot reloading.</span></span>
<span class="line"><span style="color:#F8F8F2;">      store.</span><span style="color:#50FA7B;">_withCommit</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        oldVm._data.$$state </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      });</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    Vue.</span><span style="color:#50FA7B;">nextTick</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> oldVm.</span><span style="color:#50FA7B;">$destroy</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="辅助函数" tabindex="-1"><a class="header-anchor" href="#辅助函数"><span>辅助函数</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">computed: </span><span style="color:#50FA7B;">mapState</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#6272A4;">  // 箭头函数可使代码更简练</span></span>
<span class="line"><span style="color:#50FA7B;">  count</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> state.count,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 传字符串参数 &#39;count&#39; 等同于 \`state =&gt; state.count\`</span></span>
<span class="line"><span style="color:#F8F8F2;">  countAlias</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">count</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 为了能够使用 \`this\` 获取局部状态，必须使用常规函数</span></span>
<span class="line"><span style="color:#50FA7B;">  countPlusLocalState</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#F8F8F2;"> state.count </span><span style="color:#FF79C6;">+</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.localCount;</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>mapState</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> const</span><span style="color:#F8F8F2;"> mapState </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> normalizeNamespace</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">namespace</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">states</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> res </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {};</span></span>
<span class="line"><span style="color:#50FA7B;">  normalizeMap</span><span style="color:#F8F8F2;">(states).</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">(({ </span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">val</span><span style="color:#F8F8F2;"> }) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    res[key] </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> mappedState</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">      let</span><span style="color:#F8F8F2;"> state </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.$store.state;</span></span>
<span class="line"><span style="color:#FF79C6;">      let</span><span style="color:#F8F8F2;"> getters </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.$store.getters;</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (namespace) {</span></span>
<span class="line"><span style="color:#FF79C6;">        const</span><span style="color:#F8F8F2;"> module </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> getModuleByNamespace</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.$store, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">mapState</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, namespace);</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#8BE9FD;font-style:italic;">module</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">          return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">        state </span><span style="color:#FF79C6;">=</span><span style="color:#8BE9FD;font-style:italic;"> module</span><span style="color:#F8F8F2;">.context.state;</span></span>
<span class="line"><span style="color:#F8F8F2;">        getters </span><span style="color:#FF79C6;">=</span><span style="color:#8BE9FD;font-style:italic;"> module</span><span style="color:#F8F8F2;">.context.getters;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#FF79C6;"> typeof</span><span style="color:#F8F8F2;"> val </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">function</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#FF79C6;">        ?</span><span style="color:#F8F8F2;"> val.</span><span style="color:#50FA7B;">call</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">, state, getters)</span></span>
<span class="line"><span style="color:#FF79C6;">        :</span><span style="color:#F8F8F2;"> state[val];</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#6272A4;">    // mark vuex getter for devtools</span></span>
<span class="line"><span style="color:#F8F8F2;">    res[key].vuex </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> res;</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">  computed: {</span></span>
<span class="line"><span style="color:#6272A4;">  // 使用对象展开运算符将 getter 混入 computed 对象中</span></span>
<span class="line"><span style="color:#FF79C6;">    ...</span><span style="color:#50FA7B;">mapGetters</span><span style="color:#F8F8F2;">([</span></span>
<span class="line"><span style="color:#E9F284;">      &#39;</span><span style="color:#F1FA8C;">doneTodosCount</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#E9F284;">      &#39;</span><span style="color:#F1FA8C;">anotherGetter</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#6272A4;">      // ...</span></span>
<span class="line"><span style="color:#F8F8F2;">    ])</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>mapGetters</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> const</span><span style="color:#F8F8F2;"> mapGetters </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> normalizeNamespace</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">namespace</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">getters</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> res </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {};</span></span>
<span class="line"><span style="color:#50FA7B;">  normalizeMap</span><span style="color:#F8F8F2;">(getters).</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">(({ </span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">val</span><span style="color:#F8F8F2;"> }) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">    // The namespace has been mutated by normalizeNamespace</span></span>
<span class="line"><span style="color:#F8F8F2;">    val </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> namespace </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> val;</span></span>
<span class="line"><span style="color:#F8F8F2;">    res[key] </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> mappedGetter</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#F8F8F2;">        namespace </span><span style="color:#FF79C6;">&amp;&amp;</span></span>
<span class="line"><span style="color:#FF79C6;">        !</span><span style="color:#50FA7B;">getModuleByNamespace</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.$store, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">mapGetters</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, namespace)</span></span>
<span class="line"><span style="color:#F8F8F2;">      ) {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.$store.getters[val];</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#6272A4;">    // mark vuex getter for devtools</span></span>
<span class="line"><span style="color:#F8F8F2;">    res[key].vuex </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> res;</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="min-vux" tabindex="-1"><a class="header-anchor" href="#min-vux"><span>min-vux</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> Vue;</span></span>
<span class="line"><span style="color:#FF79C6;">class</span><span style="color:#8BE9FD;"> Store</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">    // 接收用户传入的参数</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.$options </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> options;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 显式绑定this指向（dispatch中调用commit,commit的指向是undefined）</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.commit </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.commit.</span><span style="color:#50FA7B;">bind</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 实现getters</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.getters </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {};</span></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> computed </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {};</span></span>
<span class="line"><span style="color:#FF79C6;">    var</span><span style="color:#F8F8F2;"> store </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    Object.</span><span style="color:#50FA7B;">keys</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.$options.getters).</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> fn </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.$options.getters[key];</span></span>
<span class="line"><span style="color:#F8F8F2;">      computed[key] </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> function</span><span style="color:#F8F8F2;"> () {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> fn</span><span style="color:#F8F8F2;">(store.state);</span></span>
<span class="line"><span style="color:#F8F8F2;">      };</span></span>
<span class="line"><span style="color:#F8F8F2;">      Object.</span><span style="color:#50FA7B;">defineProperty</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.getters, key, {</span></span>
<span class="line"><span style="color:#50FA7B;">        get</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">          return</span><span style="color:#F8F8F2;"> store._vm[key];</span></span>
<span class="line"><span style="color:#F8F8F2;">        },</span></span>
<span class="line"><span style="color:#F8F8F2;">      });</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 响应式处理</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">._vm </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> Vue</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#50FA7B;">      data</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          $$state</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> options.state,</span></span>
<span class="line"><span style="color:#F8F8F2;">        };</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#F8F8F2;">      computed,</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 实现state</span></span>
<span class="line"><span style="color:#FF79C6;">  get</span><span style="color:#50FA7B;"> state</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">._vm._data.$$state;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#FF79C6;">  set</span><span style="color:#50FA7B;"> state</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">val</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">只能通过commit修改state的值</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 实现commit</span></span>
<span class="line"><span style="color:#50FA7B;">  commit</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">payload</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> fn </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.$options.mutations[event]; </span><span style="color:#6272A4;">//找到对应mutations里面的函数</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">fn) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">error</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">没有此mutation方法</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#6272A4;">//判断有无此方法</span></span>
<span class="line"><span style="color:#50FA7B;">    fn</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.state, payload); </span><span style="color:#6272A4;">//传入state值，执行此方法</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 实现dispatch</span></span>
<span class="line"><span style="color:#50FA7B;">  dispatch</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">payload</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> fn </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.$options.actions[event];</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">fn) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">error</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">没有此mutation方法</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#50FA7B;">    fn</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">, payload);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> install</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">_Vue</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  Vue </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> _Vue;</span></span>
<span class="line"><span style="color:#F8F8F2;">  Vue.</span><span style="color:#50FA7B;">mixin</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#50FA7B;">    beforeCreate</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#6272A4;">      // if判断是因为我们只在根实例里面传入了store</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.$options.store) {</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">        Vue</span><span style="color:#F8F8F2;">.prototype.$store </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.$options.store;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  Store,</span></span>
<span class="line"><span style="color:#F8F8F2;">  install,</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30)]))}const i=n(o,[["render",t],["__file","vuex-code-analysis.html.vue"]]),r=JSON.parse('{"path":"/vue2/vuex-code-analysis.html","title":"Vuex 3.x 框架原理分析","lang":"en-US","frontmatter":{"title":"Vuex 3.x 框架原理分析","date":"2021-09-11T00:00:00.000Z","category":["Vue"],"type":["vuex"],"description":"vuex 使用 main.js Vue.use 安装 install applyMixin通过全局 mixin 将$store 混入到所有 vue 组件中 applyMixin Store 类 class Store dispatch dispatch commit commit module 安装 收集模块构造模块树 ModuleCollection...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/vue2/vuex-code-analysis.html"}],["meta",{"property":"og:title","content":"Vuex 3.x 框架原理分析"}],["meta",{"property":"og:description","content":"vuex 使用 main.js Vue.use 安装 install applyMixin通过全局 mixin 将$store 混入到所有 vue 组件中 applyMixin Store 类 class Store dispatch dispatch commit commit module 安装 收集模块构造模块树 ModuleCollection..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2022-12-30T06:28:03.000Z"}],["meta",{"property":"article:published_time","content":"2021-09-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-30T06:28:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vuex 3.x 框架原理分析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-09-11T00:00:00.000Z\\",\\"dateModified\\":\\"2022-12-30T06:28:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"Vue.use 安装","slug":"vue-use-安装","link":"#vue-use-安装","children":[]},{"level":2,"title":"Store 类","slug":"store-类","link":"#store-类","children":[]},{"level":2,"title":"dispatch","slug":"dispatch","link":"#dispatch","children":[]},{"level":2,"title":"commit","slug":"commit","link":"#commit","children":[]},{"level":2,"title":"module 安装","slug":"module-安装","link":"#module-安装","children":[]},{"level":2,"title":"辅助函数","slug":"辅助函数","link":"#辅助函数","children":[]},{"level":2,"title":"min-vux","slug":"min-vux","link":"#min-vux","children":[]}],"git":{"createdTime":1665567570000,"updatedTime":1672381683000,"contributors":[{"name":"卢祥","email":"example@qq.com","commits":2},{"name":"luxiag","email":"luxiag@qq.com","commits":1},{"name":"卢祥","email":"example@gmail.com","commits":1}]},"readingTime":{"minutes":6.99,"words":2098},"filePathRelative":"vue2/vuex-code-analysis.md","localizedDate":"September 11, 2021","excerpt":"<figure><figcaption></figcaption></figure>\\n<details class=\\"hint-container details\\"><summary>vuex 使用</summary>\\n<p><code>main.js</code></p>\\n<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"background-color:#282A36;color:#F8F8F2\\"><pre class=\\"shiki dracula vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#FF79C6\\">import</span><span style=\\"color:#F8F8F2\\"> Vue </span><span style=\\"color:#FF79C6\\">from</span><span style=\\"color:#E9F284\\"> \\"</span><span style=\\"color:#F1FA8C\\">vue</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F8F8F2\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">import</span><span style=\\"color:#F8F8F2\\"> Vuex </span><span style=\\"color:#FF79C6\\">from</span><span style=\\"color:#E9F284\\"> \\"</span><span style=\\"color:#F1FA8C\\">vuex</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F8F8F2\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">Vue.</span><span style=\\"color:#50FA7B\\">use</span><span style=\\"color:#F8F8F2\\">(Vuex);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">const</span><span style=\\"color:#F8F8F2\\"> store </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#FF79C6;font-weight:bold\\"> new</span><span style=\\"color:#F8F8F2\\"> Vuex.</span><span style=\\"color:#50FA7B\\">store</span><span style=\\"color:#F8F8F2\\">({</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  state</span><span style=\\"color:#FF79C6\\">:</span><span style=\\"color:#F8F8F2\\"> { count</span><span style=\\"color:#FF79C6\\">:</span><span style=\\"color:#BD93F9\\"> 0</span><span style=\\"color:#F8F8F2\\"> },</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  mutations</span><span style=\\"color:#FF79C6\\">:</span><span style=\\"color:#F8F8F2\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#50FA7B\\">    increment</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#FFB86C;font-style:italic\\">state</span><span style=\\"color:#F8F8F2\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">      state.count</span><span style=\\"color:#FF79C6\\">++</span><span style=\\"color:#F8F8F2\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    },</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  },</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  actions</span><span style=\\"color:#FF79C6\\">:</span><span style=\\"color:#F8F8F2\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#50FA7B\\">    increment</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#FFB86C;font-style:italic\\">context</span><span style=\\"color:#F8F8F2\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">      context.</span><span style=\\"color:#50FA7B\\">commit</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F1FA8C\\">increment</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F8F8F2\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    },</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  },</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">});</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6;font-weight:bold\\">new</span><span style=\\"color:#50FA7B\\"> Vue</span><span style=\\"color:#F8F8F2\\">({</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  store,</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">  // ...</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">});</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></details>","autoDesc":true}');export{i as comp,r as data};
