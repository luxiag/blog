import{_ as i,e,g as t,f as l,j as n,o}from"./app-Bd-A8UqK.js";const s="/blog/assets/0407071739104462101-CdFw0TgV.png",r="/blog/assets/0407071739104476238-9TJ0lx2K.png",Q="/blog/assets/0407071739104531958-Dy0cPkZ3.png",m="/blog/assets/0407071739104558034-Ctsm9kGU.png",T="/blog/assets/0407071739104577121-Bqn7p-YM.png",g="/blog/assets/0407071739104596762-BoFBnTWN.png",d="/blog/assets/0407071739104664776-CGxLu9L4.png",p="/blog/assets/0407071739104690104-IwK-nnQQ.png",u="/blog/assets/0407071739104798878-LudnhsDh.png",h="/blog/assets/0407071739104819509-C12-0hjQ.png",f={},x={class:"MathJax",jax:"SVG",style:{position:"relative"}},c={style:{"vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.396ex",height:"2.034ex",role:"img",focusable:"false",viewBox:"0 -694 1943 899","aria-hidden":"true"},b={class:"MathJax",jax:"SVG",style:{position:"relative"}},w={style:{"vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.753ex",height:"2.034ex",role:"img",focusable:"false",viewBox:"0 -694 2543 899","aria-hidden":"true"},O={class:"MathJax",jax:"SVG",style:{position:"relative"}},y={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.345ex",height:"1.912ex",role:"img",focusable:"false",viewBox:"0 -833.9 1036.6 844.9","aria-hidden":"true"};function L(M,a){return o(),e("div",null,[a[17]||(a[17]=t("p",null,[t("strong",null,"大 O 表示法是一种特殊的表示法，指出了算法的速度有多快。"),n(" 将算法的所有步骤转换为代数项，然后排除不会对问题的整体复杂度产生较大影响的较低阶常数和系数")],-1)),a[18]||(a[18]=t("h2",{id:"时间复杂度",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#时间复杂度"},[t("span",null,"时间复杂度")])],-1)),a[19]||(a[19]=t("p",null,[n("用于评估执行程序所消耗的时间，可以估算出程序对处理器的使用程度。 时间复杂度的公式是："),t("code",null,"T(n) = O( f(n) )"),n("，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公式的全称是：算法的渐进时间复杂度。")],-1)),t("table",null,[a[16]||(a[16]=t("thead",null,[t("tr",null,[t("th",null,"常见算法"),t("th",null,"时间复杂度")])],-1)),t("tbody",null,[a[15]||(a[15]=t("tr",null,[t("td",null,"简单查找"),t("td",null,"O(n)")],-1)),t("tr",null,[a[4]||(a[4]=t("td",null,"二分查找",-1)),t("td",null,[a[2]||(a[2]=n("O(")),t("mjx-container",x,[(o(),e("svg",c,a[0]||(a[0]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="msub" transform="translate(783,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(510,-150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1343,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g>',1)]))),a[1]||(a[1]=t("mjx-assistive-mml",{unselectable:"on",display:"inline"},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mrow",{"data-mjx-texclass":"ORD"})]),t("mrow",{"data-mjx-texclass":"ORD"},[t("mi",null,"n")])])],-1))]),a[3]||(a[3]=n(")"))])]),t("tr",null,[a[9]||(a[9]=t("td",null,"快速排序",-1)),t("td",null,[a[7]||(a[7]=n("O(")),t("mjx-container",b,[(o(),e("svg",w,a[5]||(a[5]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(600,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(898,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="msub" transform="translate(1383,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(510,-150) scale(0.707)" data-mjx-texclass="ORD"></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1943,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g>',1)]))),a[6]||(a[6]=t("mjx-assistive-mml",{unselectable:"on",display:"inline"},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"n"),t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mrow",{"data-mjx-texclass":"ORD"})]),t("mrow",{"data-mjx-texclass":"ORD"},[t("mi",null,"n")])])],-1))]),a[8]||(a[8]=n(")"))])]),t("tr",null,[a[14]||(a[14]=t("td",null,"选择排序",-1)),t("td",null,[a[12]||(a[12]=n("O(")),t("mjx-container",O,[(o(),e("svg",y,a[10]||(a[10]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(633,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g>',1)]))),a[11]||(a[11]=t("mjx-assistive-mml",{unselectable:"on",display:"inline"},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("msup",null,[t("mi",null,"n"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mn",null,"2")])])])],-1))]),a[13]||(a[13]=n(")"))])])])]),a[20]||(a[20]=l('<h2 id="空间复杂度" tabindex="-1"><a class="header-anchor" href="#空间复杂度"><span>空间复杂度</span></a></h2><p>用于评估执行程序所占用的内存空间，可以估算出程序对计算机内存的使用程度。</p><h2 id="o-1-常数时间" tabindex="-1"><a class="header-anchor" href="#o-1-常数时间"><span>O(1) - 常数时间</span></a></h2><p>对于常数时间，不管多少人参加生日聚会，都只需要做一个蛋糕。因此制作蛋糕的时间是一个常量。</p><figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>一个 O(1) 操作的例子是通过 index 访问数组的元素。从 10 个元素的数组检索一个元素和从 100 万个元素的数组里检索一个元素一样快。</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="o-log-n-对数时间" tabindex="-1"><a class="header-anchor" href="#o-log-n-对数时间"><span>O(log n) - 对数时间</span></a></h2><p>第一个到的人独享蛋糕，接下来到的两个人分一个蛋糕，在接着到的四个人分一个蛋糕，以此类推。</p><p>因此一个人聚会需要一个蛋糕。两人或者三人聚会需要两个蛋糕。4 - 7人聚会需要 3 个蛋糕。8 - 15 人聚会需要四个蛋糕。 ‘n’ 个人聚会需要 log_2_(n) 个蛋糕。</p><figure><img src="'+Q+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>一个 O(log n) 操作的例子是有序数组的二分查找。</p><p>二分查找算法找到数组中间的元素，和要找的元素进行对比。因为数组是有序的，所以可以知道要找的值在数组的哪一半里面。</p><p>然后再一半的数组里面重复这一过程。对于 16 个元素的数组，第一次迭代将搜索范围缩小到 8，然后依次是 4、2、1。最多 4 次，也就是 log_2_(16) 次，迭代结束。</p><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="o-n-线性时间" tabindex="-1"><a class="header-anchor" href="#o-n-线性时间"><span>O(n) - 线性时间</span></a></h2><p>每个参会的人都有一个蛋糕。如果 ‘n’ 个人参会需要准备 ‘n’ 个蛋糕，因此花费的时间和参会的人数相关。</p><figure><img src="'+T+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>一个 O(n) 操作的例子是用最粗暴的方式在数组里遍历找到指定元素。在 10 个元素的数组里，最坏情况下需要找十次才能找到指定元素。在 100 万个元素的数组里，可能需要找 100 万次。</p><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="o-n-2-平方时间" tabindex="-1"><a class="header-anchor" href="#o-n-2-平方时间"><span>O(n^2) - 平方时间</span></a></h2><p>一人参会需要 1 个蛋糕和 1 个签名。两人参会需要 2 个蛋糕，每个蛋糕都需要 2 个名字（一共 4 个名字）。三人参会需要 3个蛋糕，每个蛋糕都有 3 个名字，一共 9 个名字。</p><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>O(n^2) 操作的一个例子是暴力搜索数组中的重复项。遍历数组中的所有元素，对于每一个元素，在遍历一遍数组看是否有和其相同的元素。 对于 10 个元素的数组，外部需要循环 10 次，每一次外部循环都需要内部循环 10 次，总共是 100 次。对于 100 万个元素的数组，需要 10000 亿次。</p><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="o-n-阶乘时间" tabindex="-1"><a class="header-anchor" href="#o-n-阶乘时间"><span>O(n!) - 阶乘时间</span></a></h2><p>阶乘时间，所有参会的人进行法式滚球比赛，赢的人拿走蛋糕。</p><p>还存在一个小问题，先投球的玩家会更劣势。为了解决这个问题，同时进行多场比赛，每组都会先手一次。所有比赛的排列都会写在蛋糕的奶油上。</p><p>这意味着两人参会会有两场比赛，每一个选手都会依次先手。三人参会会有 6 场比赛（假设选手为安娜 A、布莱恩 B 和克里斯 C，那么排列会是 ABC、ACB、BAC、BCA、CAB、CBA）。</p><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>n! 的计算是从 n 到 1 的所有数相乘， “n <em>(n - 1)</em> (n - 2) …… <em>2</em> 1”。对于两人聚会就是 2 <em>1 也就是 2。对于三人聚会就是 3</em> 2 * 1，也就是 6。</p><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h1><ul><li><a href="https://book.douban.com/subject/26616292/" target="_blank" rel="noopener noreferrer">算法图解</a></li><li><a href="https://www.freecodecamp.org/chinese/news/big-o-notation/" target="_blank" rel="noopener noreferrer">大O表示法</a></li></ul>',34))])}const j=i(f,[["render",L],["__file","large-o-notation.html.vue"]]),Z=JSON.parse('{"path":"/algorithm/large-o-notation.html","title":"大O表示法","lang":"en-US","frontmatter":{"title":"大O表示法","reference":"算法图解","date":"2022-09-15T00:00:00.000Z","category":["算法"],"tag":["算法图解"],"description":"大 O 表示法是一种特殊的表示法，指出了算法的速度有多快。 将算法的所有步骤转换为代数项，然后排除不会对问题的整体复杂度产生较大影响的较低阶常数和系数 时间复杂度 用于评估执行程序所消耗的时间，可以估算出程序对处理器的使用程度。 时间复杂度的公式是：T(n) = O( f(n) )，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/algorithm/large-o-notation.html"}],["meta",{"property":"og:title","content":"大O表示法"}],["meta",{"property":"og:description","content":"大 O 表示法是一种特殊的表示法，指出了算法的速度有多快。 将算法的所有步骤转换为代数项，然后排除不会对问题的整体复杂度产生较大影响的较低阶常数和系数 时间复杂度 用于评估执行程序所消耗的时间，可以估算出程序对处理器的使用程度。 时间复杂度的公式是：T(n) = O( f(n) )，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-09T14:06:21.000Z"}],["meta",{"property":"article:tag","content":"算法图解"}],["meta",{"property":"article:published_time","content":"2022-09-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-09T14:06:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"大O表示法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-09T14:06:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"git":{"createdTime":1663833246000,"updatedTime":1739109981000,"contributors":[{"name":"卢祥","username":"卢祥","email":"example@gmail.com","commits":3,"url":"https://github.com/卢祥"},{"name":"luxiang","username":"luxiang","email":"luxiag@qq.com","commits":1,"url":"https://github.com/luxiang"},{"name":"luxiag","username":"luxiag","email":"luxiag@qq.com","commits":3,"url":"https://github.com/luxiag"}]},"readingTime":{"minutes":3.86,"words":1159},"filePathRelative":"algorithm/large-o-notation.md","localizedDate":"September 15, 2022","excerpt":"<p><strong>大 O 表示法是一种特殊的表示法，指出了算法的速度有多快。</strong>\\n将算法的所有步骤转换为代数项，然后排除不会对问题的整体复杂度产生较大影响的较低阶常数和系数</p>\\n","autoDesc":true}');export{j as comp,Z as data};
