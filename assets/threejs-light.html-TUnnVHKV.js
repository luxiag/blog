import{_ as V,i as x,l as G,q as K,c as Y,a as L,d as P,o as Q}from"./app-CBs_XKfp.js";import{S,P as _,aC as I,W as T,aD as J,a as X,D as N,A as aa,aK as sa,az as O,a_ as ea,M as R,v as na,T as da,Y as ta,aN as Z,u as la,a$ as ca,aj as oa,a5 as $,C as pa}from"./three.module-DElcEsb7.js";import{O as E}from"./OrbitControls-COOjmuLA.js";import{g as j}from"./index-DjKJqAo0.js";import{R as z}from"./RGBELoader-CbWxVjwZ.js";import{G as W}from"./GLTFLoader-Def6ni-K.js";import{W as va}from"./Water2-Ek810xfd.js";const ia={__name:"threejs-light.html",setup(U,{expose:i}){i();let u;const r=x(),D=async()=>{const e=new S,c=new _(45,2,.25,20);c.position.set(-2,1.5,3);const d=await new z().loadAsync("/blog/threejs/textures/equirectangular/moonless_golf_1k.hdr ");d.mapping=I,e.background=d,e.environment=d;const b=await new W().loadAsync("/blog/threejs/models/gltf/LightsPunctualLamp.glb");e.add(b.scene);const o=new u.GUI;r.value.appendChild(o.domElement),o.domElement.style.position="absolute",o.domElement.style.top="0px",o.domElement.style.right="0px";const t={punctualLightsEnabled:!0};o.add(t,"punctualLightsEnabled").onChange(m),o.open();const s=new T({antialias:!0});s.setSize(r.value.offsetWidth,r.value.offsetWidth/2),s.toneMapping=J,s.toneMappingExposure=1,s.outputEncoding=void 0,s.useLegacyLights=!1,r.value.appendChild(s.domElement);const p=new E(c,s.domElement);p.addEventListener("change",l),p.minDistance=2,p.maxDistance=10,p.target.set(0,1,0),p.update(),window.addEventListener("resize",v);function v(){s.setSize(r.value.offsetWidth,r.value.offsetWidth/2),l()}function m(g){e.traverse(function(a){a.isLight&&(a.visible=g)}),l()}function l(){s.render(e,c)}l()},F=x(),k=()=>{const e=new S,c=new _(90,2,.1,1e3);c.position.y=5,new z().loadAsync("/blog/assets/textures/2k.hdr").then(v=>{v.mapping=I,e.background=v,e.environment=v});const d=new X({vertexShader:`
            precision lowp float;
            varying vec4 vPosition;
            varying vec4 gPosition;
            void main(){
                vec4 modelPosition = modelMatrix * vec4( position, 1.0 );

                vPosition = modelPosition;
                gPosition = vec4( position, 1.0 );
                gl_Position =  projectionMatrix * viewMatrix * modelPosition;
            }
        `,fragmentShader:`
            precision lowp float;
            varying vec4 vPosition;
            varying vec4 gPosition;

            void main(){
                vec4 redColor = vec4(1,0,0,1);
                vec4 yellowColor = vec4(1,1,0.5,1);
                vec4 mixColor = mix(yellowColor,redColor,gPosition.y/3.0);

                if(gl_FrontFacing){
                    gl_FragColor = vec4(mixColor.xyz-(vPosition.y-20.0)/80.0-0.1,1);
                    // gl_FragColor = vec4(1,1,1,1);
                }else{
                    gl_FragColor = vec4(mixColor.xyz,1);
                }
            }  
        `,uniforms:{},side:N}),n=new T;n.outputEncoding=void 0,n.toneMapping=J,n.toneMappingExposure=.2;const b=new W;let o=null;b.load("/blog/assets/model/flyLight.glb",v=>{o=v.scene.children[1],o.material=d;for(let m=0;m<150;m++){let l=v.scene.clone(!0),g=(Math.random()-.5)*300,a=(Math.random()-.5)*300,h=Math.random()*60+25;l.position.set(g,h,a),j.to(l.rotation,{y:2*Math.PI,duration:10+Math.random()*30,repeat:-1}),j.to(l.position,{x:"+="+Math.random()*5,y:"+="+Math.random()*20,yoyo:!0,duration:5+Math.random()*10,repeat:-1}),e.add(l)}}),n.setSize(F.value.offsetWidth,F.value.offsetWidth/2),window.addEventListener("resize",()=>{n.setSize(F.value.offsetWidth,F.value.offsetWidth/2),n.setPixelRatio(window.devicePixelRatio)}),F.value.appendChild(n.domElement);const t=new E(c,n.domElement);t.enableDamping=!0,t.update(),t.autoRotate=!0,t.autoRotateSpeed=.1,t.maxPolarAngle=Math.PI/3*2,t.minPolarAngle=Math.PI/3*2;const s=new pa;function p(v){s.getElapsedTime(),requestAnimationFrame(p),n.render(e,c)}p()},y=x(),H=()=>{const e=new S,c=new _(45,2,1,2e3);c.position.z=20,e.add(new aa(1118498));function B(a){const C=new ta(a,2,20);C.castShadow=!0,C.shadow.bias=-.005;let M=new Z(.3,12,6),w=new la({color:a});w.color.multiplyScalar(2);let f=new R(M,w);C.add(f);const A=new ca(m());return A.magFilter=oa,A.wrapT=$,A.wrapS=$,A.repeat.set(1,4.5),M=new Z(2,32,8),w=new O({side:N,alphaMap:A,alphaTest:.5}),f=new R(M,w),f.castShadow=!0,f.receiveShadow=!0,C.add(f),C}const d=B(35071);e.add(d);const n=B(16746632);e.add(n);const b=new sa(30,30,30),o=new O({color:10530223,shininess:10,specular:1118481,side:ea}),t=new R(b,o);t.position.y=10,t.receiveShadow=!0,e.add(t);const s=new T({antialias:!0});s.setPixelRatio(window.devicePixelRatio),s.setSize(y.value.offsetWidth,y.value.offsetWidth/2),s.shadowMap.enabled=!0,s.shadowMap.type=na,y.value.appendChild(s.domElement);const p=new E(c,s.domElement);p.target.set(0,10,0),p.update(),window.addEventListener("resize",v);function v(){s.setSize(y.value.offsetWidth,y.value.offsetWidth/2)}function m(){const a=document.createElement("canvas");a.width=2,a.height=2;const h=a.getContext("2d");return h.fillStyle="white",h.fillRect(0,1,2,1),a}function l(){requestAnimationFrame(l),g()}function g(){let a=performance.now()*.001;d.position.x=Math.sin(a*.6)*9,d.position.y=Math.sin(a*.7)*9+6,d.position.z=Math.sin(a*.8)*9,d.rotation.x=a,d.rotation.z=a,a+=1e4,n.position.x=Math.sin(a*.6)*9,n.position.y=Math.sin(a*.7)*9+6,n.position.z=Math.sin(a*.8)*9,n.rotation.x=a,n.rotation.z=a,s.render(e,c)}l()};G(async()=>{u=await K(()=>import("./dat.gui.module-DNo137I2.js"),[]),k(),D(),H()});const q={get dat(){return u},set dat(e){u=e},lightRef:r,initLights:D,lanternRef:F,initLantern:k,pointLightRef:y,initPointLight:H,ref:x,onMounted:G,get THREE(){return da},get OrbitControls(){return E},get gsap(){return j},get RGBELoader(){return z},get GLTFLoader(){return W},get Water(){return va}};return Object.defineProperty(q,"__isScriptSetup",{enumerable:!1,value:!0}),q}},ra={ref:"lightRef",class:"light"},Fa={ref:"lanternRef"},ya={ref:"pointLightRef"};function ma(U,i,u,r,D,F){return Q(),Y("div",null,[i[0]||(i[0]=L(`<p data-v-e78ad3c0>参考：<a href="https://blog/threejs.org/" target="_blank" rel="noopener noreferrer" data-v-e78ad3c0>https://blog/threejs.org/</a></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-e78ad3c0><pre class="shiki dracula vp-code" data-v-e78ad3c0><code data-v-e78ad3c0><span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>//遍历场景中的所有对象，然后判断当前对象是否是光源对象</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>function</span><span style="color:#50FA7B;" data-v-e78ad3c0> toggleLights</span><span style="color:#F8F8F2;" data-v-e78ad3c0>( </span><span style="color:#FFB86C;font-style:italic;" data-v-e78ad3c0>visible</span><span style="color:#F8F8F2;" data-v-e78ad3c0> ) {</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0> scene.</span><span style="color:#50FA7B;" data-v-e78ad3c0>traverse</span><span style="color:#F8F8F2;" data-v-e78ad3c0>( </span><span style="color:#FF79C6;" data-v-e78ad3c0>function</span><span style="color:#F8F8F2;" data-v-e78ad3c0> ( </span><span style="color:#FFB86C;font-style:italic;" data-v-e78ad3c0>object</span><span style="color:#F8F8F2;" data-v-e78ad3c0> ) {</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>  if</span><span style="color:#F8F8F2;" data-v-e78ad3c0> ( object.isLight ) {</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>   object.visible </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#F8F8F2;" data-v-e78ad3c0> visible;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  }</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0> } );</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#50FA7B;" data-v-e78ad3c0> render</span><span style="color:#F8F8F2;" data-v-e78ad3c0>();</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-e78ad3c0><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div></div></div>`,2)),P("div",ra,null,512),i[1]||(i[1]=L(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-e78ad3c0><pre class="shiki dracula vp-code" data-v-e78ad3c0><code data-v-e78ad3c0><span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>    const</span><span style="color:#F8F8F2;" data-v-e78ad3c0> shaderMaterial </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e78ad3c0> new</span><span style="color:#BD93F9;" data-v-e78ad3c0> THREE</span><span style="color:#F8F8F2;" data-v-e78ad3c0>.</span><span style="color:#50FA7B;" data-v-e78ad3c0>ShaderMaterial</span><span style="color:#F8F8F2;" data-v-e78ad3c0>({</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>        // 定义顶点着色器，用于处理顶点属性</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>        vertexShader</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#F1FA8C;" data-v-e78ad3c0> \`</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>            precision lowp float;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>            // 传递顶点位置信息到片元着色器</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>            varying vec4 vPosition;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>            // 传递变换后的顶点位置信息到片元着色器</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>            varying vec4 gPosition;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>            void main(){</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                // 将顶点坐标从模型空间变换到世界空间</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                vec4 modelPosition = modelMatrix * vec4( position, 1.0 );</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                // 将变换后的顶点坐标从世界空间变换到相机空间</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                // 并传递给 varying vPosition</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                vPosition = modelPosition;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                // 将顶点坐标从模型空间变换到世界空间</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                // 并传递给 varying gPosition</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                gPosition = vec4( position, 1.0 );</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                // 将顶点坐标从模型空间变换到相机空间和投影空间</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                gl_Position =  projectionMatrix * viewMatrix * modelPosition;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>            }</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>        \`</span><span style="color:#F8F8F2;" data-v-e78ad3c0>,</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>        // 定义片元着色器，用于处理像素颜色</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>        fragmentShader</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#F1FA8C;" data-v-e78ad3c0>\`</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>            precision lowp float;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>            // 接收来自顶点着色器的变量</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>            varying vec4 vPosition;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>            varying vec4 gPosition;</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>            void main(){</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                // 定义红色和黄色的颜色值</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                vec4 redColor = vec4(1,0,0,1);</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                vec4 yellowColor = vec4(1,1,0.5,1);</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                // 计算需要混合的颜色值，并传递给 gl_FragColor</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                vec4 mixColor = mix(yellowColor,redColor,gPosition.y/3.0);</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                if(gl_FrontFacing){</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                    // 对于正面的面，计算并设置像素颜色</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                    gl_FragColor = vec4(mixColor.xyz-(vPosition.y-20.0)/80.0-0.1,1);</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                }else{</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                    // 对于背面的面，直接设置像素颜色</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                    gl_FragColor = vec4(mixColor.xyz,1);</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>                }</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>            }  </span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F1FA8C;" data-v-e78ad3c0>        \`</span><span style="color:#F8F8F2;" data-v-e78ad3c0>,</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>        // 传递给着色器的变量，这里为空对象</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>        uniforms</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#F8F8F2;" data-v-e78ad3c0>{},</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>        // 设置物体的两面都需要渲染</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>        side</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#BD93F9;" data-v-e78ad3c0>THREE</span><span style="color:#F8F8F2;" data-v-e78ad3c0>.DoubleSide</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>    })</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>    const</span><span style="color:#F8F8F2;" data-v-e78ad3c0> gltfLoader </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e78ad3c0> new</span><span style="color:#50FA7B;" data-v-e78ad3c0> GLTFLoader</span><span style="color:#F8F8F2;" data-v-e78ad3c0>()</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>    let</span><span style="color:#F8F8F2;" data-v-e78ad3c0> LightBox </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#BD93F9;" data-v-e78ad3c0> null</span><span style="color:#F8F8F2;" data-v-e78ad3c0> </span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>    gltfLoader.</span><span style="color:#50FA7B;" data-v-e78ad3c0>load</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(</span><span style="color:#E9F284;" data-v-e78ad3c0>&quot;</span><span style="color:#F1FA8C;" data-v-e78ad3c0>/blog/assets/model/flyLight.glb</span><span style="color:#E9F284;" data-v-e78ad3c0>&quot;</span><span style="color:#F8F8F2;" data-v-e78ad3c0>,(</span><span style="color:#FFB86C;font-style:italic;" data-v-e78ad3c0>gltf</span><span style="color:#F8F8F2;" data-v-e78ad3c0>) </span><span style="color:#FF79C6;" data-v-e78ad3c0>=&gt;</span><span style="color:#F8F8F2;" data-v-e78ad3c0> {</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>        LightBox </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#F8F8F2;" data-v-e78ad3c0> gltf.scene.children[</span><span style="color:#BD93F9;" data-v-e78ad3c0>1</span><span style="color:#F8F8F2;" data-v-e78ad3c0>]</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>        LightBox.material </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#F8F8F2;" data-v-e78ad3c0> shaderMaterial;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>        </span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>        for</span><span style="color:#F8F8F2;" data-v-e78ad3c0> (</span><span style="color:#FF79C6;" data-v-e78ad3c0>let</span><span style="color:#F8F8F2;" data-v-e78ad3c0> i </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#BD93F9;" data-v-e78ad3c0> 0</span><span style="color:#F8F8F2;" data-v-e78ad3c0>; i </span><span style="color:#FF79C6;" data-v-e78ad3c0>&lt;</span><span style="color:#BD93F9;" data-v-e78ad3c0> 150</span><span style="color:#F8F8F2;" data-v-e78ad3c0>; i</span><span style="color:#FF79C6;" data-v-e78ad3c0>++</span><span style="color:#F8F8F2;" data-v-e78ad3c0>) {</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>          let</span><span style="color:#F8F8F2;" data-v-e78ad3c0> flyLight </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#F8F8F2;" data-v-e78ad3c0> gltf.scene.</span><span style="color:#50FA7B;" data-v-e78ad3c0>clone</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(</span><span style="color:#BD93F9;" data-v-e78ad3c0>true</span><span style="color:#F8F8F2;" data-v-e78ad3c0>);</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>          let</span><span style="color:#F8F8F2;" data-v-e78ad3c0> x </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#F8F8F2;" data-v-e78ad3c0> (Math.</span><span style="color:#50FA7B;" data-v-e78ad3c0>random</span><span style="color:#F8F8F2;" data-v-e78ad3c0>() </span><span style="color:#FF79C6;" data-v-e78ad3c0>-</span><span style="color:#BD93F9;" data-v-e78ad3c0> 0.5</span><span style="color:#F8F8F2;" data-v-e78ad3c0>) </span><span style="color:#FF79C6;" data-v-e78ad3c0>*</span><span style="color:#BD93F9;" data-v-e78ad3c0> 300</span><span style="color:#F8F8F2;" data-v-e78ad3c0>;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>          let</span><span style="color:#F8F8F2;" data-v-e78ad3c0> z </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#F8F8F2;" data-v-e78ad3c0> (Math.</span><span style="color:#50FA7B;" data-v-e78ad3c0>random</span><span style="color:#F8F8F2;" data-v-e78ad3c0>() </span><span style="color:#FF79C6;" data-v-e78ad3c0>-</span><span style="color:#BD93F9;" data-v-e78ad3c0> 0.5</span><span style="color:#F8F8F2;" data-v-e78ad3c0>) </span><span style="color:#FF79C6;" data-v-e78ad3c0>*</span><span style="color:#BD93F9;" data-v-e78ad3c0> 300</span><span style="color:#F8F8F2;" data-v-e78ad3c0>;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>          let</span><span style="color:#F8F8F2;" data-v-e78ad3c0> y </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#F8F8F2;" data-v-e78ad3c0> Math.</span><span style="color:#50FA7B;" data-v-e78ad3c0>random</span><span style="color:#F8F8F2;" data-v-e78ad3c0>() </span><span style="color:#FF79C6;" data-v-e78ad3c0>*</span><span style="color:#BD93F9;" data-v-e78ad3c0> 60</span><span style="color:#FF79C6;" data-v-e78ad3c0> +</span><span style="color:#BD93F9;" data-v-e78ad3c0> 25</span><span style="color:#F8F8F2;" data-v-e78ad3c0>;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>          flyLight.position.</span><span style="color:#50FA7B;" data-v-e78ad3c0>set</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(x, y, z);</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>          gsap.</span><span style="color:#50FA7B;" data-v-e78ad3c0>to</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(flyLight.rotation, {</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>            y</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#BD93F9;" data-v-e78ad3c0> 2</span><span style="color:#FF79C6;" data-v-e78ad3c0> *</span><span style="color:#F8F8F2;" data-v-e78ad3c0> Math.</span><span style="color:#BD93F9;" data-v-e78ad3c0>PI</span><span style="color:#F8F8F2;" data-v-e78ad3c0>,</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>            duration</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#BD93F9;" data-v-e78ad3c0> 10</span><span style="color:#FF79C6;" data-v-e78ad3c0> +</span><span style="color:#F8F8F2;" data-v-e78ad3c0> Math.</span><span style="color:#50FA7B;" data-v-e78ad3c0>random</span><span style="color:#F8F8F2;" data-v-e78ad3c0>() </span><span style="color:#FF79C6;" data-v-e78ad3c0>*</span><span style="color:#BD93F9;" data-v-e78ad3c0> 30</span><span style="color:#F8F8F2;" data-v-e78ad3c0>,</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>            repeat</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#FF79C6;" data-v-e78ad3c0> -</span><span style="color:#BD93F9;" data-v-e78ad3c0>1</span><span style="color:#F8F8F2;" data-v-e78ad3c0>,</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>          });</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>          gsap.</span><span style="color:#50FA7B;" data-v-e78ad3c0>to</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(flyLight.position, {</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>            x</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#E9F284;" data-v-e78ad3c0> &quot;</span><span style="color:#F1FA8C;" data-v-e78ad3c0>+=</span><span style="color:#E9F284;" data-v-e78ad3c0>&quot;</span><span style="color:#FF79C6;" data-v-e78ad3c0> +</span><span style="color:#F8F8F2;" data-v-e78ad3c0> Math.</span><span style="color:#50FA7B;" data-v-e78ad3c0>random</span><span style="color:#F8F8F2;" data-v-e78ad3c0>() </span><span style="color:#FF79C6;" data-v-e78ad3c0>*</span><span style="color:#BD93F9;" data-v-e78ad3c0> 5</span><span style="color:#F8F8F2;" data-v-e78ad3c0>,</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>            y</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#E9F284;" data-v-e78ad3c0> &quot;</span><span style="color:#F1FA8C;" data-v-e78ad3c0>+=</span><span style="color:#E9F284;" data-v-e78ad3c0>&quot;</span><span style="color:#FF79C6;" data-v-e78ad3c0> +</span><span style="color:#F8F8F2;" data-v-e78ad3c0> Math.</span><span style="color:#50FA7B;" data-v-e78ad3c0>random</span><span style="color:#F8F8F2;" data-v-e78ad3c0>() </span><span style="color:#FF79C6;" data-v-e78ad3c0>*</span><span style="color:#BD93F9;" data-v-e78ad3c0> 20</span><span style="color:#F8F8F2;" data-v-e78ad3c0>,</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>            yoyo</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#BD93F9;" data-v-e78ad3c0> true</span><span style="color:#F8F8F2;" data-v-e78ad3c0>,</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>            duration</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#BD93F9;" data-v-e78ad3c0> 5</span><span style="color:#FF79C6;" data-v-e78ad3c0> +</span><span style="color:#F8F8F2;" data-v-e78ad3c0> Math.</span><span style="color:#50FA7B;" data-v-e78ad3c0>random</span><span style="color:#F8F8F2;" data-v-e78ad3c0>() </span><span style="color:#FF79C6;" data-v-e78ad3c0>*</span><span style="color:#BD93F9;" data-v-e78ad3c0> 10</span><span style="color:#F8F8F2;" data-v-e78ad3c0>,</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>            repeat</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#FF79C6;" data-v-e78ad3c0> -</span><span style="color:#BD93F9;" data-v-e78ad3c0>1</span><span style="color:#F8F8F2;" data-v-e78ad3c0>,</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>          });</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>          scene.</span><span style="color:#50FA7B;" data-v-e78ad3c0>add</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(flyLight);</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>        }</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>    })</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-e78ad3c0><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div></div></div>`,1)),P("div",Fa,null,512),i[2]||(i[2]=L(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-e78ad3c0><pre class="shiki dracula vp-code" data-v-e78ad3c0><code data-v-e78ad3c0><span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>function</span><span style="color:#50FA7B;" data-v-e78ad3c0> createLight</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(</span><span style="color:#FFB86C;font-style:italic;" data-v-e78ad3c0>color</span><span style="color:#F8F8F2;" data-v-e78ad3c0>) {</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 定义光源强度为2</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>  const</span><span style="color:#F8F8F2;" data-v-e78ad3c0> intensity </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#BD93F9;" data-v-e78ad3c0> 2</span><span style="color:#F8F8F2;" data-v-e78ad3c0>;</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 创建一个点光源</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>  const</span><span style="color:#F8F8F2;" data-v-e78ad3c0> light </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e78ad3c0> new</span><span style="color:#BD93F9;" data-v-e78ad3c0> THREE</span><span style="color:#F8F8F2;" data-v-e78ad3c0>.</span><span style="color:#50FA7B;" data-v-e78ad3c0>PointLight</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(color, intensity, </span><span style="color:#BD93F9;" data-v-e78ad3c0>20</span><span style="color:#F8F8F2;" data-v-e78ad3c0>);</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 开启阴影</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  light.castShadow </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#BD93F9;" data-v-e78ad3c0> true</span><span style="color:#F8F8F2;" data-v-e78ad3c0>;</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 减少双面对象自身阴影</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  light.shadow.bias </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#FF79C6;" data-v-e78ad3c0> -</span><span style="color:#BD93F9;" data-v-e78ad3c0>0.005</span><span style="color:#F8F8F2;" data-v-e78ad3c0>;</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 创建一个球体作为光源的可视化表示</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>  let</span><span style="color:#F8F8F2;" data-v-e78ad3c0> geometry </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e78ad3c0> new</span><span style="color:#BD93F9;" data-v-e78ad3c0> THREE</span><span style="color:#F8F8F2;" data-v-e78ad3c0>.</span><span style="color:#50FA7B;" data-v-e78ad3c0>SphereGeometry</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(</span><span style="color:#BD93F9;" data-v-e78ad3c0>0.3</span><span style="color:#F8F8F2;" data-v-e78ad3c0>, </span><span style="color:#BD93F9;" data-v-e78ad3c0>12</span><span style="color:#F8F8F2;" data-v-e78ad3c0>, </span><span style="color:#BD93F9;" data-v-e78ad3c0>6</span><span style="color:#F8F8F2;" data-v-e78ad3c0>);</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>  let</span><span style="color:#F8F8F2;" data-v-e78ad3c0> material </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e78ad3c0> new</span><span style="color:#BD93F9;" data-v-e78ad3c0> THREE</span><span style="color:#F8F8F2;" data-v-e78ad3c0>.</span><span style="color:#50FA7B;" data-v-e78ad3c0>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-e78ad3c0>({</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>    color</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#F8F8F2;" data-v-e78ad3c0> color</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  });</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 根据光源强度调整颜色</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  material.color.</span><span style="color:#50FA7B;" data-v-e78ad3c0>multiplyScalar</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(intensity);</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>  let</span><span style="color:#F8F8F2;" data-v-e78ad3c0> sphere </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e78ad3c0> new</span><span style="color:#BD93F9;" data-v-e78ad3c0> THREE</span><span style="color:#F8F8F2;" data-v-e78ad3c0>.</span><span style="color:#50FA7B;" data-v-e78ad3c0>Mesh</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(geometry, material);</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 将球体添加到光源上</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  light.</span><span style="color:#50FA7B;" data-v-e78ad3c0>add</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(sphere);</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 生成纹理</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>  const</span><span style="color:#F8F8F2;" data-v-e78ad3c0> texture </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e78ad3c0> new</span><span style="color:#BD93F9;" data-v-e78ad3c0> THREE</span><span style="color:#F8F8F2;" data-v-e78ad3c0>.</span><span style="color:#50FA7B;" data-v-e78ad3c0>CanvasTexture</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(</span><span style="color:#50FA7B;" data-v-e78ad3c0>generateTexture</span><span style="color:#F8F8F2;" data-v-e78ad3c0>());</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 设置纹理过滤器和重复方式</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  texture.magFilter </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#BD93F9;" data-v-e78ad3c0> THREE</span><span style="color:#F8F8F2;" data-v-e78ad3c0>.NearestFilter;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  texture.wrapT </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#BD93F9;" data-v-e78ad3c0> THREE</span><span style="color:#F8F8F2;" data-v-e78ad3c0>.RepeatWrapping;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  texture.wrapS </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#BD93F9;" data-v-e78ad3c0> THREE</span><span style="color:#F8F8F2;" data-v-e78ad3c0>.RepeatWrapping;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  texture.repeat.</span><span style="color:#50FA7B;" data-v-e78ad3c0>set</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(</span><span style="color:#BD93F9;" data-v-e78ad3c0>1</span><span style="color:#F8F8F2;" data-v-e78ad3c0>, </span><span style="color:#BD93F9;" data-v-e78ad3c0>4.5</span><span style="color:#F8F8F2;" data-v-e78ad3c0>);</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 创建一个球体作为光源的光晕效果</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  geometry </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e78ad3c0> new</span><span style="color:#BD93F9;" data-v-e78ad3c0> THREE</span><span style="color:#F8F8F2;" data-v-e78ad3c0>.</span><span style="color:#50FA7B;" data-v-e78ad3c0>SphereGeometry</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(</span><span style="color:#BD93F9;" data-v-e78ad3c0>2</span><span style="color:#F8F8F2;" data-v-e78ad3c0>, </span><span style="color:#BD93F9;" data-v-e78ad3c0>32</span><span style="color:#F8F8F2;" data-v-e78ad3c0>, </span><span style="color:#BD93F9;" data-v-e78ad3c0>8</span><span style="color:#F8F8F2;" data-v-e78ad3c0>);</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  material </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e78ad3c0> new</span><span style="color:#BD93F9;" data-v-e78ad3c0> THREE</span><span style="color:#F8F8F2;" data-v-e78ad3c0>.</span><span style="color:#50FA7B;" data-v-e78ad3c0>MeshPhongMaterial</span><span style="color:#F8F8F2;" data-v-e78ad3c0>({</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>    side</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#BD93F9;" data-v-e78ad3c0> THREE</span><span style="color:#F8F8F2;" data-v-e78ad3c0>.DoubleSide, </span><span style="color:#6272A4;" data-v-e78ad3c0>// 双面显示</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>    alphaMap</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#F8F8F2;" data-v-e78ad3c0> texture, </span><span style="color:#6272A4;" data-v-e78ad3c0>// 设置透明度贴图</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>    alphaTest</span><span style="color:#FF79C6;" data-v-e78ad3c0>:</span><span style="color:#BD93F9;" data-v-e78ad3c0> 0.5</span><span style="color:#6272A4;" data-v-e78ad3c0> // 设置透明度阈值</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  });</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  sphere </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e78ad3c0> new</span><span style="color:#BD93F9;" data-v-e78ad3c0> THREE</span><span style="color:#F8F8F2;" data-v-e78ad3c0>.</span><span style="color:#50FA7B;" data-v-e78ad3c0>Mesh</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(geometry, material);</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 开启球体阴影和接收阴影</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  sphere.castShadow </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#BD93F9;" data-v-e78ad3c0> true</span><span style="color:#F8F8F2;" data-v-e78ad3c0>;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  sphere.receiveShadow </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#BD93F9;" data-v-e78ad3c0> true</span><span style="color:#F8F8F2;" data-v-e78ad3c0>;</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 将球体添加到光源上</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  light.</span><span style="color:#50FA7B;" data-v-e78ad3c0>add</span><span style="color:#F8F8F2;" data-v-e78ad3c0>(sphere);</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 返回创建的光源</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>  return</span><span style="color:#F8F8F2;" data-v-e78ad3c0> light;</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>}</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>/**</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0> * 生成一个 2x2 的纯白色 canvas 纹理</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0> */</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>function</span><span style="color:#50FA7B;" data-v-e78ad3c0> generateTexture</span><span style="color:#F8F8F2;" data-v-e78ad3c0>() {</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 创建一个 canvas 元素，并设置它的宽高为 2</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>  const</span><span style="color:#F8F8F2;" data-v-e78ad3c0> canvas </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#F8F8F2;" data-v-e78ad3c0> document.</span><span style="color:#50FA7B;" data-v-e78ad3c0>createElement</span><span style="color:#F8F8F2;" data-v-e78ad3c0>( </span><span style="color:#E9F284;" data-v-e78ad3c0>&#39;</span><span style="color:#F1FA8C;" data-v-e78ad3c0>canvas</span><span style="color:#E9F284;" data-v-e78ad3c0>&#39;</span><span style="color:#F8F8F2;" data-v-e78ad3c0> );</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  canvas.width </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#BD93F9;" data-v-e78ad3c0> 2</span><span style="color:#F8F8F2;" data-v-e78ad3c0>;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  canvas.height </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#BD93F9;" data-v-e78ad3c0> 2</span><span style="color:#F8F8F2;" data-v-e78ad3c0>;</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 获取 canvas 的绘制上下文，并将其填充为白色</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>  const</span><span style="color:#F8F8F2;" data-v-e78ad3c0> context </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#F8F8F2;" data-v-e78ad3c0> canvas.</span><span style="color:#50FA7B;" data-v-e78ad3c0>getContext</span><span style="color:#F8F8F2;" data-v-e78ad3c0>( </span><span style="color:#E9F284;" data-v-e78ad3c0>&#39;</span><span style="color:#F1FA8C;" data-v-e78ad3c0>2d</span><span style="color:#E9F284;" data-v-e78ad3c0>&#39;</span><span style="color:#F8F8F2;" data-v-e78ad3c0> );</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  context.fillStyle </span><span style="color:#FF79C6;" data-v-e78ad3c0>=</span><span style="color:#E9F284;" data-v-e78ad3c0> &#39;</span><span style="color:#F1FA8C;" data-v-e78ad3c0>white</span><span style="color:#E9F284;" data-v-e78ad3c0>&#39;</span><span style="color:#F8F8F2;" data-v-e78ad3c0>;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>  context.</span><span style="color:#50FA7B;" data-v-e78ad3c0>fillRect</span><span style="color:#F8F8F2;" data-v-e78ad3c0>( </span><span style="color:#BD93F9;" data-v-e78ad3c0>0</span><span style="color:#F8F8F2;" data-v-e78ad3c0>, </span><span style="color:#BD93F9;" data-v-e78ad3c0>1</span><span style="color:#F8F8F2;" data-v-e78ad3c0>, </span><span style="color:#BD93F9;" data-v-e78ad3c0>2</span><span style="color:#F8F8F2;" data-v-e78ad3c0>, </span><span style="color:#BD93F9;" data-v-e78ad3c0>1</span><span style="color:#F8F8F2;" data-v-e78ad3c0> );</span></span>
<span class="line" data-v-e78ad3c0></span>
<span class="line" data-v-e78ad3c0><span style="color:#6272A4;" data-v-e78ad3c0>  // 返回生成的纹理</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#FF79C6;" data-v-e78ad3c0>  return</span><span style="color:#F8F8F2;" data-v-e78ad3c0> canvas;</span></span>
<span class="line" data-v-e78ad3c0><span style="color:#F8F8F2;" data-v-e78ad3c0>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-e78ad3c0><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div><div class="line-number" data-v-e78ad3c0></div></div></div>`,1)),P("div",ya,null,512)])}const Ba=V(ia,[["render",ma],["__scopeId","data-v-e78ad3c0"],["__file","threejs-light.html.vue"]]),wa=JSON.parse('{"path":"/threejs/threejs-light.html","title":"ThreeJS中的灯光","lang":"en-US","frontmatter":{"title":"ThreeJS中的灯光","category":["ThreeJS"],"date":"2022-03-07T00:00:00.000Z","description":"参考：https://blog/threejs.org/","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/threejs/threejs-light.html"}],["meta",{"property":"og:title","content":"ThreeJS中的灯光"}],["meta",{"property":"og:description","content":"参考：https://blog/threejs.org/"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-03T14:28:14.000Z"}],["meta",{"property":"article:published_time","content":"2022-03-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-03T14:28:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ThreeJS中的灯光\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-07T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-03T14:28:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[],"git":{"createdTime":1682066702000,"updatedTime":1730644094000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":5},{"name":"卢祥","email":"example@qq.com","commits":2}]},"readingTime":{"minutes":5.52,"words":1656},"filePathRelative":"threejs/threejs-light.md","localizedDate":"March 7, 2022","excerpt":"<p>参考：<a href=\\"https://blog/threejs.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://blog/threejs.org/</a></p>","autoDesc":true}');export{Ba as comp,wa as data};
