import{_ as n,c as a,a as l,o as e}from"./app-sHEEJrqx.js";const p="/blog/assets/1680123401103152225-TO6syPpq.png",o="/blog/assets/1680123401104103123-B6uxrfSc.png",F="/blog/assets/1680123401104104223-DlWjWm1q.png",c={};function i(t,s){return e(),a("div",null,s[0]||(s[0]=[l(`<h2 id="内置指令" tabindex="-1"><a class="header-anchor" href="#内置指令"><span>内置指令</span></a></h2><h3 id="v-model" tabindex="-1"><a class="header-anchor" href="#v-model"><span>v-model</span></a></h3><p>v-model 本质上不过是语法糖。</p><p>v-model 在内部为不同的输入元素使用不同的 property 并抛出不同的事件：</p><ul><li>text 和 textarea 元素使用 value property 和 input 事件；</li><li>checkbox 和 radio 使用 checked property 和 change 事件；</li><li>select 字段将 value 作为 prop 并将 change 作为事件。</li></ul><p>原生元素</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">input</span><span style="color:#50FA7B;font-style:italic;"> v-model</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">pageName</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> /&gt;;</span></span>
<span class="line"><span style="color:#6272A4;">// render</span></span>
<span class="line"><span style="color:#50FA7B;">_c</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">input</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  directives</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">      name</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">model</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      rawName</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">v-model</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      value</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> _vm.pageName,</span></span>
<span class="line"><span style="color:#F8F8F2;">      expression</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">pageName</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">  ],</span></span>
<span class="line"><span style="color:#F8F8F2;">  domProps</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { value</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> _vm.pageName },</span></span>
<span class="line"><span style="color:#F8F8F2;">  on</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">    input</span><span style="color:#FF79C6;">:</span><span style="color:#FF79C6;"> function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">$event</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> ($event.target.composing) {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">      _vm.pageName </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> $event.target.value;</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">Vue.</span><span style="color:#50FA7B;">component</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">base-checkbox</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  model</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    prop</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">checked</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    event</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">change</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  props</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    checked</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> Boolean,</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  template</span><span style="color:#FF79C6;">:</span><span style="color:#F1FA8C;"> \`</span></span>
<span class="line"><span style="color:#F1FA8C;">    &lt;input</span></span>
<span class="line"><span style="color:#F1FA8C;">      type=&quot;checkbox&quot;</span></span>
<span class="line"><span style="color:#F1FA8C;">      v-bind:checked=&quot;checked&quot;</span></span>
<span class="line"><span style="color:#F1FA8C;">      v-on:change=&quot;$emit(&#39;change&#39;, $event.target.checked)&quot;</span></span>
<span class="line"><span style="color:#F1FA8C;">    &gt;</span></span>
<span class="line"><span style="color:#F1FA8C;">  \`</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#6272A4;">// 使用</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">base-checkbox</span><span style="color:#50FA7B;font-style:italic;"> v-model</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">lovingVue</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;&lt;/</span><span style="color:#8BE9FD;font-style:italic;">base-checkbox</span><span style="color:#F8F8F2;">&gt;;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="v-if" tabindex="-1"><a class="header-anchor" href="#v-if"><span>v-if</span></a></h3><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">img</span><span style="color:#50FA7B;font-style:italic;"> v-if</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">isFalse</span><span style="color:#E9F284;">&quot;</span><span style="color:#50FA7B;font-style:italic;"> alt</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Vue logo</span><span style="color:#E9F284;">&quot;</span><span style="color:#50FA7B;font-style:italic;"> src</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">./assets/logo.png</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#6272A4;">  // render()</span></span>
<span class="line"><span style="color:#F8F8F2;">  _vm.isFalse</span></span>
<span class="line"><span style="color:#FF79C6;">        ?</span><span style="color:#50FA7B;"> _c</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">img</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">            attrs</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { alt</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">Vue logo</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, src</span><span style="color:#FF79C6;">:</span><span style="color:#50FA7B;"> require</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">./assets/logo.png</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">) },</span></span>
<span class="line"><span style="color:#F8F8F2;">          })</span></span>
<span class="line"><span style="color:#FF79C6;">        :</span><span style="color:#F8F8F2;"> _vm.</span><span style="color:#50FA7B;">_e</span><span style="color:#F8F8F2;">(),</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="v-for" tabindex="-1"><a class="header-anchor" href="#v-for"><span>v-for</span></a></h3><h2 id="自定义指令" tabindex="-1"><a class="header-anchor" href="#自定义指令"><span>自定义指令</span></a></h2><h3 id="全局方法" tabindex="-1"><a class="header-anchor" href="#全局方法"><span>全局方法</span></a></h3><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// 注册</span></span>
<span class="line"><span style="color:#F8F8F2;">Vue.</span><span style="color:#50FA7B;">directive</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">my-directive</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#50FA7B;">  bind</span><span style="color:#FF79C6;">:</span><span style="color:#FF79C6;"> function</span><span style="color:#F8F8F2;"> () {},</span></span>
<span class="line"><span style="color:#50FA7B;">  inserted</span><span style="color:#FF79C6;">:</span><span style="color:#FF79C6;"> function</span><span style="color:#F8F8F2;"> () {},</span></span>
<span class="line"><span style="color:#50FA7B;">  update</span><span style="color:#FF79C6;">:</span><span style="color:#FF79C6;"> function</span><span style="color:#F8F8F2;"> () {},</span></span>
<span class="line"><span style="color:#50FA7B;">  componentUpdated</span><span style="color:#FF79C6;">:</span><span style="color:#FF79C6;"> function</span><span style="color:#F8F8F2;"> () {},</span></span>
<span class="line"><span style="color:#50FA7B;">  unbind</span><span style="color:#FF79C6;">:</span><span style="color:#FF79C6;"> function</span><span style="color:#F8F8F2;"> () {},</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>bind：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。</p></li><li><p>inserted：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。</p></li><li><p>update：所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前。指令的值可能发生了改变，也可能没有。</p></li><li><p>componentUpdated：指令所在组件的 VNode 及其子 VNode 全部更新后调用。</p></li><li><p>unbind：只调用一次，指令与元素解绑时调用。</p></li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">Vue[</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">direction</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> function</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  id</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> string</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#50FA7B;">  definition</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> Object</span></span>
<span class="line"><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> Object</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> void</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">definition) {</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.options[</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">directions</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">][id];</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  definition </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { bind</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> definition, update</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> definition };</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">  this</span><span style="color:#F8F8F2;">.options[</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">directions</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">][id] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> definition;</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> definition;</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 注册一个全局自定义指令 \`v-focus\`</span></span>
<span class="line"><span style="color:#F8F8F2;">Vue.</span><span style="color:#50FA7B;">directive</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">focus</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#6272A4;">  // 当被绑定的元素插入到 DOM 中时……</span></span>
<span class="line"><span style="color:#50FA7B;">  inserted</span><span style="color:#FF79C6;">:</span><span style="color:#FF79C6;"> function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">el</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">    // 聚焦元素</span></span>
<span class="line"><span style="color:#F8F8F2;">    el.</span><span style="color:#50FA7B;">focus</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">input</span><span style="color:#50FA7B;font-style:italic;"> v-focus</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#6272A4;">  // render</span></span>
<span class="line"><span style="color:#50FA7B;">_c</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">input</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, { directives</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [{ name</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">focus</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, rawName</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">v-focus</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> }] }),</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="局部方法" tabindex="-1"><a class="header-anchor" href="#局部方法"><span>局部方法</span></a></h3><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">directives: {</span></span>
<span class="line"><span style="color:#F8F8F2;">  focus: {</span></span>
<span class="line"><span style="color:#6272A4;">    // 指令的定义</span></span>
<span class="line"><span style="color:#F8F8F2;">    inserted: </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">el</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      el.</span><span style="color:#50FA7B;">focus</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="指令解析" tabindex="-1"><a class="header-anchor" href="#指令解析"><span>指令解析</span></a></h3><p>template =&gt; AST</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">div</span><span style="color:#50FA7B;font-style:italic;"> id</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">app</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;</span><span style="color:#FF79C6;">input</span><span style="color:#50FA7B;font-style:italic;"> v-focus</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;/</span><span style="color:#FF79C6;">div</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+o+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><details class="hint-container details"><summary>render</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">with</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#50FA7B;"> _c</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">div</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, { attrs</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { id</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">app</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> } }, [</span></span>
<span class="line"><span style="color:#50FA7B;">    _c</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">input</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, { directives</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [{ name</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">focus</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, rawName</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">v-focus</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> }] }),</span></span>
<span class="line"><span style="color:#F8F8F2;">  ]);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><figure><img src="`+F+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>src/compiler/parser/index.ts</code><code>parseHTML()</code> =&gt; <code>end()</code> =&gt; <code>closeElement()</code> =&gt; <code>processElement</code> =&gt; <code>processAttrs</code></p><details class="hint-container details"><summary>processAttrs</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> processAttrs</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">el</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> list </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> el.attrsList;</span></span>
<span class="line"><span style="color:#FF79C6;">  let</span><span style="color:#F8F8F2;"> i, l, name, rawName, value, modifiers, syncGen, isDynamic;</span></span>
<span class="line"><span style="color:#FF79C6;">  for</span><span style="color:#F8F8F2;"> (i </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">, l </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> list.length; i </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;"> l; i</span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> rawName </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> list[i].name;</span></span>
<span class="line"><span style="color:#F8F8F2;">    value </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> list[i].value;</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (dirRE.</span><span style="color:#50FA7B;">test</span><span style="color:#F8F8F2;">(name)) {</span></span>
<span class="line"><span style="color:#6272A4;">      // mark element as dynamic</span></span>
<span class="line"><span style="color:#F8F8F2;">      el.hasBindings </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">      // modifiers</span></span>
<span class="line"><span style="color:#F8F8F2;">      modifiers </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> parseModifiers</span><span style="color:#F8F8F2;">(name.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(dirRE, </span><span style="color:#E9F284;">&quot;&quot;</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#6272A4;">      // support .foo shorthand syntax for the .prop modifier</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (process.env.</span><span style="color:#BD93F9;">VBIND_PROP_SHORTHAND</span><span style="color:#FF79C6;"> &amp;&amp;</span><span style="color:#F8F8F2;"> propBindRE.</span><span style="color:#50FA7B;">test</span><span style="color:#F8F8F2;">(name)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        (modifiers </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> (modifiers </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {})).prop </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        name </span><span style="color:#FF79C6;">=</span><span style="color:#F1FA8C;"> \`.\`</span><span style="color:#FF79C6;"> +</span><span style="color:#F8F8F2;"> name.</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">).</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(modifierRE, </span><span style="color:#E9F284;">&quot;&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">      } </span><span style="color:#FF79C6;">else</span><span style="color:#FF79C6;"> if</span><span style="color:#F8F8F2;"> (modifiers) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> name.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(modifierRE, </span><span style="color:#E9F284;">&quot;&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#6272A4;">      // export const bindRE = /^:|^\\.|^v-bind:/</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (bindRE.</span><span style="color:#50FA7B;">test</span><span style="color:#F8F8F2;">(name)) {</span></span>
<span class="line"><span style="color:#6272A4;">        // v-bind</span></span>
<span class="line"><span style="color:#F8F8F2;">        name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> name.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(bindRE, </span><span style="color:#E9F284;">&quot;&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        value </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> parseFilters</span><span style="color:#F8F8F2;">(value);</span></span>
<span class="line"><span style="color:#F8F8F2;">        isDynamic </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> dynamicArgRE.</span><span style="color:#50FA7B;">test</span><span style="color:#F8F8F2;">(name);</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (isDynamic) {</span></span>
<span class="line"><span style="color:#F8F8F2;">          name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> name.</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">-</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (modifiers) {</span></span>
<span class="line"><span style="color:#FF79C6;">          if</span><span style="color:#F8F8F2;"> (modifiers.prop </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#FF79C6;"> !</span><span style="color:#F8F8F2;">isDynamic) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            name </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> camelize</span><span style="color:#F8F8F2;">(name);</span></span>
<span class="line"><span style="color:#FF79C6;">            if</span><span style="color:#F8F8F2;"> (name </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">innerHtml</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">) name </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">innerHTML</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">          }</span></span>
<span class="line"><span style="color:#FF79C6;">          if</span><span style="color:#F8F8F2;"> (modifiers.camel </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#FF79C6;"> !</span><span style="color:#F8F8F2;">isDynamic) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            name </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> camelize</span><span style="color:#F8F8F2;">(name);</span></span>
<span class="line"><span style="color:#F8F8F2;">          }</span></span>
<span class="line"><span style="color:#FF79C6;">          if</span><span style="color:#F8F8F2;"> (modifiers.sync) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            syncGen </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> genAssignmentCode</span><span style="color:#F8F8F2;">(value, </span><span style="color:#F1FA8C;">\`$event\`</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">            if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">isDynamic) {</span></span>
<span class="line"><span style="color:#50FA7B;">              addHandler</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">                el,</span></span>
<span class="line"><span style="color:#F1FA8C;">                \`update:</span><span style="color:#FF79C6;">\${</span><span style="color:#50FA7B;">camelize</span><span style="color:#F8F8F2;">(name)</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">\`</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">                syncGen,</span></span>
<span class="line"><span style="color:#BD93F9;">                null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#BD93F9;">                false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">                warn,</span></span>
<span class="line"><span style="color:#F8F8F2;">                list[i]</span></span>
<span class="line"><span style="color:#F8F8F2;">              );</span></span>
<span class="line"><span style="color:#FF79C6;">              if</span><span style="color:#F8F8F2;"> (</span><span style="color:#50FA7B;">hyphenate</span><span style="color:#F8F8F2;">(name) </span><span style="color:#FF79C6;">!==</span><span style="color:#50FA7B;"> camelize</span><span style="color:#F8F8F2;">(name)) {</span></span>
<span class="line"><span style="color:#50FA7B;">                addHandler</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">                  el,</span></span>
<span class="line"><span style="color:#F1FA8C;">                  \`update:</span><span style="color:#FF79C6;">\${</span><span style="color:#50FA7B;">hyphenate</span><span style="color:#F8F8F2;">(name)</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">\`</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">                  syncGen,</span></span>
<span class="line"><span style="color:#BD93F9;">                  null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#BD93F9;">                  false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">                  warn,</span></span>
<span class="line"><span style="color:#F8F8F2;">                  list[i]</span></span>
<span class="line"><span style="color:#F8F8F2;">                );</span></span>
<span class="line"><span style="color:#F8F8F2;">              }</span></span>
<span class="line"><span style="color:#F8F8F2;">            } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">              // handler w/ dynamic event name</span></span>
<span class="line"><span style="color:#50FA7B;">              addHandler</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">                el,</span></span>
<span class="line"><span style="color:#F1FA8C;">                \`&quot;update:&quot;+(</span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">name</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">)\`</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">                syncGen,</span></span>
<span class="line"><span style="color:#BD93F9;">                null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#BD93F9;">                false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">                warn,</span></span>
<span class="line"><span style="color:#F8F8F2;">                list[i],</span></span>
<span class="line"><span style="color:#BD93F9;">                true</span><span style="color:#6272A4;"> // dynamic</span></span>
<span class="line"><span style="color:#F8F8F2;">              );</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">          }</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#F8F8F2;">          (modifiers </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> modifiers.prop) </span><span style="color:#FF79C6;">||</span></span>
<span class="line"><span style="color:#F8F8F2;">          (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">el.component </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#50FA7B;"> platformMustUseProp</span><span style="color:#F8F8F2;">(el.tag, el.attrsMap.type, name))</span></span>
<span class="line"><span style="color:#F8F8F2;">        ) {</span></span>
<span class="line"><span style="color:#50FA7B;">          addProp</span><span style="color:#F8F8F2;">(el, name, value, list[i], isDynamic);</span></span>
<span class="line"><span style="color:#F8F8F2;">        } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">          addAttr</span><span style="color:#F8F8F2;">(el, name, value, list[i], isDynamic);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      } </span><span style="color:#FF79C6;">else</span><span style="color:#FF79C6;"> if</span><span style="color:#F8F8F2;"> (onRE.</span><span style="color:#50FA7B;">test</span><span style="color:#F8F8F2;">(name)) {</span></span>
<span class="line"><span style="color:#6272A4;">        // v-on</span></span>
<span class="line"><span style="color:#F8F8F2;">        name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> name.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(onRE, </span><span style="color:#E9F284;">&quot;&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        isDynamic </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> dynamicArgRE.</span><span style="color:#50FA7B;">test</span><span style="color:#F8F8F2;">(name);</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (isDynamic) {</span></span>
<span class="line"><span style="color:#F8F8F2;">          name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> name.</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">-</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#50FA7B;">        addHandler</span><span style="color:#F8F8F2;">(el, name, value, modifiers, </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">, warn, list[i], isDynamic);</span></span>
<span class="line"><span style="color:#F8F8F2;">      } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">        // normal directives</span></span>
<span class="line"><span style="color:#6272A4;">        /*</span></span>
<span class="line"><span style="color:#6272A4;">        export const dirRE = process.env.VBIND_PROP_SHORTHAND</span></span>
<span class="line"><span style="color:#6272A4;">        ? /^v-|^@|^:|^\\.|^#/</span></span>
<span class="line"><span style="color:#6272A4;">        : /^v-|^@|^:|^#/</span></span>
<span class="line"><span style="color:#6272A4;">        */</span></span>
<span class="line"><span style="color:#F8F8F2;">        name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> name.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(dirRE, </span><span style="color:#E9F284;">&quot;&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">        // parse arg</span></span>
<span class="line"><span style="color:#FF79C6;">        const</span><span style="color:#F8F8F2;"> argMatch </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> name.</span><span style="color:#50FA7B;">match</span><span style="color:#F8F8F2;">(argRE);</span></span>
<span class="line"><span style="color:#FF79C6;">        let</span><span style="color:#F8F8F2;"> arg </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> argMatch </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> argMatch[</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">        isDynamic </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (arg) {</span></span>
<span class="line"><span style="color:#F8F8F2;">          name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> name.</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;">(arg.length </span><span style="color:#FF79C6;">+</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#FF79C6;">          if</span><span style="color:#F8F8F2;"> (dynamicArgRE.</span><span style="color:#50FA7B;">test</span><span style="color:#F8F8F2;">(arg)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            arg </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> arg.</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">-</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            isDynamic </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">          }</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#6272A4;">        // 把处理的指令 添加到 directives属性</span></span>
<span class="line"><span style="color:#50FA7B;">        addDirective</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">          el,</span></span>
<span class="line"><span style="color:#F8F8F2;">          name,</span></span>
<span class="line"><span style="color:#F8F8F2;">          rawName,</span></span>
<span class="line"><span style="color:#F8F8F2;">          value,</span></span>
<span class="line"><span style="color:#F8F8F2;">          arg,</span></span>
<span class="line"><span style="color:#F8F8F2;">          isDynamic,</span></span>
<span class="line"><span style="color:#F8F8F2;">          modifiers,</span></span>
<span class="line"><span style="color:#F8F8F2;">          list[i]</span></span>
<span class="line"><span style="color:#F8F8F2;">        );</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">      addAttr</span><span style="color:#F8F8F2;">(el, name, </span><span style="color:#BD93F9;">JSON</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">stringify</span><span style="color:#F8F8F2;">(value), list[i]);</span></span>
<span class="line"><span style="color:#6272A4;">      // #6887 firefox doesn&#39;t update muted state if set via attribute</span></span>
<span class="line"><span style="color:#6272A4;">      // even immediately after element creation</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#FF79C6;">        !</span><span style="color:#F8F8F2;">el.component </span><span style="color:#FF79C6;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F8F8F2;">        name </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">muted</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> &amp;&amp;</span></span>
<span class="line"><span style="color:#50FA7B;">        platformMustUseProp</span><span style="color:#F8F8F2;">(el.tag, el.attrsMap.type, name)</span></span>
<span class="line"><span style="color:#F8F8F2;">      ) {</span></span>
<span class="line"><span style="color:#50FA7B;">        addProp</span><span style="color:#F8F8F2;">(el, name, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">true</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, list[i]);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="指令生效" tabindex="-1"><a class="header-anchor" href="#指令生效"><span>指令生效</span></a></h3><p><code>patch()</code> =&gt; <code>createElm()</code> =&gt; <code>invokeCreateHooks()</code> =&gt; <code>crate() = updateDirectives()</code></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  create</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> updateDirectives,</span></span>
<span class="line"><span style="color:#F8F8F2;">  update</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> updateDirectives,</span></span>
<span class="line"><span style="color:#50FA7B;">  destroy</span><span style="color:#FF79C6;">:</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> unbindDirectives</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">vnode</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> VNodeWithData</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">    // @ts-expect-error emptyNode is not VNodeWithData</span></span>
<span class="line"><span style="color:#50FA7B;">    updateDirectives</span><span style="color:#F8F8F2;">(vnode, emptyNode);</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> updateDirectives</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">oldVnode</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> VNodeWithData</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">vnode</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> VNodeWithData</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (oldVnode.data.directives </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> vnode.data.directives) {</span></span>
<span class="line"><span style="color:#50FA7B;">    _update</span><span style="color:#F8F8F2;">(oldVnode, vnode);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> _update</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">oldVnode</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">vnode</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> isCreate </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> oldVnode </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> emptyNode;</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> isDestroy </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> vnode </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> emptyNode;</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> oldDirs </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> normalizeDirectives</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">    oldVnode.data.directives,</span></span>
<span class="line"><span style="color:#F8F8F2;">    oldVnode.context</span></span>
<span class="line"><span style="color:#F8F8F2;">  );</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> newDirs </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> normalizeDirectives</span><span style="color:#F8F8F2;">(vnode.data.directives, vnode.context);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> dirsWithInsert</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> any</span><span style="color:#F8F8F2;">[] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [];</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> dirsWithPostpatch</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> any</span><span style="color:#F8F8F2;">[] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">  let</span><span style="color:#F8F8F2;"> key, oldDir, dir;</span></span>
<span class="line"><span style="color:#FF79C6;">  for</span><span style="color:#F8F8F2;"> (key </span><span style="color:#FF79C6;">in</span><span style="color:#F8F8F2;"> newDirs) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    oldDir </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> oldDirs[key];</span></span>
<span class="line"><span style="color:#F8F8F2;">    dir </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> newDirs[key];</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">oldDir) {</span></span>
<span class="line"><span style="color:#6272A4;">      // new directive, bind</span></span>
<span class="line"><span style="color:#50FA7B;">      callHook</span><span style="color:#F8F8F2;">(dir, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">bind</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, vnode, oldVnode);</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (dir.def </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> dir.def.inserted) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        dirsWithInsert.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(dir);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">      // existing directive, update</span></span>
<span class="line"><span style="color:#F8F8F2;">      dir.oldValue </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> oldDir.value;</span></span>
<span class="line"><span style="color:#F8F8F2;">      dir.oldArg </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> oldDir.arg;</span></span>
<span class="line"><span style="color:#50FA7B;">      callHook</span><span style="color:#F8F8F2;">(dir, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">update</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, vnode, oldVnode);</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (dir.def </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> dir.def.componentUpdated) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        dirsWithPostpatch.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(dir);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (dirsWithInsert.length) {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#50FA7B;"> callInsert</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">      for</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;"> dirsWithInsert.length; i</span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">        callHook</span><span style="color:#F8F8F2;">(dirsWithInsert[i], </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">inserted</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, vnode, oldVnode);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (isCreate) {</span></span>
<span class="line"><span style="color:#50FA7B;">      mergeVNodeHook</span><span style="color:#F8F8F2;">(vnode, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">insert</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, callInsert);</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">      callInsert</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (dirsWithPostpatch.length) {</span></span>
<span class="line"><span style="color:#50FA7B;">    mergeVNodeHook</span><span style="color:#F8F8F2;">(vnode, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">postpatch</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">      for</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;"> dirsWithPostpatch.length; i</span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">        callHook</span><span style="color:#F8F8F2;">(dirsWithPostpatch[i], </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">componentUpdated</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, vnode, oldVnode);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">isCreate) {</span></span>
<span class="line"><span style="color:#FF79C6;">    for</span><span style="color:#F8F8F2;"> (key </span><span style="color:#FF79C6;">in</span><span style="color:#F8F8F2;"> oldDirs) {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">newDirs[key]) {</span></span>
<span class="line"><span style="color:#6272A4;">        // no longer present, unbind</span></span>
<span class="line"><span style="color:#50FA7B;">        callHook</span><span style="color:#F8F8F2;">(oldDirs[key], </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">unbind</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, oldVnode, oldVnode, isDestroy);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,29)]))}const d=n(c,[["render",i],["__file","direct-code-analysis.html.vue"]]),y=JSON.parse('{"path":"/vue2/direct-code-analysis.html","title":"Vue2.x 指令原理","lang":"en-US","frontmatter":{"title":"Vue2.x 指令原理","category":["Vue"],"type":["vue2"],"date":"2021-10-11T00:00:00.000Z","description":"内置指令 v-model v-model 本质上不过是语法糖。 v-model 在内部为不同的输入元素使用不同的 property 并抛出不同的事件： text 和 textarea 元素使用 value property 和 input 事件； checkbox 和 radio 使用 checked property 和 change 事件； sel...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/vue2/direct-code-analysis.html"}],["meta",{"property":"og:title","content":"Vue2.x 指令原理"}],["meta",{"property":"og:description","content":"内置指令 v-model v-model 本质上不过是语法糖。 v-model 在内部为不同的输入元素使用不同的 property 并抛出不同的事件： text 和 textarea 元素使用 value property 和 input 事件； checkbox 和 radio 使用 checked property 和 change 事件； sel..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2022-12-30T06:28:03.000Z"}],["meta",{"property":"article:published_time","content":"2021-10-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-30T06:28:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue2.x 指令原理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-10-11T00:00:00.000Z\\",\\"dateModified\\":\\"2022-12-30T06:28:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"内置指令","slug":"内置指令","link":"#内置指令","children":[{"level":3,"title":"v-model","slug":"v-model","link":"#v-model","children":[]},{"level":3,"title":"v-if","slug":"v-if","link":"#v-if","children":[]},{"level":3,"title":"v-for","slug":"v-for","link":"#v-for","children":[]}]},{"level":2,"title":"自定义指令","slug":"自定义指令","link":"#自定义指令","children":[{"level":3,"title":"全局方法","slug":"全局方法","link":"#全局方法","children":[]},{"level":3,"title":"局部方法","slug":"局部方法","link":"#局部方法","children":[]},{"level":3,"title":"指令解析","slug":"指令解析","link":"#指令解析","children":[]}]}],"git":{"createdTime":1667467926000,"updatedTime":1672381683000,"contributors":[{"name":"卢祥","email":"example@gmail.com","commits":2},{"name":"卢祥","email":"example@qq.com","commits":2},{"name":"luxiag","email":"luxiag@qq.com","commits":1},{"name":"luxiang","email":"luxiag@qq.com","commits":1}]},"readingTime":{"minutes":3.51,"words":1052},"filePathRelative":"vue2/direct-code-analysis.md","localizedDate":"October 11, 2021","excerpt":"<h2>内置指令</h2>\\n<h3>v-model</h3>\\n<p>v-model 本质上不过是语法糖。</p>\\n<p>v-model 在内部为不同的输入元素使用不同的 property 并抛出不同的事件：</p>","autoDesc":true}');export{d as comp,y as data};
