import{_ as oe,h as G,i as R,q as re,c as ce,b as de,d as pe,o as he}from"./app-YFqS9NBE.js";import{m as ue,l as me,i as ge,ay as Fe,az as ve,z as ye,p as be,q as Ae,aA as fe,aB as we,aC as xe,W as _e,r as Ee,s as Ce}from"./three.module-BzA_QsZm.js";import{G as J}from"./GLTFLoader-CQSwUyoN.js";/**
 * lil-gui
 * https://lil-gui.georgealways.com
 * @version 0.17.0
 * @author George Michael Brower
 * @license MIT
 */class x{constructor(e,t,i,a,c="div"){this.parent=e,this.object=t,this.property=i,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement("div"),this.domElement.classList.add("controller"),this.domElement.classList.add(a),this.$name=document.createElement("div"),this.$name.classList.add("name"),x.nextNameID=x.nextNameID||0,this.$name.id="lil-gui-name-"+ ++x.nextNameID,this.$widget=document.createElement(c),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(i)}name(e){return this._name=e,this.$name.innerHTML=e,this}onChange(e){return this._onChange=e,this}_callOnChange(){this.parent._callOnChange(this),this._onChange!==void 0&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),this._onFinishChange!==void 0&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(e=!0){return this.disable(!e)}disable(e=!0){return e===this._disabled||(this._disabled=e,this.domElement.classList.toggle("disabled",e),this.$disable.toggleAttribute("disabled",e)),this}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(e){const t=this.parent.add(this.object,this.property,e);return t.name(this._name),this.destroy(),t}min(e){return this}max(e){return this}step(e){return this}decimals(e){return this}listen(e=!0){return this._listening=e,this._listenCallbackID!==void 0&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const e=this.save();e!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=e}getValue(){return this.object[this.property]}setValue(e){return this.object[this.property]=e,this._callOnChange(),this.updateDisplay(),this}updateDisplay(){return this}load(e){return this.setValue(e),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class ke extends x{constructor(e,t,i){super(e,t,i,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",()=>{this.setValue(this.$input.checked),this._callOnFinishChange()}),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function O(o){let e,t;return(e=o.match(/(#|0x)?([a-f0-9]{6})/i))?t=e[2]:(e=o.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?t=parseInt(e[1]).toString(16).padStart(2,0)+parseInt(e[2]).toString(16).padStart(2,0)+parseInt(e[3]).toString(16).padStart(2,0):(e=o.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(t=e[1]+e[1]+e[2]+e[2]+e[3]+e[3]),!!t&&"#"+t}const $e={isPrimitive:!0,match:o=>typeof o=="string",fromHexString:O,toHexString:O},j={isPrimitive:!0,match:o=>typeof o=="number",fromHexString:o=>parseInt(o.substring(1),16),toHexString:o=>"#"+o.toString(16).padStart(6,0)},Se={isPrimitive:!1,match:Array.isArray,fromHexString(o,e,t=1){const i=j.fromHexString(o);e[0]=(i>>16&255)/255*t,e[1]=(i>>8&255)/255*t,e[2]=(255&i)/255*t},toHexString:([o,e,t],i=1)=>j.toHexString(o*(i=255/i)<<16^e*i<<8^t*i<<0)},Be={isPrimitive:!1,match:o=>Object(o)===o,fromHexString(o,e,t=1){const i=j.fromHexString(o);e.r=(i>>16&255)/255*t,e.g=(i>>8&255)/255*t,e.b=(255&i)/255*t},toHexString:({r:o,g:e,b:t},i=1)=>j.toHexString(o*(i=255/i)<<16^e*i<<8^t*i<<0)},De=[$e,j,Se,Be];class Le extends x{constructor(e,t,i,a){var c;super(e,t,i,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=(c=this.initialValue,De.find(n=>n.match(c))),this._rgbScale=a,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",()=>{this._setValueFromHexString(this.$input.value)}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$text.addEventListener("input",()=>{const n=O(this.$text.value);n&&this._setValueFromHexString(n)}),this.$text.addEventListener("focus",()=>{this._textFocused=!0,this.$text.select()}),this.$text.addEventListener("blur",()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()}),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(e){if(this._format.isPrimitive){const t=this._format.fromHexString(e);this.setValue(t)}else this._format.fromHexString(e,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(e){return this._setValueFromHexString(e),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class z extends x{constructor(e,t,i){super(e,t,i,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",a=>{a.preventDefault(),this.getValue().call(this.object)}),this.$button.addEventListener("touchstart",()=>{},{passive:!0}),this.$disable=this.$button}}class je extends x{constructor(e,t,i,a,c,n){super(e,t,i,"number"),this._initInput(),this.min(a),this.max(c);const m=n!==void 0;this.step(m?n:this._getImplicitStep(),m),this.updateDisplay()}decimals(e){return this._decimals=e,this.updateDisplay(),this}min(e){return this._min=e,this._onUpdateMinMax(),this}max(e){return this._max=e,this._onUpdateMinMax(),this}step(e,t=!0){return this._step=e,this._stepExplicit=t,this}updateDisplay(){const e=this.getValue();if(this._hasSlider){let t=(e-this._min)/(this._max-this._min);t=Math.max(0,Math.min(t,1)),this.$fill.style.width=100*t+"%"}return this._inputFocused||(this.$input.value=this._decimals===void 0?e:e.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$disable=this.$input;const e=l=>{const F=parseFloat(this.$input.value);isNaN(F)||(this._snapClampSetValue(F+l),this.$input.value=this.getValue())};let t,i,a,c,n,m=!1;const h=l=>{if(m){const F=l.clientX-t,r=l.clientY-i;Math.abs(r)>5?(l.preventDefault(),this.$input.blur(),m=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(F)>5&&g()}if(!m){const F=l.clientY-a;n-=F*this._step*this._arrowKeyMultiplier(l),c+n>this._max?n=this._max-c:c+n<this._min&&(n=this._min-c),this._snapClampSetValue(c+n)}a=l.clientY},g=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",h),window.removeEventListener("mouseup",g)};this.$input.addEventListener("input",()=>{let l=parseFloat(this.$input.value);isNaN(l)||(this._stepExplicit&&(l=this._snap(l)),this.setValue(this._clamp(l)))}),this.$input.addEventListener("keydown",l=>{l.code==="Enter"&&this.$input.blur(),l.code==="ArrowUp"&&(l.preventDefault(),e(this._step*this._arrowKeyMultiplier(l))),l.code==="ArrowDown"&&(l.preventDefault(),e(this._step*this._arrowKeyMultiplier(l)*-1))}),this.$input.addEventListener("wheel",l=>{this._inputFocused&&(l.preventDefault(),e(this._step*this._normalizeMouseWheel(l)))},{passive:!1}),this.$input.addEventListener("mousedown",l=>{t=l.clientX,i=a=l.clientY,m=!0,c=this.getValue(),n=0,window.addEventListener("mousemove",h),window.addEventListener("mouseup",g)}),this.$input.addEventListener("focus",()=>{this._inputFocused=!0}),this.$input.addEventListener("blur",()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()})}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const e=r=>{const u=this.$slider.getBoundingClientRect();let v=(b=r,f=u.left,E=u.right,_=this._min,C=this._max,(b-f)/(E-f)*(C-_)+_);var b,f,E,_,C;this._snapClampSetValue(v)},t=r=>{e(r.clientX)},i=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",t),window.removeEventListener("mouseup",i)};let a,c,n=!1;const m=r=>{r.preventDefault(),this._setDraggingStyle(!0),e(r.touches[0].clientX),n=!1},h=r=>{if(n){const u=r.touches[0].clientX-a,v=r.touches[0].clientY-c;Math.abs(u)>Math.abs(v)?m(r):(window.removeEventListener("touchmove",h),window.removeEventListener("touchend",g))}else r.preventDefault(),e(r.touches[0].clientX)},g=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",h),window.removeEventListener("touchend",g)},l=this._callOnFinishChange.bind(this);let F;this.$slider.addEventListener("mousedown",r=>{this._setDraggingStyle(!0),e(r.clientX),window.addEventListener("mousemove",t),window.addEventListener("mouseup",i)}),this.$slider.addEventListener("touchstart",r=>{r.touches.length>1||(this._hasScrollBar?(a=r.touches[0].clientX,c=r.touches[0].clientY,n=!0):m(r),window.addEventListener("touchmove",h,{passive:!1}),window.addEventListener("touchend",g))},{passive:!1}),this.$slider.addEventListener("wheel",r=>{if(Math.abs(r.deltaX)<Math.abs(r.deltaY)&&this._hasScrollBar)return;r.preventDefault();const u=this._normalizeMouseWheel(r)*this._step;this._snapClampSetValue(this.getValue()+u),this.$input.value=this.getValue(),clearTimeout(F),F=setTimeout(l,400)},{passive:!1})}_setDraggingStyle(e,t="horizontal"){this.$slider&&this.$slider.classList.toggle("active",e),document.body.classList.toggle("lil-gui-dragging",e),document.body.classList.toggle("lil-gui-"+t,e)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(e){let{deltaX:t,deltaY:i}=e;return Math.floor(e.deltaY)!==e.deltaY&&e.wheelDelta&&(t=0,i=-e.wheelDelta/120,i*=this._stepExplicit?1:10),t+-i}_arrowKeyMultiplier(e){let t=this._stepExplicit?1:10;return e.shiftKey?t*=10:e.altKey&&(t/=10),t}_snap(e){const t=Math.round(e/this._step)*this._step;return parseFloat(t.toPrecision(15))}_clamp(e){return e<this._min&&(e=this._min),e>this._max&&(e=this._max),e}_snapClampSetValue(e){this.setValue(this._clamp(this._snap(e)))}get _hasScrollBar(){const e=this.parent.root.$children;return e.scrollHeight>e.clientHeight}get _hasMin(){return this._min!==void 0}get _hasMax(){return this._max!==void 0}}class Me extends x{constructor(e,t,i,a){super(e,t,i,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this._values=Array.isArray(a)?a:Object.values(a),this._names=Array.isArray(a)?a:Object.keys(a),this._names.forEach(c=>{const n=document.createElement("option");n.innerHTML=c,this.$select.appendChild(n)}),this.$select.addEventListener("change",()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()}),this.$select.addEventListener("focus",()=>{this.$display.classList.add("focus")}),this.$select.addEventListener("blur",()=>{this.$display.classList.remove("focus")}),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.updateDisplay()}updateDisplay(){const e=this.getValue(),t=this._values.indexOf(e);return this.$select.selectedIndex=t,this.$display.innerHTML=t===-1?e:this._names[t],this}}class Te extends x{constructor(e,t,i){super(e,t,i,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",()=>{this.setValue(this.$input.value)}),this.$input.addEventListener("keydown",a=>{a.code==="Enter"&&this.$input.blur()}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}let Y=!1;class H{constructor({parent:e,autoPlace:t=e===void 0,container:i,width:a,title:c="Controls",injectStyles:n=!0,touchStyles:m=!0}={}){if(this.parent=e,this.root=e?e.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("div"),this.$title.classList.add("title"),this.$title.setAttribute("role","button"),this.$title.setAttribute("aria-expanded",!0),this.$title.setAttribute("tabindex",0),this.$title.addEventListener("click",()=>this.openAnimated(this._closed)),this.$title.addEventListener("keydown",h=>{h.code!=="Enter"&&h.code!=="Space"||(h.preventDefault(),this.$title.click())}),this.$title.addEventListener("touchstart",()=>{},{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(c),m&&this.domElement.classList.add("allow-touch-styles"),this.parent)return this.parent.children.push(this),this.parent.folders.push(this),void this.parent.$children.appendChild(this.domElement);this.domElement.classList.add("root"),!Y&&n&&(function(h){const g=document.createElement("style");g.innerHTML=h;const l=document.querySelector("head link[rel=stylesheet], head style");l?document.head.insertBefore(g,l):document.head.appendChild(g)}('.lil-gui{--background-color:#1f1f1f;--text-color:#ebebeb;--title-background-color:#111;--title-text-color:#ebebeb;--widget-color:#424242;--hover-color:#4f4f4f;--focus-color:#595959;--number-color:#2cc9ff;--string-color:#a2db3c;--font-size:11px;--input-font-size:11px;--font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Arial,sans-serif;--font-family-mono:Menlo,Monaco,Consolas,"Droid Sans Mono",monospace;--padding:4px;--spacing:4px;--widget-height:20px;--name-width:45%;--slider-knob-width:2px;--slider-input-width:27%;--color-input-width:27%;--slider-input-min-width:45px;--color-input-min-width:45px;--folder-indent:7px;--widget-padding:0 0 0 3px;--widget-border-radius:2px;--checkbox-size:calc(var(--widget-height)*0.75);--scrollbar-width:5px;background-color:var(--background-color);color:var(--text-color);font-family:var(--font-family);font-size:var(--font-size);font-style:normal;font-weight:400;line-height:1;text-align:left;touch-action:manipulation;user-select:none;-webkit-user-select:none}.lil-gui,.lil-gui *{box-sizing:border-box;margin:0;padding:0}.lil-gui.root{display:flex;flex-direction:column;width:var(--width,245px)}.lil-gui.root>.title{background:var(--title-background-color);color:var(--title-text-color)}.lil-gui.root>.children{overflow-x:hidden;overflow-y:auto}.lil-gui.root>.children::-webkit-scrollbar{background:var(--background-color);height:var(--scrollbar-width);width:var(--scrollbar-width)}.lil-gui.root>.children::-webkit-scrollbar-thumb{background:var(--focus-color);border-radius:var(--scrollbar-width)}.lil-gui.force-touch-styles{--widget-height:28px;--padding:6px;--spacing:6px;--font-size:13px;--input-font-size:16px;--folder-indent:10px;--scrollbar-width:7px;--slider-input-min-width:50px;--color-input-min-width:65px}.lil-gui.autoPlace{max-height:100%;position:fixed;right:15px;top:0;z-index:1001}.lil-gui .controller{align-items:center;display:flex;margin:var(--spacing) 0;padding:0 var(--padding)}.lil-gui .controller.disabled{opacity:.5}.lil-gui .controller.disabled,.lil-gui .controller.disabled *{pointer-events:none!important}.lil-gui .controller>.name{flex-shrink:0;line-height:var(--widget-height);min-width:var(--name-width);padding-right:var(--spacing);white-space:pre}.lil-gui .controller .widget{align-items:center;display:flex;min-height:var(--widget-height);position:relative;width:100%}.lil-gui .controller.string input{color:var(--string-color)}.lil-gui .controller.boolean .widget{cursor:pointer}.lil-gui .controller.color .display{border-radius:var(--widget-border-radius);height:var(--widget-height);position:relative;width:100%}.lil-gui .controller.color input[type=color]{cursor:pointer;height:100%;opacity:0;width:100%}.lil-gui .controller.color input[type=text]{flex-shrink:0;font-family:var(--font-family-mono);margin-left:var(--spacing);min-width:var(--color-input-min-width);width:var(--color-input-width)}.lil-gui .controller.option select{max-width:100%;opacity:0;position:absolute;width:100%}.lil-gui .controller.option .display{background:var(--widget-color);border-radius:var(--widget-border-radius);height:var(--widget-height);line-height:var(--widget-height);max-width:100%;overflow:hidden;padding-left:.55em;padding-right:1.75em;pointer-events:none;position:relative;word-break:break-all}.lil-gui .controller.option .display.active{background:var(--focus-color)}.lil-gui .controller.option .display:after{bottom:0;content:"↕";font-family:lil-gui;padding-right:.375em;position:absolute;right:0;top:0}.lil-gui .controller.option .widget,.lil-gui .controller.option select{cursor:pointer}.lil-gui .controller.number input{color:var(--number-color)}.lil-gui .controller.number.hasSlider input{flex-shrink:0;margin-left:var(--spacing);min-width:var(--slider-input-min-width);width:var(--slider-input-width)}.lil-gui .controller.number .slider{background-color:var(--widget-color);border-radius:var(--widget-border-radius);cursor:ew-resize;height:var(--widget-height);overflow:hidden;padding-right:var(--slider-knob-width);touch-action:pan-y;width:100%}.lil-gui .controller.number .slider.active{background-color:var(--focus-color)}.lil-gui .controller.number .slider.active .fill{opacity:.95}.lil-gui .controller.number .fill{border-right:var(--slider-knob-width) solid var(--number-color);box-sizing:content-box;height:100%}.lil-gui-dragging .lil-gui{--hover-color:var(--widget-color)}.lil-gui-dragging *{cursor:ew-resize!important}.lil-gui-dragging.lil-gui-vertical *{cursor:ns-resize!important}.lil-gui .title{--title-height:calc(var(--widget-height) + var(--spacing)*1.25);-webkit-tap-highlight-color:transparent;text-decoration-skip:objects;cursor:pointer;font-weight:600;height:var(--title-height);line-height:calc(var(--title-height) - 4px);outline:none;padding:0 var(--padding)}.lil-gui .title:before{content:"▾";display:inline-block;font-family:lil-gui;padding-right:2px}.lil-gui .title:active{background:var(--title-background-color);opacity:.75}.lil-gui.root>.title:focus{text-decoration:none!important}.lil-gui.closed>.title:before{content:"▸"}.lil-gui.closed>.children{opacity:0;transform:translateY(-7px)}.lil-gui.closed:not(.transition)>.children{display:none}.lil-gui.transition>.children{overflow:hidden;pointer-events:none;transition-duration:.3s;transition-property:height,opacity,transform;transition-timing-function:cubic-bezier(.2,.6,.35,1)}.lil-gui .children:empty:before{content:"Empty";display:block;font-style:italic;height:var(--widget-height);line-height:var(--widget-height);margin:var(--spacing) 0;opacity:.5;padding:0 var(--padding)}.lil-gui.root>.children>.lil-gui>.title{border-width:0;border-bottom:1px solid var(--widget-color);border-left:0 solid var(--widget-color);border-right:0 solid var(--widget-color);border-top:1px solid var(--widget-color);transition:border-color .3s}.lil-gui.root>.children>.lil-gui.closed>.title{border-bottom-color:transparent}.lil-gui+.controller{border-top:1px solid var(--widget-color);margin-top:0;padding-top:var(--spacing)}.lil-gui .lil-gui .lil-gui>.title{border:none}.lil-gui .lil-gui .lil-gui>.children{border:none;border-left:2px solid var(--widget-color);margin-left:var(--folder-indent)}.lil-gui .lil-gui .controller{border:none}.lil-gui input{-webkit-tap-highlight-color:transparent;background:var(--widget-color);border:0;border-radius:var(--widget-border-radius);color:var(--text-color);font-family:var(--font-family);font-size:var(--input-font-size);height:var(--widget-height);outline:none;width:100%}.lil-gui input:disabled{opacity:1}.lil-gui input[type=number],.lil-gui input[type=text]{padding:var(--widget-padding)}.lil-gui input[type=number]:focus,.lil-gui input[type=text]:focus{background:var(--focus-color)}.lil-gui input::-webkit-inner-spin-button,.lil-gui input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.lil-gui input[type=number]{-moz-appearance:textfield}.lil-gui input[type=checkbox]{appearance:none;-webkit-appearance:none;border-radius:var(--widget-border-radius);cursor:pointer;height:var(--checkbox-size);text-align:center;width:var(--checkbox-size)}.lil-gui input[type=checkbox]:checked:before{content:"✓";font-family:lil-gui;font-size:var(--checkbox-size);line-height:var(--checkbox-size)}.lil-gui button{-webkit-tap-highlight-color:transparent;background:var(--widget-color);border:1px solid var(--widget-color);border-radius:var(--widget-border-radius);color:var(--text-color);cursor:pointer;font-family:var(--font-family);font-size:var(--font-size);height:var(--widget-height);line-height:calc(var(--widget-height) - 4px);outline:none;text-align:center;text-transform:none;width:100%}.lil-gui button:active{background:var(--focus-color)}@font-face{font-family:lil-gui;src:url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff")}@media (pointer:coarse){.lil-gui.allow-touch-styles{--widget-height:28px;--padding:6px;--spacing:6px;--font-size:13px;--input-font-size:16px;--folder-indent:10px;--scrollbar-width:7px;--slider-input-min-width:50px;--color-input-min-width:65px}}@media (hover:hover){.lil-gui .controller.color .display:hover:before{border:1px solid #fff9;border-radius:var(--widget-border-radius);bottom:0;content:" ";display:block;left:0;position:absolute;right:0;top:0}.lil-gui .controller.option .display.focus{background:var(--focus-color)}.lil-gui .controller.option .widget:hover .display{background:var(--hover-color)}.lil-gui .controller.number .slider:hover{background-color:var(--hover-color)}body:not(.lil-gui-dragging) .lil-gui .title:hover{background:var(--title-background-color);opacity:.85}.lil-gui .title:focus{text-decoration:underline var(--focus-color)}.lil-gui input:hover{background:var(--hover-color)}.lil-gui input:active{background:var(--focus-color)}.lil-gui input[type=checkbox]:focus{box-shadow:inset 0 0 0 1px var(--focus-color)}.lil-gui button:hover{background:var(--hover-color);border-color:var(--hover-color)}.lil-gui button:focus{border-color:var(--focus-color)}}'),Y=!0),i?i.appendChild(this.domElement):t&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),a&&this.domElement.style.setProperty("--width",a+"px"),this.domElement.addEventListener("keydown",h=>h.stopPropagation()),this.domElement.addEventListener("keyup",h=>h.stopPropagation())}add(e,t,i,a,c){if(Object(i)===i)return new Me(this,e,t,i);const n=e[t];switch(typeof n){case"number":return new je(this,e,t,i,a,c);case"boolean":return new ke(this,e,t);case"string":return new Te(this,e,t);case"function":return new z(this,e,t)}console.error(`gui.add failed
	property:`,t,`
	object:`,e,`
	value:`,n)}addColor(e,t,i=1){return new Le(this,e,t,i)}addFolder(e){return new H({parent:this,title:e})}load(e,t=!0){return e.controllers&&this.controllers.forEach(i=>{i instanceof z||i._name in e.controllers&&i.load(e.controllers[i._name])}),t&&e.folders&&this.folders.forEach(i=>{i._title in e.folders&&i.load(e.folders[i._title])}),this}save(e=!0){const t={controllers:{},folders:{}};return this.controllers.forEach(i=>{if(!(i instanceof z)){if(i._name in t.controllers)throw new Error(`Cannot save GUI with duplicate property "${i._name}"`);t.controllers[i._name]=i.save()}}),e&&this.folders.forEach(i=>{if(i._title in t.folders)throw new Error(`Cannot save GUI with duplicate folder "${i._title}"`);t.folders[i._title]=i.save()}),t}open(e=!0){return this._closed=!e,this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(e=!0){return this._closed=!e,this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame(()=>{const t=this.$children.clientHeight;this.$children.style.height=t+"px",this.domElement.classList.add("transition");const i=c=>{c.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",i))};this.$children.addEventListener("transitionend",i);const a=e?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!e),requestAnimationFrame(()=>{this.$children.style.height=a+"px"})}),this}title(e){return this._title=e,this.$title.innerHTML=e,this}reset(e=!0){return(e?this.controllersRecursive():this.controllers).forEach(t=>t.reset()),this}onChange(e){return this._onChange=e,this}_callOnChange(e){this.parent&&this.parent._callOnChange(e),this._onChange!==void 0&&this._onChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(e){this.parent&&this.parent._callOnFinishChange(e),this._onFinishChange!==void 0&&this._onFinishChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach(e=>e.destroy())}controllersRecursive(){let e=Array.from(this.controllers);return this.folders.forEach(t=>{e=e.concat(t.controllersRecursive())}),e}foldersRecursive(){let e=Array.from(this.folders);return this.folders.forEach(t=>{e=e.concat(t.foldersRecursive())}),e}}const He={__name:"threejs-bone-animation.html",setup(o,{expose:e}){e();let t;const i=G(),a=()=>{let n,m,h,g,l,F,r;const u=[];let v,b,f,E,_,C,S,d,B=!1,V=0;q();function q(){h=new ue(45,2,1,1e3),h.position.set(1,2,-3),h.lookAt(0,1,0),r=new Ce,n=new me,n.background=new ge(10526880),n.fog=new Fe(10526880,10,50);const s=new ve(16777215,4473924);s.position.set(0,20,0),n.add(s);const p=new ye(16777215);p.position.set(-3,10,-10),p.castShadow=!0,p.shadow.camera.top=2,p.shadow.camera.bottom=-2,p.shadow.camera.left=-2,p.shadow.camera.right=2,p.shadow.camera.near=.1,p.shadow.camera.far=40,n.add(p);const y=new be(new Ae(100,100),new fe({color:10066329,depthWrite:!1}));y.rotation.x=-Math.PI/2,y.receiveShadow=!0,n.add(y),new J().load("./assets/models/Soldier.glb",function(A){g=A.scene,n.add(g),g.traverse(function(D){D.isMesh&&(D.castShadow=!0)}),l=new we(g),l.visible=!1,n.add(l),N();const k=A.animations;F=new xe(g),v=F.clipAction(k[0]),b=F.clipAction(k[3]),f=F.clipAction(k[1]),S=[v,b,f],P(),W()}),m=new _e({antialias:!0}),m.setPixelRatio(window.devicePixelRatio),m.setSize(i.value.offsetWidth,i.value.offsetWidth/2),m.outputEncoding=void 0,m.shadowMap.enabled=!0,i.value.appendChild(m.domElement),window.addEventListener("resize",ae)}function N(){const s=new H({width:310});i.value.appendChild(s.domElement),s.domElement.style.position="absolute",s.domElement.style.right=0,s.domElement.style.top=0,s.domElement.style.bottom=0;const p=s.addFolder("Visibility"),y=s.addFolder("Activation/Deactivation"),w=s.addFolder("Pausing/Stepping"),A=s.addFolder("Crossfading"),k=s.addFolder("Blend Weights"),D=s.addFolder("General Speed");d={"show model":!0,"show skeleton":!1,"deactivate all":Z,"activate all":P,"pause/continue":Q,"make single step":te,"modify step size":.05,"from walk to idle":function(){T(b,v,1)},"from idle to walk":function(){T(v,b,.5)},"from walk to run":function(){T(b,f,2.5)},"from run to walk":function(){T(f,b,5)},"use default duration":!0,"set custom duration":3.5,"modify idle weight":0,"modify walk weight":1,"modify run weight":0,"modify time scale":1},p.add(d,"show model").onChange(X),p.add(d,"show skeleton").onChange(K),y.add(d,"deactivate all"),y.add(d,"activate all"),w.add(d,"pause/continue"),w.add(d,"make single step"),w.add(d,"modify step size",.01,.1,.001),u.push(A.add(d,"from walk to idle")),u.push(A.add(d,"from idle to walk")),u.push(A.add(d,"from walk to run")),u.push(A.add(d,"from run to walk")),A.add(d,"use default duration"),A.add(d,"set custom duration",0,10,.01),k.add(d,"modify idle weight",0,1,.01).listen().onChange(function(L){$(v,L)}),k.add(d,"modify walk weight",0,1,.01).listen().onChange(function(L){$(b,L)}),k.add(d,"modify run weight",0,1,.01).listen().onChange(function(L){$(f,L)}),D.add(d,"modify time scale",0,1.5,.01).onChange(U),p.open(),y.open(),w.open(),A.open(),k.open(),D.open()}function X(s){g.visible=s}function K(s){l.visible=s}function U(s){F.timeScale=s}function Z(){S.forEach(function(s){s.stop()})}function P(){$(v,d["modify idle weight"]),$(b,d["modify walk weight"]),$(f,d["modify run weight"]),S.forEach(function(s){s.play()})}function Q(){B?(B=!1,M()):v.paused?M():ee()}function ee(){S.forEach(function(s){s.paused=!0})}function M(){S.forEach(function(s){s.paused=!1})}function te(){M(),B=!0,V=d["modify step size"]}function T(s,p,y){const w=ie(y);B=!1,M(),s===v?I(s,p,w):se(s,p,w)}function ie(s){return d["use default duration"]?s:d["set custom duration"]}function se(s,p,y){F.addEventListener("loop",w);function w(A){A.action===s&&(F.removeEventListener("loop",w),I(s,p,y))}}function I(s,p,y){$(p,1),p.time=0,s.crossFadeTo(p,y,!0)}function $(s,p){s.enabled=!0,s.setEffectiveTimeScale(1),s.setEffectiveWeight(p)}function ne(){d["modify idle weight"]=E,d["modify walk weight"]=_,d["modify run weight"]=C}function le(){E===1&&_===0&&C===0&&(u[0].disable(),u[1].enable(),u[2].disable(),u[3].disable()),E===0&&_===1&&C===0&&(u[0].enable(),u[1].disable(),u[2].enable(),u[3].disable()),E===0&&_===0&&C===1&&(u[0].disable(),u[1].disable(),u[2].disable(),u[3].enable())}function ae(){h.aspect=window.innerWidth/window.innerHeight,h.updateProjectionMatrix(),m.setSize(window.innerWidth,window.innerHeight)}function W(){requestAnimationFrame(W),E=v.getEffectiveWeight(),_=b.getEffectiveWeight(),C=f.getEffectiveWeight(),ne(),le();let s=r.getDelta();B&&(s=V,V=0),F.update(s),m.render(n,h)}};R(async()=>{t=await re(()=>import("./dat.gui.module-DNo137I2.js"),[]),a()});const c={get dat(){return t},set dat(n){t=n},blendingRef:i,initBlending:a,ref:G,onMounted:R,get THREE(){return Ee},get GLTFLoader(){return J},get GUI(){return H}};return Object.defineProperty(c,"__isScriptSetup",{enumerable:!1,value:!0}),c}},Ve={ref:"blendingRef",class:"ref"};function ze(o,e,t,i,a,c){return he(),ce("div",null,[e[0]||(e[0]=de(`<h2 id="动画类型" tabindex="-1"><a class="header-anchor" href="#动画类型"><span>动画类型</span></a></h2><table><thead><tr><th>动画类型</th><th>描述</th></tr></thead><tbody><tr><td>帧动画 (Frame Animation)</td><td>将一系列图片按照顺序播放，形成动画效果，类似于传统手绘动画。</td></tr><tr><td>逐帧动画 (Sprite Animation)</td><td>通过改变精灵纹理的位置或贴图来模拟运动，常用于游戏中的人物、道具等的动画效果。</td></tr><tr><td>骨骼动画 (Skeletal Animation)</td><td>通过骨骼的动画变化来模拟角色的运动，将角色的形态分解成多个骨骼，并通过调整骨骼的变换来实现动画效果。</td></tr><tr><td>形状关键帧动画 (Morph Target Animation)</td><td>通过调整网格顶点的位置、法线和颜色等属性，来模拟物体的形变和运动，比如角色的面部表情、物体的形变等。</td></tr><tr><td>粒子动画 (Particle Animation)</td><td>通过控制一组小粒子的运动轨迹、大小、透明度等属性，来模拟各种自然现象，比如烟雾、火花、雨滴等。</td></tr><tr><td>基于物理引擎的动画 (Physics-based Animation)</td><td>通过物理引擎模拟物体的运动、碰撞、重力、弹性等物理特性，来实现更加真实的动画效果，常用于游戏中的角色、物体等。</td></tr></tbody></table><h2 id="threejs-中的动画类" tabindex="-1"><a class="header-anchor" href="#threejs-中的动画类"><span>ThreeJS 中的动画类</span></a></h2><ol><li><p><code>AnimationMixer</code></p><ul><li><p>使用格式：<code>const mixer = new AnimationMixer( object : Object3D )</code></p></li><li><p>功能：管理和混合场景中的动画数据。</p></li><li><p>参数说明：</p><ul><li><code>object</code>：要添加动画数据的 <code>Object3D</code> 对象。</li></ul></li><li><p>示例：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> mixer </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">AnimationMixer</span><span style="color:#F8F8F2;">(mesh);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul></li><li><p><code>AnimationClip</code></p><ul><li><p>使用格式：<code>AnimationClip( name : String, duration : Number, tracks : Array )</code></p></li><li><p>功能：表示一个包含一组 <code>AnimationTrack</code> 的动画片段。</p></li><li><p>参数说明：</p><ul><li><code>name</code>：动画片段的名称。</li><li><code>duration</code>：动画片段的持续时间（秒）。</li><li><code>tracks</code>：包含 <code>AnimationTrack</code> 对象的数组。</li></ul></li><li><p>示例：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> clip </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.AnimationClip.</span><span style="color:#50FA7B;">CreateFromMorphTargetSequence</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#E9F284;">  &quot;</span><span style="color:#F1FA8C;">morph</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  geometry.morphAttributes.position,</span></span>
<span class="line"><span style="color:#BD93F9;">  30</span></span>
<span class="line"><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><code>AnimationAction</code></p><ul><li><p>使用格式：<code>AnimationAction( mixer : AnimationMixer, clip : AnimationClip, localRoot : Object3D )</code></p></li><li><p>功能：表示一个 <code>AnimationClip</code> 在 <code>AnimationMixer</code> 中的播放实例。</p></li><li><p>参数说明：</p><ul><li><code>mixer</code>：<code>AnimationMixer</code> 对象。</li><li><code>clip</code>：<code>AnimationClip</code> 对象。</li><li><code>localRoot</code>：本地根对象，动画中的对象将相对于此对象移动。</li></ul></li><li><p>示例：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> action </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> mixer.</span><span style="color:#50FA7B;">clipAction</span><span style="color:#F8F8F2;">(clip);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul></li><li><p><code>AnimationObjectGroup</code></p><ul><li><p>使用格式：<code>AnimationObjectGroup( ...objects : Object3D[] )</code></p></li><li><p>功能：管理多个对象的动画。</p></li><li><p>参数说明：</p><ul><li><code>objects</code>：要添加到 <code>AnimationObjectGroup</code> 的 <code>Object3D</code> 对象。</li></ul></li><li><p>示例：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> group </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">AnimationObjectGroup</span><span style="color:#F8F8F2;">(mesh1, mesh2);</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> clip </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.AnimationClip.</span><span style="color:#50FA7B;">CreateFromAction</span><span style="color:#F8F8F2;">(animationAction);</span></span>
<span class="line"><span style="color:#F8F8F2;">clip.tracks.</span><span style="color:#50FA7B;">shift</span><span style="color:#F8F8F2;">(); </span><span style="color:#6272A4;">// 移除第一条跟踪轨迹</span></span>
<span class="line"><span style="color:#F8F8F2;">group.</span><span style="color:#50FA7B;">clipAction</span><span style="color:#F8F8F2;">(clip).</span><span style="color:#50FA7B;">play</span><span style="color:#F8F8F2;">(); </span><span style="color:#6272A4;">// 播放动画</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><code>KeyframeTrack</code></p><ul><li><p>使用格式：<code>KeyframeTrack( name : String, times : Array, values : Array, interpolation : InterpolationModes )</code></p></li><li><p>功能：表示动画的关键帧序列。</p></li><li><p>参数说明：</p><ul><li><code>name</code>：关键帧序列的名称。</li><li><code>times</code>：关键帧时间的数组。</li><li><code>values</code>：与关键帧相关联的值的数组。</li><li><code>interpolation</code>：插值模式，默认为 <code>THREE.InterpolateLinear</code>。</li></ul></li><li><p>示例：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> times </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> values </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> track </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">NumberKeyframeTrack</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">.opacity</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, times, values);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol><p>动画的运行是通过 AnimationMixer 类实现的。当一个模型需要播放动画时，我们需要将模型的动画剪辑（AnimationClip）添加到 AnimationMixer 实例中，然后通过 mixer.clipAction() 方法获取一个动画动作（AnimationAction）实例，调用 play() 方法播放动画，AnimationAction 的更新又通过 AnimationMixer.update() 方法实现。</p><ul><li>创建动画剪辑（AnimationClip），并将其包含的动画轨迹（AnimationTrack）绑定到场景中的对象上。</li><li>创建动画混合器（AnimationMixer），并将动画剪辑添加到混合器中。</li><li>调用混合器的 update 方法，更新当前时间下各个对象的状态。</li><li>将更新后的状态应用到场景中的对象上，使动画动起来。</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// 使用GLTFLoader加载模型</span></span>
<span class="line"><span style="color:#F8F8F2;">loader.</span><span style="color:#50FA7B;">load</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">models/gltf/Soldier.glb</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">gltf</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">  // 获取模型</span></span>
<span class="line"><span style="color:#F8F8F2;">  model </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> gltf.scene;</span></span>
<span class="line"><span style="color:#6272A4;">  // 将模型添加到场景中</span></span>
<span class="line"><span style="color:#F8F8F2;">  scene.</span><span style="color:#50FA7B;">add</span><span style="color:#F8F8F2;">(model);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 遍历模型内的所有对象</span></span>
<span class="line"><span style="color:#F8F8F2;">  model.</span><span style="color:#50FA7B;">traverse</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">object</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">    // 如果对象是网格，则开启阴影投射</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (object.isMesh) object.castShadow </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 创建骨骼辅助对象，用于调试和查看骨骼结构</span></span>
<span class="line"><span style="color:#F8F8F2;">  skeleton </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">SkeletonHelper</span><span style="color:#F8F8F2;">(model);</span></span>
<span class="line"><span style="color:#6272A4;">  // 设置骨骼辅助对象为不可见</span></span>
<span class="line"><span style="color:#F8F8F2;">  skeleton.visible </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">  // 将骨骼辅助对象添加到场景中</span></span>
<span class="line"><span style="color:#F8F8F2;">  scene.</span><span style="color:#50FA7B;">add</span><span style="color:#F8F8F2;">(skeleton);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 创建面板</span></span>
<span class="line"><span style="color:#50FA7B;">  createPanel</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 获取模型的动画数组</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> animations </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> gltf.animations;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 创建动画混合器</span></span>
<span class="line"><span style="color:#F8F8F2;">  mixer </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#BD93F9;"> THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">AnimationMixer</span><span style="color:#F8F8F2;">(model);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 获取模型的不同动作，并将其加入动画混合器中</span></span>
<span class="line"><span style="color:#F8F8F2;">  idleAction </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> mixer.</span><span style="color:#50FA7B;">clipAction</span><span style="color:#F8F8F2;">(animations[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"><span style="color:#F8F8F2;">  walkAction </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> mixer.</span><span style="color:#50FA7B;">clipAction</span><span style="color:#F8F8F2;">(animations[</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"><span style="color:#F8F8F2;">  runAction </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> mixer.</span><span style="color:#50FA7B;">clipAction</span><span style="color:#F8F8F2;">(animations[</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 将不同动作保存在数组中</span></span>
<span class="line"><span style="color:#F8F8F2;">  actions </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [idleAction, walkAction, runAction];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 激活所有动作</span></span>
<span class="line"><span style="color:#50FA7B;">  activateAllActions</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 调用动画循环函数</span></span>
<span class="line"><span style="color:#50FA7B;">  animate</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> activateAllActions</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#50FA7B;">  setWeight</span><span style="color:#F8F8F2;">(idleAction, settings[</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">modify idle weight</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"><span style="color:#50FA7B;">  setWeight</span><span style="color:#F8F8F2;">(walkAction, settings[</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">modify walk weight</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"><span style="color:#50FA7B;">  setWeight</span><span style="color:#F8F8F2;">(runAction, settings[</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">modify run weight</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  actions.</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">action</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    action.</span><span style="color:#50FA7B;">play</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> setWeight</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">action</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">weight</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">  // 设置动画的权重值</span></span>
<span class="line"><span style="color:#F8F8F2;">  action.enabled </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">; </span><span style="color:#6272A4;">// 启用当前动画</span></span>
<span class="line"><span style="color:#F8F8F2;">  action.</span><span style="color:#50FA7B;">setEffectiveTimeScale</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">); </span><span style="color:#6272A4;">// 设置动画播放速度为正常速度</span></span>
<span class="line"><span style="color:#F8F8F2;">  action.</span><span style="color:#50FA7B;">setEffectiveWeight</span><span style="color:#F8F8F2;">(weight); </span><span style="color:#6272A4;">// 设置动画权重值</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> animation</span><span style="color:#F8F8F2;">(){</span></span>
<span class="line"><span style="color:#FF79C6;"> let</span><span style="color:#F8F8F2;"> mixerUpdateDelta </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> clock.</span><span style="color:#50FA7B;">getDelta</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;"> mixer.</span><span style="color:#50FA7B;">update</span><span style="color:#F8F8F2;">( mixerUpdateDelta );</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7)),pe("div",Ve,null,512)])}const We=oe(He,[["render",ze],["__file","threejs-bone-animation.html.vue"]]),Ge=JSON.parse('{"path":"/threejs/threejs-bone-animation.html","title":"ThreeJS中的动画","lang":"en-US","frontmatter":{"title":"ThreeJS中的动画","category":["ThreeJS"],"date":"2022-03-22T00:00:00.000Z","description":"动画类型 ThreeJS 中的动画类 AnimationMixer 使用格式：const mixer = new AnimationMixer( object : Object3D ) 功能：管理和混合场景中的动画数据。 参数说明： object：要添加动画数据的 Object3D 对象。 示例： AnimationClip 使用格式：Animatio...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/threejs/threejs-bone-animation.html"}],["meta",{"property":"og:title","content":"ThreeJS中的动画"}],["meta",{"property":"og:description","content":"动画类型 ThreeJS 中的动画类 AnimationMixer 使用格式：const mixer = new AnimationMixer( object : Object3D ) 功能：管理和混合场景中的动画数据。 参数说明： object：要添加动画数据的 Object3D 对象。 示例： AnimationClip 使用格式：Animatio..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-10T14:15:12.000Z"}],["meta",{"property":"article:published_time","content":"2022-03-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-10T14:15:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ThreeJS中的动画\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-10T14:15:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"动画类型","slug":"动画类型","link":"#动画类型","children":[]},{"level":2,"title":"ThreeJS 中的动画类","slug":"threejs-中的动画类","link":"#threejs-中的动画类","children":[]}],"git":{"createdTime":1681959670000,"updatedTime":1731248112000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":5},{"name":"卢祥","email":"example@qq.com","commits":2}]},"readingTime":{"minutes":7.21,"words":2164},"filePathRelative":"threejs/threejs-bone-animation.md","localizedDate":"March 22, 2022","excerpt":"<h2>动画类型</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>动画类型</th>\\n<th>描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>帧动画 (Frame Animation)</td>\\n<td>将一系列图片按照顺序播放，形成动画效果，类似于传统手绘动画。</td>\\n</tr>\\n<tr>\\n<td>逐帧动画 (Sprite Animation)</td>\\n<td>通过改变精灵纹理的位置或贴图来模拟运动，常用于游戏中的人物、道具等的动画效果。</td>\\n</tr>\\n<tr>\\n<td>骨骼动画 (Skeletal Animation)</td>\\n<td>通过骨骼的动画变化来模拟角色的运动，将角色的形态分解成多个骨骼，并通过调整骨骼的变换来实现动画效果。</td>\\n</tr>\\n<tr>\\n<td>形状关键帧动画 (Morph Target Animation)</td>\\n<td>通过调整网格顶点的位置、法线和颜色等属性，来模拟物体的形变和运动，比如角色的面部表情、物体的形变等。</td>\\n</tr>\\n<tr>\\n<td>粒子动画 (Particle Animation)</td>\\n<td>通过控制一组小粒子的运动轨迹、大小、透明度等属性，来模拟各种自然现象，比如烟雾、火花、雨滴等。</td>\\n</tr>\\n<tr>\\n<td>基于物理引擎的动画 (Physics-based Animation)</td>\\n<td>通过物理引擎模拟物体的运动、碰撞、重力、弹性等物理特性，来实现更加真实的动画效果，常用于游戏中的角色、物体等。</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{We as comp,Ge as data};
