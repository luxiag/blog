import{_ as a,c as s,a as i,o}from"./app-CBs_XKfp.js";const l="/blog/assets/image-20210823141026445-BymLUR0z.png",n="/blog/assets/image-20210823143006957-D7x2B6eO.png",p="/blog/assets/image-20210823134811148-Ch3R_sAb.png",r="/blog/assets/image-20210823134841620-D5GSBLGI.png",c="/blog/assets/image-20210823134851630-aJkLgDZM.png",t="/blog/assets/image-20210823134910226-dCS7Xi08.png",m="/blog/assets/image-20210823135113891-DWCrdORi.png",u="/blog/assets/image-20210823135132121-CRiAjfaN.png",g="/blog/assets/image-20210823135338759-1629698019822-2U1AkXYL.png",d="/blog/assets/image-20210823135353474-Bv8K81An.png",h="/blog/assets/image-20210823135757279-CySIdufX.png",f="/blog/assets/image-20210823135708528-s6vXlpXr.png",F="/blog/assets/image-20210823135724679-CYERVhCY.png",b="/blog/assets/image-20210823140452162-DFnm3iL-.png",y="/blog/assets/image-20210823141121375-DlUBCWQE.png",v="/blog/assets/image-20210823141133669-DwE3yOjM.png",x="/blog/assets/image-20210823141444538-B6JI1h6D.png",_={};function k(C,e){return o(),s("div",null,e[0]||(e[0]=[i(`<h2 id="source-map" tabindex="-1"><a class="header-anchor" href="#source-map"><span>source-map</span></a></h2><p><strong>代码通常运行在浏览器上时，是通过打包压缩的：</strong></p><ul><li>也就是真实跑在浏览器上的代码，和我们编写的代码其实是有差异的；</li><li>比如ES6的代码可能被转换成ES5；</li><li>比如对应的代码行号、列号在经过编译后肯定会不一致；</li><li>比如代码进行丑化压缩时，会将编码名称等修改；</li><li>比如我们使用了TypeScript等方式编写的代码，最终转换成JavaScript；</li></ul><p><strong>source-map是从已转换的代码，映射到原始的源文件；</strong><strong>使浏览器可以重构原始源并在调试器中显示重建的原始源；</strong></p><h3 id="使用source-map" tabindex="-1"><a class="header-anchor" href="#使用source-map"><span>使用source-map</span></a></h3><p>第一步：根据源文件，生成source-map文件，webpack在打包时，可以通过配置生成source-map；</p><p><code>webpack.config.js</code></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#8BE9FD;font-style:italic;">module</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">exports</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  devtool</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">source-map</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二步：在转换后的代码，最后添加一个注释，它指向sourcemap；</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">//# sourceMappingURL=main.js.map</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在浏览器中开启</p><figure><img src="`+l+'" alt="image-20210823141026445" tabindex="0" loading="lazy"><figcaption>image-20210823141026445</figcaption></figure><h3 id="source-map源码" tabindex="-1"><a class="header-anchor" href="#source-map源码"><span>source-map源码</span></a></h3><ul><li>version：当前使用的版本，也就是最新的第三版；</li><li>sources：从哪些文件转换过来的source-map和打包的代码（最初始的文件）；</li><li>names：转换前的变量和属性名称（因为我目前使用的是development模式，所以不需要保留转换前的名称）；</li><li>mappings：source-map用来和源文件映射的信息（比如位置信息等），一串base64 VLQ（veriable-length quantity可变长度值）编码；</li><li>file：打包后的文件（浏览器加载的文件）；</li><li>sourceContent：转换前的具体代码信息（和sources是对应的关系）；</li><li>sourceRoot：所有的sources相对的根目录；</li></ul><figure><img src="'+n+'" alt="image-20210823143006957" tabindex="0" loading="lazy"><figcaption>image-20210823143006957</figcaption></figure><h3 id="生成source-map" tabindex="-1"><a class="header-anchor" href="#生成source-map"><span>生成source-map</span></a></h3><p><a href="https://webpack.docschina.org/configuration/devtool/" target="_blank" rel="noopener noreferrer">配置<code>devtool</code></a></p><p><strong>不会生成source-map</strong></p><ul><li>false：不使用source-map，也就是没有任何和source-map相关的内容。</li><li>none：production模式下的默认值，不生成source-map。</li><li>eval：development模式下的默认值，不生成source-map</li><li><ul><li>但是它会在eval执行的代码中，添加 //# sourceURL=；</li><li>它会被浏览器在执行时解析，并且在调试面板中生成对应的一些文件目录，方便我们调试代码；</li></ul></li></ul><h2 id="eval" tabindex="-1"><a class="header-anchor" href="#eval"><span><code>eval</code></span></a></h2><p>不会生成每个source map文件，模块都封装在eval中，并在里面添加//# sourceURL = xx.js</p><figure><img src="'+p+'" alt="image-20210823134811148" tabindex="0" loading="lazy"><figcaption>image-20210823134811148</figcaption></figure><figure><img src="'+r+'" alt="image-20210823134841620" tabindex="0" loading="lazy"><figcaption>image-20210823134841620</figcaption></figure><figure><img src="'+c+'" alt="image-20210823134851630" tabindex="0" loading="lazy"><figcaption>image-20210823134851630</figcaption></figure><figure><img src="'+t+`" alt="image-20210823134910226" tabindex="0" loading="lazy"><figcaption>image-20210823134910226</figcaption></figure><h2 id="source-map-1" tabindex="-1"><a class="header-anchor" href="#source-map-1"><span><code>source-map</code></span></a></h2><p>能完整的找到报错代码地址</p><p><code>webpack.config.js</code></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#8BE9FD;font-style:italic;">module</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">exports</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  devtool</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">source-map</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>生成一个独立的source-map文件，并且在bundle文件中有一个注释，指向source-map文件；</p><figure><img src="`+m+'" alt="image-20210823135113891" tabindex="0" loading="lazy"><figcaption>image-20210823135113891</figcaption></figure><figure><img src="'+u+'" alt="image-20210823135132121" tabindex="0" loading="lazy"><figcaption>image-20210823135132121</figcaption></figure><h2 id="eval-source-map" tabindex="-1"><a class="header-anchor" href="#eval-source-map"><span>eval-source-map</span></a></h2><p>把eval的sourceURL换为完整sourcemap信息的DataURL</p><p>会生成sourcemap，<strong>但是source-map是以DataUrl添加到eval函数的后面</strong></p><figure><img src="'+g+'" alt="image-20210823135338759" tabindex="0" loading="lazy"><figcaption>image-20210823135338759</figcaption></figure><figure><img src="'+d+'" alt="image-20210823135353474" tabindex="0" loading="lazy"><figcaption>image-20210823135353474</figcaption></figure><h2 id="inline-source-map" tabindex="-1"><a class="header-anchor" href="#inline-source-map"><span>inline-source-map</span></a></h2><p>不会生成source map文件，而是为每个文件添加source map的DataURL，这个DataURL是包含一个文件完成source map信息的Base64编码，会导致文件很大</p><figure><img src="'+h+'" alt="image-20210823135757279" tabindex="0" loading="lazy"><figcaption>image-20210823135757279</figcaption></figure><figure><img src="'+f+'" alt="image-20210823135708528" tabindex="0" loading="lazy"><figcaption>image-20210823135708528</figcaption></figure><figure><img src="'+F+'" alt="image-20210823135724679" tabindex="0" loading="lazy"><figcaption>image-20210823135724679</figcaption></figure><h2 id="cheap-source-map" tabindex="-1"><a class="header-anchor" href="#cheap-source-map"><span>cheap-source-map</span></a></h2><p>会生成sourcemap，但是会更加高效一些（cheap低开销），因为它没有生成列映射（Column Mapping）</p><p>不包含列信息，不包含 loader 的 sourcemap，（譬如 babel 的 sourcemap）</p><figure><img src="'+b+'" alt="image-20210823140452162" tabindex="0" loading="lazy"><figcaption>image-20210823140452162</figcaption></figure><h2 id="cheap-module-source-map" tabindex="-1"><a class="header-anchor" href="#cheap-module-source-map"><span>cheap-module-source-map</span></a></h2><p>不包含列信息，同时 loader 的 sourcemap 也被简化为只包含对应行的。最终的 sourcemap 只有一份，它是 webpack 对 loader 生成的 sourcemap 进行简化，然后再次生成的。</p><p>会生成sourcemap，类似于cheap-source-map，但是对源自loader的sourcemap处理会更好。</p><figure><img src="'+y+'" alt="image-20210823141121375" tabindex="0" loading="lazy"><figcaption>image-20210823141121375</figcaption></figure><figure><img src="'+v+'" alt="image-20210823141133669" tabindex="0" loading="lazy"><figcaption>image-20210823141133669</figcaption></figure><h2 id="hidden-source-map" tabindex="-1"><a class="header-anchor" href="#hidden-source-map"><span>hidden-source-map</span></a></h2><ul><li><p>会生成sourcemap，但是不会对source-map文件进行引用；</p></li><li><p>相当于删除了打包文件中对sourcemap的引用注释；</p></li></ul><h2 id="nosources-source-map" tabindex="-1"><a class="header-anchor" href="#nosources-source-map"><span>nosources-source-map</span></a></h2><p>会生成sourcemap，但是生成的sourcemap只有错误信息的提示，不会生成源代码文件；</p><figure><img src="'+x+'" alt="image-20210823141444538" tabindex="0" loading="lazy"><figcaption>image-20210823141444538</figcaption></figure><h2 id="多个值的组合" tabindex="-1"><a class="header-anchor" href="#多个值的组合"><span>多个值的组合</span></a></h2><ul><li><p>inline-|hidden-|eval：三个值时三选一；</p></li><li><p>nosources：可选值；</p></li><li><p>cheap可选值，并且可以跟随module的值；</p></li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">[inline</span><span style="color:#FF79C6;">-|</span><span style="color:#F8F8F2;">hidden</span><span style="color:#FF79C6;">-|</span><span style="color:#F8F8F2;">eval</span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;">][nosources</span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;">][cheap</span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">module</span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;">]]source</span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;">map</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',59)]))}const E=a(_,[["render",k],["__file","source-map.html.vue"]]),j=JSON.parse('{"path":"/webpack/source-map.html","title":"source-map","lang":"en-US","frontmatter":{"title":"source-map","date":"2021-10-21T00:00:00.000Z","category":["Webpack"],"description":"source-map 代码通常运行在浏览器上时，是通过打包压缩的： 也就是真实跑在浏览器上的代码，和我们编写的代码其实是有差异的； 比如ES6的代码可能被转换成ES5； 比如对应的代码行号、列号在经过编译后肯定会不一致； 比如代码进行丑化压缩时，会将编码名称等修改； 比如我们使用了TypeScript等方式编写的代码，最终转换成JavaScript； ...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/webpack/source-map.html"}],["meta",{"property":"og:title","content":"source-map"}],["meta",{"property":"og:description","content":"source-map 代码通常运行在浏览器上时，是通过打包压缩的： 也就是真实跑在浏览器上的代码，和我们编写的代码其实是有差异的； 比如ES6的代码可能被转换成ES5； 比如对应的代码行号、列号在经过编译后肯定会不一致； 比如代码进行丑化压缩时，会将编码名称等修改； 比如我们使用了TypeScript等方式编写的代码，最终转换成JavaScript； ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2022-12-30T06:58:22.000Z"}],["meta",{"property":"article:published_time","content":"2021-10-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-30T06:58:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"source-map\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-10-21T00:00:00.000Z\\",\\"dateModified\\":\\"2022-12-30T06:58:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"source-map","slug":"source-map","link":"#source-map","children":[{"level":3,"title":"使用source-map","slug":"使用source-map","link":"#使用source-map","children":[]},{"level":3,"title":"source-map源码","slug":"source-map源码","link":"#source-map源码","children":[]},{"level":3,"title":"生成source-map","slug":"生成source-map","link":"#生成source-map","children":[]}]},{"level":2,"title":"eval","slug":"eval","link":"#eval","children":[]},{"level":2,"title":"source-map","slug":"source-map-1","link":"#source-map-1","children":[]},{"level":2,"title":"eval-source-map","slug":"eval-source-map","link":"#eval-source-map","children":[]},{"level":2,"title":"inline-source-map","slug":"inline-source-map","link":"#inline-source-map","children":[]},{"level":2,"title":"cheap-source-map","slug":"cheap-source-map","link":"#cheap-source-map","children":[]},{"level":2,"title":"cheap-module-source-map","slug":"cheap-module-source-map","link":"#cheap-module-source-map","children":[]},{"level":2,"title":"hidden-source-map","slug":"hidden-source-map","link":"#hidden-source-map","children":[]},{"level":2,"title":"nosources-source-map","slug":"nosources-source-map","link":"#nosources-source-map","children":[]},{"level":2,"title":"多个值的组合","slug":"多个值的组合","link":"#多个值的组合","children":[]}],"git":{"createdTime":1667133388000,"updatedTime":1672383502000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":1},{"name":"luxiang","email":"luxiag@qq.com","commits":1}]},"readingTime":{"minutes":3.36,"words":1007},"filePathRelative":"webpack/source-map.md","localizedDate":"October 21, 2021","excerpt":"<h2>source-map</h2>\\n<p><strong>代码通常运行在浏览器上时，是通过打包压缩的：</strong></p>\\n<ul>\\n<li>也就是真实跑在浏览器上的代码，和我们编写的代码其实是有差异的；</li>\\n<li>比如ES6的代码可能被转换成ES5；</li>\\n<li>比如对应的代码行号、列号在经过编译后肯定会不一致；</li>\\n<li>比如代码进行丑化压缩时，会将编码名称等修改；</li>\\n<li>比如我们使用了TypeScript等方式编写的代码，最终转换成JavaScript；</li>\\n</ul>","autoDesc":true}');export{E as comp,j as data};
