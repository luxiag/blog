import{_ as n,c as a,b as l,o as e}from"./app-BupRR3ON.js";const p="/blog/assets/1680123401011152047--nqO5B47.png",o="/blog/assets/1680123401010173845-CeqpG-iM.png",F={};function t(c,s){return e(),a("div",null,s[0]||(s[0]=[l(`<p>[]路由跳转匹配 - 子路由 孙路由跳转 []路由记录表的生成</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> Vue </span><span style="color:#FF79C6;">from</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">vue</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> VueRouter </span><span style="color:#FF79C6;">from</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">vue-router</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Vue.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">(VueRouter);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> const</span><span style="color:#F8F8F2;"> constantRoutes </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    path</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">/login</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#50FA7B;">    component</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#FF79C6;"> import</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">@/views/login/index</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">),</span></span>
<span class="line"><span style="color:#F8F8F2;">    hidden</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#6272A4;">  // .....</span></span>
<span class="line"><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#50FA7B;"> createRouter</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span></span>
<span class="line"><span style="color:#FF79C6;font-weight:bold;">  new</span><span style="color:#50FA7B;"> VueRouter</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">    routes</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> constantRoutes,</span></span>
<span class="line"><span style="color:#50FA7B;">    scrollBehavior</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> ({ y</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;"> }),</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> router </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> createRouter</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> default</span><span style="color:#F8F8F2;"> router;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#50FA7B;"> Vue</span><span style="color:#F8F8F2;">({ router });</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install"><span>install</span></a></h2><details class="hint-container details"><summary>install</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> install</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">Vue</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (install.installed </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> _Vue </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> Vue) </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  install.installed </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">  // 保留Vue引用</span></span>
<span class="line"><span style="color:#F8F8F2;">  _Vue </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Vue;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#50FA7B;"> isDef</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">v</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> v </span><span style="color:#FF79C6;">!==</span><span style="color:#BD93F9;"> undefined</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">  // 为router-view组件关联路由组件</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#50FA7B;"> registerInstance</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">vm</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">callVal</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> i </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> vm.$options._parentVnode;</span></span>
<span class="line"><span style="color:#6272A4;">    // 调用vm.$options._parentVnode.data.registerRouteInstance方法</span></span>
<span class="line"><span style="color:#6272A4;">    // 而这个方法只在router-view组件中存在，router-view组件定义在(../components/view.js @71行)</span></span>
<span class="line"><span style="color:#6272A4;">    // 所以，如果vm的父节点为router-view，则为router-view关联当前vm，即将当前vm做为router-view的路由组件</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#50FA7B;">      isDef</span><span style="color:#F8F8F2;">(i) </span><span style="color:#FF79C6;">&amp;&amp;</span></span>
<span class="line"><span style="color:#50FA7B;">      isDef</span><span style="color:#F8F8F2;">((i </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> i.data)) </span><span style="color:#FF79C6;">&amp;&amp;</span></span>
<span class="line"><span style="color:#50FA7B;">      isDef</span><span style="color:#F8F8F2;">((i </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> i.registerRouteInstance))</span></span>
<span class="line"><span style="color:#F8F8F2;">    ) {</span></span>
<span class="line"><span style="color:#6272A4;">      // i = registerRouteInstance</span></span>
<span class="line"><span style="color:#50FA7B;">      i</span><span style="color:#F8F8F2;">(vm, callVal);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  };</span></span>
<span class="line"><span style="color:#6272A4;">  // 只在router-view组件中存在</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#50FA7B;"> registerRouteInstance</span><span style="color:#FF79C6;"> =</span><span style="color:#FF79C6;"> function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">vm</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">val</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">    // val could be undefined for unregistration</span></span>
<span class="line"><span style="color:#6272A4;">    // name =&gt; router-view props name</span></span>
<span class="line"><span style="color:#FF79C6;">    var</span><span style="color:#F8F8F2;"> current </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> matched.instances[name];</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> ((val </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> current </span><span style="color:#FF79C6;">!==</span><span style="color:#F8F8F2;"> vm) </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">val </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> current </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> vm)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      matched.instances[name] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> val;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 为所有的vue组件混入_route,_router,_routerRoot</span></span>
<span class="line"><span style="color:#F8F8F2;">  Vue.</span><span style="color:#50FA7B;">mixin</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#50FA7B;">    beforeCreate</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#6272A4;">      // this === new Vue({router:router}) === Vue根实例</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#50FA7B;">isDef</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.$options.router)) {</span></span>
<span class="line"><span style="color:#6272A4;">        // 保存挂载VueRouter的Vue实例，此处为根实例</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">._routerRoot </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">        // 保存VueRouter实例，this.$options.router仅存在于Vue根实例上，其它Vue组件不包含此属性，所以下面的初始化，只会执行一次</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">._router </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.$options.router;</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">._router.</span><span style="color:#50FA7B;">init</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">        // 响应式定义_route属性，保证_route发生变化时，组件(router-view)会重新渲染</span></span>
<span class="line"><span style="color:#F8F8F2;">        Vue.util.</span><span style="color:#50FA7B;">defineReactive</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">_route</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">._router.history.current);</span></span>
<span class="line"><span style="color:#F8F8F2;">      } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">._routerRoot </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.$parent </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.$parent._routerRoot) </span><span style="color:#FF79C6;">||</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#6272A4;">      // 为router-view组件关联路由组件</span></span>
<span class="line"><span style="color:#50FA7B;">      registerInstance</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#50FA7B;">    destroyed</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#50FA7B;">      registerInstance</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  Object.</span><span style="color:#50FA7B;">defineProperty</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">Vue</span><span style="color:#F8F8F2;">.prototype, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">$router</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#50FA7B;">    get</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">._routerRoot._router;</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  Object.</span><span style="color:#50FA7B;">defineProperty</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">Vue</span><span style="color:#F8F8F2;">.prototype, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">$route</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#50FA7B;">    get</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">._routerRoot._route;</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  Vue.</span><span style="color:#50FA7B;">component</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">RouterView</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, View);</span></span>
<span class="line"><span style="color:#F8F8F2;">  Vue.</span><span style="color:#50FA7B;">component</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">RouterLink</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, Link);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> strats </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Vue.config.optionMergeStrategies;</span></span>
<span class="line"><span style="color:#6272A4;">  // use the same hook merging strategy for route hooks</span></span>
<span class="line"><span style="color:#F8F8F2;">  strats.beforeRouteEnter </span><span style="color:#FF79C6;">=</span></span>
<span class="line"><span style="color:#F8F8F2;">    strats.beforeRouteLeave </span><span style="color:#FF79C6;">=</span></span>
<span class="line"><span style="color:#F8F8F2;">    strats.beforeRouteUpdate </span><span style="color:#FF79C6;">=</span></span>
<span class="line"><span style="color:#F8F8F2;">      strats.created;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>_router.init</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> default</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> VueRouter</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">  init</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">app</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> any</span><span style="color:#6272A4;"> /* Vue component instance */</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">    // app = vm根实例</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.apps.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(app);</span></span>
<span class="line"><span style="color:#6272A4;">    // set up app destroyed handler</span></span>
<span class="line"><span style="color:#6272A4;">    // https://github.com/vuejs/vue-router/issues/2639</span></span>
<span class="line"><span style="color:#F8F8F2;">    app.</span><span style="color:#50FA7B;">$once</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">hook:destroyed</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">      // clean out app from this.apps array once destroyed</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> index </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.apps.</span><span style="color:#50FA7B;">indexOf</span><span style="color:#F8F8F2;">(app);</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (index </span><span style="color:#FF79C6;">&gt;</span><span style="color:#FF79C6;"> -</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">) </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.apps.</span><span style="color:#50FA7B;">splice</span><span style="color:#F8F8F2;">(index, </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">      // ensure we still have a main app or null if no apps</span></span>
<span class="line"><span style="color:#6272A4;">      // we do not release the router so it can be reused</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.app </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> app) </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.app </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.apps[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">||</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.app) </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.history.</span><span style="color:#50FA7B;">teardown</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // main app previously initialized</span></span>
<span class="line"><span style="color:#6272A4;">    // return as we don&#39;t need to set up new history listener</span></span>
<span class="line"><span style="color:#6272A4;">    //</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.app) {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> app;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> history </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.history;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (history </span><span style="color:#FF79C6;">instanceof</span><span style="color:#8BE9FD;font-style:italic;"> HTML5History</span><span style="color:#FF79C6;"> ||</span><span style="color:#F8F8F2;"> history </span><span style="color:#FF79C6;">instanceof</span><span style="color:#8BE9FD;font-style:italic;"> HashHistory</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#50FA7B;"> handleInitialScroll</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">routeOrError</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">        const</span><span style="color:#F8F8F2;"> from </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> history.current;</span></span>
<span class="line"><span style="color:#FF79C6;">        const</span><span style="color:#F8F8F2;"> expectScroll </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.options.scrollBehavior;</span></span>
<span class="line"><span style="color:#FF79C6;">        const</span><span style="color:#F8F8F2;"> supportsScroll </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> supportsPushState </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> expectScroll;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (supportsScroll </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">fullPath</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> in</span><span style="color:#F8F8F2;"> routeOrError) {</span></span>
<span class="line"><span style="color:#50FA7B;">          handleScroll</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">, routeOrError, from, </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">      // 监听路由变化</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#50FA7B;"> setupListeners</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">routeOrError</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        history.</span><span style="color:#50FA7B;">setupListeners</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#50FA7B;">        handleInitialScroll</span><span style="color:#F8F8F2;">(routeOrError);</span></span>
<span class="line"><span style="color:#F8F8F2;">      };</span></span>
<span class="line"><span style="color:#F8F8F2;">      history.</span><span style="color:#50FA7B;">transitionTo</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">        history.</span><span style="color:#50FA7B;">getCurrentLocation</span><span style="color:#F8F8F2;">(),</span></span>
<span class="line"><span style="color:#F8F8F2;">        setupListeners,</span></span>
<span class="line"><span style="color:#F8F8F2;">        setupListeners</span></span>
<span class="line"><span style="color:#F8F8F2;">      );</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#6272A4;">    // 回调会在父类的updateRoute方法被调用时触发，重新为app._route赋值</span></span>
<span class="line"><span style="color:#6272A4;">    // 由于app._route被定义为响应式，所以app._route发生变化，依赖app._route的组件(route-view组件)都会被重新渲染</span></span>
<span class="line"><span style="color:#6272A4;">    // 调用父类的listen方法，添加回调；</span></span>
<span class="line"><span style="color:#F8F8F2;">    history.</span><span style="color:#50FA7B;">listen</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">route</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.apps.</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">app</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        app._route </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> route;</span></span>
<span class="line"><span style="color:#F8F8F2;">      });</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details></details><h2 id="vuerouter" tabindex="-1"><a class="header-anchor" href="#vuerouter"><span>VueRouter</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> routes </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">  { path</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">/foo</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, component</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> Foo },</span></span>
<span class="line"><span style="color:#F8F8F2;">  { path</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">/bar</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, component</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> Bar },</span></span>
<span class="line"><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> router </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> VueRouter</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  routes, </span><span style="color:#6272A4;">// (缩写) 相当于 routes: routes</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>VueRouter</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> default</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> VueRouter</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RouterOptions</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> {}) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.app </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.apps </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [];</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.options </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> options;</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.beforeHooks </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [];</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.resolveHooks </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [];</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.afterHooks </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [];</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.matcher </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> createMatcher</span><span style="color:#F8F8F2;">(options.routes </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> [], </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> mode </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> options.mode </span><span style="color:#FF79C6;">||</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">hash</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.fallback </span><span style="color:#FF79C6;">=</span></span>
<span class="line"><span style="color:#F8F8F2;">      mode </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">history</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> &amp;&amp;</span><span style="color:#FF79C6;"> !</span><span style="color:#F8F8F2;">supportsPushState </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> options.fallback </span><span style="color:#FF79C6;">!==</span><span style="color:#BD93F9;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.fallback) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      mode </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">hash</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">inBrowser) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      mode </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">abstract</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.mode </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> mode;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    switch</span><span style="color:#F8F8F2;"> (mode) {</span></span>
<span class="line"><span style="color:#FF79C6;">      case</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">history</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.history </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> HTML5History</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">, options.base);</span></span>
<span class="line"><span style="color:#FF79C6;">        break</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">      case</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">hash</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.history </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> HashHistory</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">, options.base, </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.fallback);</span></span>
<span class="line"><span style="color:#FF79C6;">        break</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">      case</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">abstract</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.history </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> AbstractHistory</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">, options.base);</span></span>
<span class="line"><span style="color:#FF79C6;">        break</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">      default</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="creatematcher" tabindex="-1"><a class="header-anchor" href="#creatematcher"><span>createMatcher</span></a></h3><details class="hint-container details"><summary>createMatcher</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> createMatcher</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  routes</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteConfig</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  router</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> VueRouter</span></span>
<span class="line"><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Matcher</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">  // 根据 传入的 routes 生成路由记录</span></span>
<span class="line"><span style="color:#6272A4;">  //  pathList 路由路径数组</span></span>
<span class="line"><span style="color:#6272A4;">  //  pathMap = {/home:record} nameMap = {/home:record}</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> { pathList, pathMap, nameMap } </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> createRouteMap</span><span style="color:#F8F8F2;">(routes);</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    match,</span></span>
<span class="line"><span style="color:#F8F8F2;">    addRoute,</span></span>
<span class="line"><span style="color:#F8F8F2;">    getRoutes,</span></span>
<span class="line"><span style="color:#F8F8F2;">    addRoutes,</span></span>
<span class="line"><span style="color:#F8F8F2;">  };</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>createRouteMap</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> createRouteMap</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  routes</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteConfig</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  oldPathList</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  oldPathMap</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Dictionary</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  oldNameMap</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Dictionary</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  parentRoute</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> RouteRecord</span></span>
<span class="line"><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  pathList</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#F8F8F2;">  pathMap</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Dictionary</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#F8F8F2;">  nameMap</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Dictionary</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#F8F8F2;">} {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> pathList</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> oldPathList </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> [];</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> pathMap</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Dictionary</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> oldPathMap </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> Object.</span><span style="color:#50FA7B;">create</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> nameMap</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Dictionary</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> oldNameMap </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> Object.</span><span style="color:#50FA7B;">create</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  // 遍历路由配置 生成路由记录</span></span>
<span class="line"><span style="color:#F8F8F2;">  routes.</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">route</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">    addRouteRecord</span><span style="color:#F8F8F2;">(pathList, pathMap, nameMap, route, parentRoute);</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#6272A4;">  // 确保 path:*永远在前面</span></span>
<span class="line"><span style="color:#FF79C6;">  for</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">, l </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> pathList.length; i </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;"> l; i</span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (pathList[i] </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">*</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      pathList.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(pathList.</span><span style="color:#50FA7B;">splice</span><span style="color:#F8F8F2;">(i, </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">)[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"><span style="color:#F8F8F2;">      l</span><span style="color:#FF79C6;">--</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      i</span><span style="color:#FF79C6;">--</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    pathList,</span></span>
<span class="line"><span style="color:#F8F8F2;">    pathMap,</span></span>
<span class="line"><span style="color:#F8F8F2;">    nameMap,</span></span>
<span class="line"><span style="color:#F8F8F2;">  };</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>更新路由映射表 从 route 中匹配对应的路由信息</p><details class="hint-container details"><summary>addRouteRecord</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> addRouteRecord</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">pathList</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">pathMap</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">nameMap</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">route</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">parent</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">matchAs</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  var</span><span style="color:#F8F8F2;"> path </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> route.path;</span></span>
<span class="line"><span style="color:#FF79C6;">  var</span><span style="color:#F8F8F2;"> name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> route.name;</span></span>
<span class="line"><span style="color:#FF79C6;">  var</span><span style="color:#F8F8F2;"> pathToRegexpOptions </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> route.pathToRegexpOptions </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> {};</span></span>
<span class="line"><span style="color:#FF79C6;">  var</span><span style="color:#F8F8F2;"> normalizedPath </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> normalizePath</span><span style="color:#F8F8F2;">(path, parent, pathToRegexpOptions.strict);</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> route.caseSensitive </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">boolean</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    pathToRegexpOptions.sensitive </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> route.caseSensitive;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#6272A4;">  // 记录</span></span>
<span class="line"><span style="color:#6272A4;">  // pathMap = {/home:record} nameMap = {/home:record}</span></span>
<span class="line"><span style="color:#FF79C6;">  var</span><span style="color:#F8F8F2;"> record </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    path</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> normalizedPath,</span></span>
<span class="line"><span style="color:#F8F8F2;">    regex</span><span style="color:#FF79C6;">:</span><span style="color:#50FA7B;"> compileRouteRegex</span><span style="color:#F8F8F2;">(normalizedPath, pathToRegexpOptions),</span></span>
<span class="line"><span style="color:#F8F8F2;">    components</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> route.components </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> { default</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> route.component },</span></span>
<span class="line"><span style="color:#F8F8F2;">    alias</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> route.alias</span></span>
<span class="line"><span style="color:#FF79C6;">      ?</span><span style="color:#FF79C6;"> typeof</span><span style="color:#F8F8F2;"> route.alias </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">string</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#FF79C6;">        ?</span><span style="color:#F8F8F2;"> [route.alias]</span></span>
<span class="line"><span style="color:#FF79C6;">        :</span><span style="color:#F8F8F2;"> route.alias</span></span>
<span class="line"><span style="color:#FF79C6;">      :</span><span style="color:#F8F8F2;"> [],</span></span>
<span class="line"><span style="color:#F8F8F2;">    instances</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {},</span></span>
<span class="line"><span style="color:#F8F8F2;">    enteredCbs</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {},</span></span>
<span class="line"><span style="color:#F8F8F2;">    name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> name,</span></span>
<span class="line"><span style="color:#F8F8F2;">    parent</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> parent,</span></span>
<span class="line"><span style="color:#F8F8F2;">    matchAs</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> matchAs,</span></span>
<span class="line"><span style="color:#F8F8F2;">    redirect</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> route.redirect,</span></span>
<span class="line"><span style="color:#F8F8F2;">    beforeEnter</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> route.beforeEnter,</span></span>
<span class="line"><span style="color:#F8F8F2;">    meta</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> route.meta </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> {},</span></span>
<span class="line"><span style="color:#F8F8F2;">    props</span><span style="color:#FF79C6;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">      route.props </span><span style="color:#FF79C6;">==</span><span style="color:#BD93F9;"> null</span></span>
<span class="line"><span style="color:#FF79C6;">        ?</span><span style="color:#F8F8F2;"> {}</span></span>
<span class="line"><span style="color:#FF79C6;">        :</span><span style="color:#F8F8F2;"> route.components</span></span>
<span class="line"><span style="color:#FF79C6;">        ?</span><span style="color:#F8F8F2;"> route.props</span></span>
<span class="line"><span style="color:#FF79C6;">        :</span><span style="color:#F8F8F2;"> { default</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> route.props },</span></span>
<span class="line"><span style="color:#F8F8F2;">  };</span></span>
<span class="line"><span style="color:#6272A4;">  // 遍历子路由</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (route.children) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    route.children.</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">child</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      var</span><span style="color:#F8F8F2;"> childMatchAs </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> matchAs</span></span>
<span class="line"><span style="color:#FF79C6;">        ?</span><span style="color:#50FA7B;"> cleanPath</span><span style="color:#F8F8F2;">(matchAs </span><span style="color:#FF79C6;">+</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">/</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> +</span><span style="color:#F8F8F2;"> child.path)</span></span>
<span class="line"><span style="color:#FF79C6;">        :</span><span style="color:#BD93F9;"> undefined</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#50FA7B;">      addRouteRecord</span><span style="color:#F8F8F2;">(pathList, pathMap, nameMap, child, record, childMatchAs);</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">pathMap[record.path]) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    pathList.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(record.path);</span></span>
<span class="line"><span style="color:#F8F8F2;">    pathMap[record.path] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> record;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#6272A4;">  // https://router.vuejs.org/zh/guide/essentials/redirect-and-alias.html#%E5%88%AB%E5%90%8D</span></span>
<span class="line"><span style="color:#6272A4;">  // 别名处理</span></span>
<span class="line"><span style="color:#6272A4;">  // 将别名定义为 path进行处理</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (route.alias </span><span style="color:#FF79C6;">!==</span><span style="color:#BD93F9;"> undefined</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    var</span><span style="color:#F8F8F2;"> aliases </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Array.</span><span style="color:#50FA7B;">isArray</span><span style="color:#F8F8F2;">(route.alias) </span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> route.alias </span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [route.alias];</span></span>
<span class="line"><span style="color:#FF79C6;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> i </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;"> aliases.length; </span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">i) {</span></span>
<span class="line"><span style="color:#FF79C6;">      var</span><span style="color:#F8F8F2;"> alias </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> aliases[i];</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (alias </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> path) {</span></span>
<span class="line"><span style="color:#6272A4;">        // skip in dev to make it work</span></span>
<span class="line"><span style="color:#FF79C6;">        continue</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#FF79C6;">      var</span><span style="color:#F8F8F2;"> aliasRoute </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        path</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> alias,</span></span>
<span class="line"><span style="color:#F8F8F2;">        children</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> route.children,</span></span>
<span class="line"><span style="color:#F8F8F2;">      };</span></span>
<span class="line"><span style="color:#50FA7B;">      addRouteRecord</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">        pathList,</span></span>
<span class="line"><span style="color:#F8F8F2;">        pathMap,</span></span>
<span class="line"><span style="color:#F8F8F2;">        nameMap,</span></span>
<span class="line"><span style="color:#F8F8F2;">        aliasRoute,</span></span>
<span class="line"><span style="color:#F8F8F2;">        parent,</span></span>
<span class="line"><span style="color:#F8F8F2;">        record.path </span><span style="color:#FF79C6;">||</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">/</span><span style="color:#E9F284;">&quot;</span><span style="color:#6272A4;"> // matchAs</span></span>
<span class="line"><span style="color:#F8F8F2;">      );</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (name) {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">nameMap[name]) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      nameMap[name] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> record;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="路由跳转" tabindex="-1"><a class="header-anchor" href="#路由跳转"><span>路由跳转</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(location, onComplete</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;">, onAbort</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(location).</span><span style="color:#50FA7B;">then</span><span style="color:#F8F8F2;">(onComplete).</span><span style="color:#50FA7B;">catch</span><span style="color:#F8F8F2;">(onAbort)</span></span>
<span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(location, onComplete</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;">, onAbort</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(location).</span><span style="color:#50FA7B;">then</span><span style="color:#F8F8F2;">(onComplete).</span><span style="color:#50FA7B;">catch</span><span style="color:#F8F8F2;">(onAbort)</span></span>
<span class="line"><span style="color:#6272A4;">// 利用浏览器 window.history.go(n)</span></span>
<span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#50FA7B;">go</span><span style="color:#F8F8F2;">(n)</span></span>
<span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#50FA7B;">back</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#50FA7B;">forward</span><span style="color:#F8F8F2;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="html5" tabindex="-1"><a class="header-anchor" href="#html5"><span>html5</span></a></h3><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> HTML5History</span><span style="color:#FF79C6;"> extends</span><span style="color:#8BE9FD;font-style:italic;"> History</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">  // 在 install方法中的 router_init 中 执行</span></span>
<span class="line"><span style="color:#50FA7B;">  setupListeners</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.listeners.length </span><span style="color:#FF79C6;">&gt;</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> router </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.router;</span></span>
<span class="line"><span style="color:#6272A4;">    // 传入的 options中的 scrollBehavior 方法</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> expectScroll </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> router.options.scrollBehavior;</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> supportsScroll </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> supportsPushState </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> expectScroll;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (supportsScroll) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.listeners.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">setupScroll</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#50FA7B;"> handleRoutingEvent</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> current </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.current;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">      // Avoiding first \`popstate\` event dispatched in some browsers but first</span></span>
<span class="line"><span style="color:#6272A4;">      // history route not updated since async guard at the same time.</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> location </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> getLocation</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.base);</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.current </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> START </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> location </span><span style="color:#FF79C6;">===</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">._startLocation) {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">transitionTo</span><span style="color:#F8F8F2;">(location, (</span><span style="color:#FFB86C;font-style:italic;">route</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (supportsScroll) {</span></span>
<span class="line"><span style="color:#50FA7B;">          handleScroll</span><span style="color:#F8F8F2;">(router, route, current, </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      });</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#F8F8F2;">    window.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">popstate</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, handleRoutingEvent);</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.listeners.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      window.</span><span style="color:#50FA7B;">removeEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">popstate</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, handleRoutingEvent);</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#50FA7B;">  push</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">location</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RawLocation</span><span style="color:#F8F8F2;">, </span><span style="color:#50FA7B;">onComplete</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#F8F8F2;">, </span><span style="color:#50FA7B;">onAbort</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> { current</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> fromRoute } </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">transitionTo</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">      location,</span></span>
<span class="line"><span style="color:#F8F8F2;">      (</span><span style="color:#FFB86C;font-style:italic;">route</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">        pushState</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">cleanPath</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.base </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> route.fullPath));</span></span>
<span class="line"><span style="color:#50FA7B;">        handleScroll</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.router, route, fromRoute, </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        onComplete </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#50FA7B;"> onComplete</span><span style="color:#F8F8F2;">(route);</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#F8F8F2;">      onAbort</span></span>
<span class="line"><span style="color:#F8F8F2;">    );</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">  replace</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">location</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RawLocation</span><span style="color:#F8F8F2;">, </span><span style="color:#50FA7B;">onComplete</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#F8F8F2;">, </span><span style="color:#50FA7B;">onAbort</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> { current</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> fromRoute } </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">transitionTo</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">      location,</span></span>
<span class="line"><span style="color:#F8F8F2;">      (</span><span style="color:#FFB86C;font-style:italic;">route</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">        replaceState</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">cleanPath</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.base </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> route.fullPath));</span></span>
<span class="line"><span style="color:#50FA7B;">        handleScroll</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.router, route, fromRoute, </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        onComplete </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#50FA7B;"> onComplete</span><span style="color:#F8F8F2;">(route);</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#F8F8F2;">      onAbort</span></span>
<span class="line"><span style="color:#F8F8F2;">    );</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 利用浏览器 history特性 向 当前浏览器会话的历史堆栈中 修改状态</span></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> pushState</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">url</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> string</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">replace</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> boolean</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">  saveScrollPosition</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">  // try...catch the pushState call to get around Safari</span></span>
<span class="line"><span style="color:#6272A4;">  // DOM Exception 18 where it limits to 100 pushState calls</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> history </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> window.history;</span></span>
<span class="line"><span style="color:#FF79C6;">  try</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (replace) {</span></span>
<span class="line"><span style="color:#6272A4;">      // preserve existing history state as it could be overriden by the user</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> stateCopy </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> extend</span><span style="color:#F8F8F2;">({}, history.state);</span></span>
<span class="line"><span style="color:#F8F8F2;">      stateCopy.key </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> getStateKey</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">      history.</span><span style="color:#50FA7B;">replaceState</span><span style="color:#F8F8F2;">(stateCopy, </span><span style="color:#E9F284;">&quot;&quot;</span><span style="color:#F8F8F2;">, url);</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      history.</span><span style="color:#50FA7B;">pushState</span><span style="color:#F8F8F2;">({ key</span><span style="color:#FF79C6;">:</span><span style="color:#50FA7B;"> setStateKey</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">genStateKey</span><span style="color:#F8F8F2;">()) }, </span><span style="color:#E9F284;">&quot;&quot;</span><span style="color:#F8F8F2;">, url);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#FF79C6;">catch</span><span style="color:#F8F8F2;"> (e) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    window.location[replace </span><span style="color:#FF79C6;">?</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">replace</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> :</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">assign</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">](url);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> replaceState</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">url</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> string</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">  pushState</span><span style="color:#F8F8F2;">(url, </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hash" tabindex="-1"><a class="header-anchor" href="#hash"><span>hash</span></a></h3><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> HashHistory</span><span style="color:#FF79C6;"> extends</span><span style="color:#8BE9FD;font-style:italic;"> History</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">  push</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">location</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RawLocation</span><span style="color:#F8F8F2;">, </span><span style="color:#50FA7B;">onComplete</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#F8F8F2;">, </span><span style="color:#50FA7B;">onAbort</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> { current</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> fromRoute } </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">transitionTo</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">      location,</span></span>
<span class="line"><span style="color:#F8F8F2;">      (</span><span style="color:#FFB86C;font-style:italic;">route</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">        pushHash</span><span style="color:#F8F8F2;">(route.fullPath);</span></span>
<span class="line"><span style="color:#50FA7B;">        handleScroll</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.router, route, fromRoute, </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        onComplete </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#50FA7B;"> onComplete</span><span style="color:#F8F8F2;">(route);</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#F8F8F2;">      onAbort</span></span>
<span class="line"><span style="color:#F8F8F2;">    );</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">  replace</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">location</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RawLocation</span><span style="color:#F8F8F2;">, </span><span style="color:#50FA7B;">onComplete</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#F8F8F2;">, </span><span style="color:#50FA7B;">onAbort</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> { current</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> fromRoute } </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">transitionTo</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">      location,</span></span>
<span class="line"><span style="color:#F8F8F2;">      (</span><span style="color:#FFB86C;font-style:italic;">route</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">        replaceHash</span><span style="color:#F8F8F2;">(route.fullPath);</span></span>
<span class="line"><span style="color:#50FA7B;">        handleScroll</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.router, route, fromRoute, </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        onComplete </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#50FA7B;"> onComplete</span><span style="color:#F8F8F2;">(route);</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#F8F8F2;">      onAbort</span></span>
<span class="line"><span style="color:#F8F8F2;">    );</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> getUrl</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">path</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> href </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> window.location.href;</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> i </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> href.</span><span style="color:#50FA7B;">indexOf</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">#</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> base </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> i </span><span style="color:#FF79C6;">&gt;=</span><span style="color:#BD93F9;"> 0</span><span style="color:#FF79C6;"> ?</span><span style="color:#F8F8F2;"> href.</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">, i) </span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> href;</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F1FA8C;"> \`</span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">base</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">#</span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">path</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">\`</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> pushHash</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">path</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (supportsPushState) {</span></span>
<span class="line"><span style="color:#50FA7B;">    pushState</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">getUrl</span><span style="color:#F8F8F2;">(path));</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    window.location.hash </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> path;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> replaceHash</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">path</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (supportsPushState) {</span></span>
<span class="line"><span style="color:#50FA7B;">    replaceState</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">getUrl</span><span style="color:#F8F8F2;">(path));</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    window.location.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">getUrl</span><span style="color:#F8F8F2;">(path));</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="路由守卫" tabindex="-1"><a class="header-anchor" href="#路由守卫"><span>路由守卫</span></a></h2><p>路由导航获取顺序 beforeRouteLeave =&gt; beforeEach =&gt; beforeRouteUpdate =&gt; beforeEnter(路由独享) =&gt;beforeRouteEnter =&gt; beforeResolve =&gt; afterEach</p><details class="hint-container details"><summary>全局路由守卫</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#50FA7B;">beforeEach</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">to</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">from</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">beforeEach</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, to, from);</span></span>
<span class="line"><span style="color:#50FA7B;">  next</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#50FA7B;">beforeResolve</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">to</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">from</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">beforeResolve</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, to, from);</span></span>
<span class="line"><span style="color:#50FA7B;">  next</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#50FA7B;">afterEach</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">to</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">from</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">afterEach</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, to, from);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>路由独享的守卫</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> router </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> VueRouter</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  routes</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">      path</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">/foo</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      component</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> Foo,</span></span>
<span class="line"><span style="color:#50FA7B;">      beforeEnter</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">to</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">from</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">        // ...</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">  ],</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details></details><details class="hint-container details"><summary>组件内的守卫</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#50FA7B;">  beforeRouteEnter</span><span style="color:#F8F8F2;">(to, from, next) {</span></span>
<span class="line"><span style="color:#6272A4;">    // 在渲染该组件的对应路由被 confirm 前调用</span></span>
<span class="line"><span style="color:#6272A4;">    // 不！能！获取组件实例 \`this\`</span></span>
<span class="line"><span style="color:#50FA7B;">    next</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">vm</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">    // 通过 \`vm\` 访问组件实例</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#6272A4;">    // 因为当守卫执行前，组件实例还没被创建</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#50FA7B;">  beforeRouteUpdate</span><span style="color:#F8F8F2;">(to, from, next) {</span></span>
<span class="line"><span style="color:#6272A4;">    // 在当前路由改变，但是该组件被复用时调用</span></span>
<span class="line"><span style="color:#6272A4;">    // 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，</span></span>
<span class="line"><span style="color:#6272A4;">    // 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。</span></span>
<span class="line"><span style="color:#6272A4;">    // 可以访问组件实例 \`this\`</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#50FA7B;">  beforeRouteLeave</span><span style="color:#F8F8F2;">(to, from, next) {</span></span>
<span class="line"><span style="color:#6272A4;">    // 导航离开该组件的对应路由时调用</span></span>
<span class="line"><span style="color:#6272A4;">    // 可以访问组件实例 \`this\`</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="transitionto" tabindex="-1"><a class="header-anchor" href="#transitionto"><span>transitionTo</span></a></h2><details class="hint-container details"><summary>transitionTo</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#50FA7B;">  transitionTo</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#F8F8F2;">    location: RawLocation,</span></span>
<span class="line"><span style="color:#F8F8F2;">    onComplete</span><span style="color:#FF79C6;">?:</span><span style="color:#F8F8F2;"> Function,</span></span>
<span class="line"><span style="color:#F8F8F2;">    onAbort</span><span style="color:#FF79C6;">?:</span><span style="color:#F8F8F2;"> Function</span></span>
<span class="line"><span style="color:#F8F8F2;">  ) {</span></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> route</span></span>
<span class="line"><span style="color:#6272A4;">    // catch redirect option https://github.com/vuejs/vue-router/issues/3201</span></span>
<span class="line"><span style="color:#FF79C6;">    try</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">      // 更具location匹配对应的record</span></span>
<span class="line"><span style="color:#6272A4;">      // 根据record返回一个route对象</span></span>
<span class="line"><span style="color:#6272A4;">      // route对象 name,meta,path,hash,query,params,fullPath,matched</span></span>
<span class="line"><span style="color:#F8F8F2;">      route </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.router.</span><span style="color:#50FA7B;">match</span><span style="color:#F8F8F2;">(location, </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.current)</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">catch</span><span style="color:#F8F8F2;"> (e) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.errorCbs.</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">cb</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">        cb</span><span style="color:#F8F8F2;">(e)</span></span>
<span class="line"><span style="color:#F8F8F2;">      })</span></span>
<span class="line"><span style="color:#6272A4;">      // Exception should still be thrown</span></span>
<span class="line"><span style="color:#FF79C6;">      throw</span><span style="color:#F8F8F2;"> e</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> prev </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.current</span></span>
<span class="line"><span style="color:#6272A4;">    // 确定跳转</span></span>
<span class="line"><span style="color:#6272A4;">    // 执行路由守卫</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">confirmTransition</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">      route,</span></span>
<span class="line"><span style="color:#F8F8F2;">      () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">updateRoute</span><span style="color:#F8F8F2;">(route)</span></span>
<span class="line"><span style="color:#6272A4;">        /*</span></span>
<span class="line"><span style="color:#6272A4;">          updateRoute (route: Route) {</span></span>
<span class="line"><span style="color:#6272A4;">           this.current = route</span></span>
<span class="line"><span style="color:#6272A4;">           this.cb &amp;&amp; this.cb(route)</span></span>
<span class="line"><span style="color:#6272A4;">          }</span></span>
<span class="line"><span style="color:#6272A4;">        */</span></span>
<span class="line"><span style="color:#F8F8F2;">        onComplete </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#50FA7B;"> onComplete</span><span style="color:#F8F8F2;">(route)</span></span>
<span class="line"><span style="color:#6272A4;">        // 向浏览器 历史栈 中加入记录  true 加入记录 false replace记录</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">ensureURL</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.router.afterHooks.</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">hook</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          hook </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#50FA7B;"> hook</span><span style="color:#F8F8F2;">(route, prev)</span></span>
<span class="line"><span style="color:#F8F8F2;">        })</span></span>
<span class="line"><span style="color:#6272A4;">        // fire ready cbs once</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.ready) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">          this</span><span style="color:#F8F8F2;">.ready </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">          this</span><span style="color:#F8F8F2;">.readyCbs.</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">cb</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">            cb</span><span style="color:#F8F8F2;">(route)</span></span>
<span class="line"><span style="color:#F8F8F2;">          })</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">      err</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (onAbort) {</span></span>
<span class="line"><span style="color:#50FA7B;">          onAbort</span><span style="color:#F8F8F2;">(err)</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (err </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#FF79C6;"> !</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.ready) {</span></span>
<span class="line"><span style="color:#6272A4;">          // Initial redirection should not mark the history as ready yet</span></span>
<span class="line"><span style="color:#6272A4;">          // because it&#39;s triggered by the redirection instead</span></span>
<span class="line"><span style="color:#6272A4;">          // https://github.com/vuejs/vue-router/issues/3225</span></span>
<span class="line"><span style="color:#6272A4;">          // https://github.com/vuejs/vue-router/issues/3331</span></span>
<span class="line"><span style="color:#FF79C6;">          if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#50FA7B;">isNavigationFailure</span><span style="color:#F8F8F2;">(err, NavigationFailureType.redirected) </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> prev </span><span style="color:#FF79C6;">!==</span><span style="color:#F8F8F2;"> START) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">            this</span><span style="color:#F8F8F2;">.ready </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">            this</span><span style="color:#F8F8F2;">.readyErrorCbs.</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">cb</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">              cb</span><span style="color:#F8F8F2;">(err)</span></span>
<span class="line"><span style="color:#F8F8F2;">            })</span></span>
<span class="line"><span style="color:#F8F8F2;">          }</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    )</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="match" tabindex="-1"><a class="header-anchor" href="#match"><span>match</span></a></h3><p>根据 location 从 pathMap、nameMap 中找出对应的 record</p><details class="hint-container details"><summary>match</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#50FA7B;">match</span><span style="color:#F8F8F2;"> (raw: RawLocation, current</span><span style="color:#FF79C6;">?:</span><span style="color:#F8F8F2;"> Route, redirectedFrom</span><span style="color:#FF79C6;">?:</span><span style="color:#F8F8F2;"> Location): Route {</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.matcher.</span><span style="color:#50FA7B;">match</span><span style="color:#F8F8F2;">(raw, current, redirectedFrom)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> match</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  raw</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RawLocation</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  currentRoute</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Route</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  redirectedFrom</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Location</span></span>
<span class="line"><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Route</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> location </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> normalizeLocation</span><span style="color:#F8F8F2;">(raw, currentRoute, </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">, router)</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> { name } </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> location</span></span>
<span class="line"><span style="color:#6272A4;">  // 根据name 从 nameMap {name:record} 中匹配出record</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (name) {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> record </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> nameMap[name]</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (process.env.</span><span style="color:#BD93F9;">NODE_ENV</span><span style="color:#FF79C6;"> !==</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">production</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">      warn</span><span style="color:#F8F8F2;">(record, </span><span style="color:#F1FA8C;">\`Route with name &#39;</span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">name</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">&#39; does not exist\`</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">record) </span><span style="color:#FF79C6;">return</span><span style="color:#50FA7B;"> _createRoute</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">, location)</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> paramNames </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> record.regex.keys</span></span>
<span class="line"><span style="color:#F8F8F2;">      .</span><span style="color:#50FA7B;">filter</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#FF79C6;"> !</span><span style="color:#F8F8F2;">key.optional)</span></span>
<span class="line"><span style="color:#F8F8F2;">      .</span><span style="color:#50FA7B;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> key.name)</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> location.params </span><span style="color:#FF79C6;">!==</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">object</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      location.params </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {}</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (currentRoute </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#FF79C6;"> typeof</span><span style="color:#F8F8F2;"> currentRoute.params </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">object</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      for</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> key </span><span style="color:#FF79C6;">in</span><span style="color:#F8F8F2;"> currentRoute.params) {</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">(key </span><span style="color:#FF79C6;">in</span><span style="color:#F8F8F2;"> location.params) </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> paramNames.</span><span style="color:#50FA7B;">indexOf</span><span style="color:#F8F8F2;">(key) </span><span style="color:#FF79C6;">&gt;</span><span style="color:#FF79C6;"> -</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">          location.params[key] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> currentRoute.params[key]</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    location.path </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> fillParams</span><span style="color:#F8F8F2;">(record.path, location.params, </span><span style="color:#F1FA8C;">\`named route &quot;</span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">name</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">&quot;\`</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#50FA7B;"> _createRoute</span><span style="color:#F8F8F2;">(record, location, redirectedFrom)</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#FF79C6;">else</span><span style="color:#FF79C6;"> if</span><span style="color:#F8F8F2;"> (location.path) {</span></span>
<span class="line"><span style="color:#6272A4;">    // 根据路径匹配出</span></span>
<span class="line"><span style="color:#F8F8F2;">    location.params </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {}</span></span>
<span class="line"><span style="color:#FF79C6;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;"> pathList.length; i</span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> path </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> pathList[i]</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> record </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> pathMap[path]</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#50FA7B;">matchRoute</span><span style="color:#F8F8F2;">(record.regex, location.path, location.params)) {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> _createRoute</span><span style="color:#F8F8F2;">(record, location, redirectedFrom)</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#6272A4;">  // no match</span></span>
<span class="line"><span style="color:#6272A4;">  //  根据location生成一个route对象</span></span>
<span class="line"><span style="color:#6272A4;">  // matched = 遍历 record.parent 生成的数组</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#50FA7B;"> _createRoute</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">, location)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details></details><h3 id="confirmtransition" tabindex="-1"><a class="header-anchor" href="#confirmtransition"><span>confirmTransition</span></a></h3><details class="hint-container details"><summary>confirmTransition</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#50FA7B;">  confirmTransition</span><span style="color:#F8F8F2;"> (route: Route, onComplete: Function, onAbort</span><span style="color:#FF79C6;">?:</span><span style="color:#F8F8F2;"> Function) {</span></span>
<span class="line"><span style="color:#6272A4;">    // this.current 默认 /</span></span>
<span class="line"><span style="color:#6272A4;">    // updateRoute 方法执行时 会赋值为 route</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> current </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.current</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.pending </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> route</span></span>
<span class="line"><span style="color:#6272A4;">    // 取消路由跳转</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#50FA7B;"> abort</span><span style="color:#FF79C6;"> =</span><span style="color:#FFB86C;font-style:italic;"> err</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">      // changed after adding errors with</span></span>
<span class="line"><span style="color:#6272A4;">      // https://github.com/vuejs/vue-router/pull/3047 before that change,</span></span>
<span class="line"><span style="color:#6272A4;">      // redirect and aborted navigation would produce an err == null</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#50FA7B;">isNavigationFailure</span><span style="color:#F8F8F2;">(err) </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#50FA7B;"> isError</span><span style="color:#F8F8F2;">(err)) {</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.errorCbs.length) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">          this</span><span style="color:#F8F8F2;">.errorCbs.</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">cb</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">            cb</span><span style="color:#F8F8F2;">(err)</span></span>
<span class="line"><span style="color:#F8F8F2;">          })</span></span>
<span class="line"><span style="color:#F8F8F2;">        } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">          if</span><span style="color:#F8F8F2;"> (process.env.</span><span style="color:#BD93F9;">NODE_ENV</span><span style="color:#FF79C6;"> !==</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">production</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">            warn</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">uncaught error during route navigation:</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">          }</span></span>
<span class="line"><span style="color:#F8F8F2;">          console.</span><span style="color:#50FA7B;">error</span><span style="color:#F8F8F2;">(err)</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">      onAbort </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#50FA7B;"> onAbort</span><span style="color:#F8F8F2;">(err)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> lastRouteIndex </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> route.matched.length </span><span style="color:#FF79C6;">-</span><span style="color:#BD93F9;"> 1</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> lastCurrentIndex </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> current.matched.length </span><span style="color:#FF79C6;">-</span><span style="color:#BD93F9;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 判断是否相同路由</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#50FA7B;">      isSameRoute</span><span style="color:#F8F8F2;">(route, current) </span><span style="color:#FF79C6;">&amp;&amp;</span></span>
<span class="line"><span style="color:#6272A4;">      // in the case the route map has been dynamically appended to</span></span>
<span class="line"><span style="color:#F8F8F2;">      lastRouteIndex </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> lastCurrentIndex </span><span style="color:#FF79C6;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F8F8F2;">      route.matched[lastRouteIndex] </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> current.matched[lastCurrentIndex]</span></span>
<span class="line"><span style="color:#F8F8F2;">    ) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">ensureURL</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (route.hash) {</span></span>
<span class="line"><span style="color:#50FA7B;">        handleScroll</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.router, current, route, </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#50FA7B;"> abort</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">createNavigationDuplicatedError</span><span style="color:#F8F8F2;">(current, route))</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 提取出 需要更新、失活、激活的路由</span></span>
<span class="line"><span style="color:#6272A4;">    // matched 就是 当前父路由 ，子路由组成的数组</span></span>
<span class="line"><span style="color:#6272A4;">    // this.current.matched from 路由</span></span>
<span class="line"><span style="color:#6272A4;">    // route.matched to 路由</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> { updated, deactivated, activated } </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> resolveQueue</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.current.matched,</span></span>
<span class="line"><span style="color:#F8F8F2;">      route.matched</span></span>
<span class="line"><span style="color:#F8F8F2;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 路由守卫函数 数组</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> queue</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">?</span><span style="color:#FFB86C;font-style:italic;">NavigationGuard</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [].</span><span style="color:#50FA7B;">concat</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#6272A4;">      // in-component leave guards</span></span>
<span class="line"><span style="color:#50FA7B;">      extractLeaveGuards</span><span style="color:#F8F8F2;">(deactivated),</span></span>
<span class="line"><span style="color:#6272A4;">      // global before hooks</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.router.beforeHooks,</span></span>
<span class="line"><span style="color:#6272A4;">      // in-component update hooks</span></span>
<span class="line"><span style="color:#50FA7B;">      extractUpdateHooks</span><span style="color:#F8F8F2;">(updated),</span></span>
<span class="line"><span style="color:#6272A4;">      // in-config enter guards</span></span>
<span class="line"><span style="color:#F8F8F2;">      activated.</span><span style="color:#50FA7B;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">m</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> m.beforeEnter),</span></span>
<span class="line"><span style="color:#6272A4;">      // async components</span></span>
<span class="line"><span style="color:#6272A4;">      // 解析异步组件</span></span>
<span class="line"><span style="color:#50FA7B;">      resolveAsyncComponents</span><span style="color:#F8F8F2;">(activated)</span></span>
<span class="line"><span style="color:#F8F8F2;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#50FA7B;"> iterator</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">hook</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> NavigationGuard</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.pending </span><span style="color:#FF79C6;">!==</span><span style="color:#F8F8F2;"> route) {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> abort</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">createNavigationCancelledError</span><span style="color:#F8F8F2;">(current, route))</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#FF79C6;">      try</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">        hook</span><span style="color:#F8F8F2;">(route, current, (</span><span style="color:#FFB86C;font-style:italic;">to</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> any</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">          if</span><span style="color:#F8F8F2;"> (to </span><span style="color:#FF79C6;">===</span><span style="color:#BD93F9;"> false</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">            // next(false) -&gt; abort navigation, ensure current URL</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">            this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">ensureURL</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#50FA7B;">            abort</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">createNavigationAbortedError</span><span style="color:#F8F8F2;">(current, route))</span></span>
<span class="line"><span style="color:#F8F8F2;">          } </span><span style="color:#FF79C6;">else</span><span style="color:#FF79C6;"> if</span><span style="color:#F8F8F2;"> (</span><span style="color:#50FA7B;">isError</span><span style="color:#F8F8F2;">(to)) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">            this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">ensureURL</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#50FA7B;">            abort</span><span style="color:#F8F8F2;">(to)</span></span>
<span class="line"><span style="color:#F8F8F2;">          } </span><span style="color:#FF79C6;">else</span><span style="color:#FF79C6;"> if</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#FF79C6;">            typeof</span><span style="color:#F8F8F2;"> to </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">string</span><span style="color:#E9F284;">&#39;</span><span style="color:#FF79C6;"> ||</span></span>
<span class="line"><span style="color:#F8F8F2;">            (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> to </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">object</span><span style="color:#E9F284;">&#39;</span><span style="color:#FF79C6;"> &amp;&amp;</span></span>
<span class="line"><span style="color:#F8F8F2;">              (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> to.path </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">string</span><span style="color:#E9F284;">&#39;</span><span style="color:#FF79C6;"> ||</span><span style="color:#FF79C6;"> typeof</span><span style="color:#F8F8F2;"> to.name </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">string</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">          ) {</span></span>
<span class="line"><span style="color:#6272A4;">            // next(&#39;/&#39;) or next({ path: &#39;/&#39; }) -&gt; redirect</span></span>
<span class="line"><span style="color:#50FA7B;">            abort</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">createNavigationRedirectedError</span><span style="color:#F8F8F2;">(current, route))</span></span>
<span class="line"><span style="color:#FF79C6;">            if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> to </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">object</span><span style="color:#E9F284;">&#39;</span><span style="color:#FF79C6;"> &amp;&amp;</span><span style="color:#F8F8F2;"> to.replace) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">              this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(to)</span></span>
<span class="line"><span style="color:#F8F8F2;">            } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">              this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(to)</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">          } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">            // confirm transition and pass on the value</span></span>
<span class="line"><span style="color:#50FA7B;">            next</span><span style="color:#F8F8F2;">(to)</span></span>
<span class="line"><span style="color:#F8F8F2;">          }</span></span>
<span class="line"><span style="color:#F8F8F2;">        })</span></span>
<span class="line"><span style="color:#F8F8F2;">      } </span><span style="color:#FF79C6;">catch</span><span style="color:#F8F8F2;"> (e) {</span></span>
<span class="line"><span style="color:#50FA7B;">        abort</span><span style="color:#F8F8F2;">(e)</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">    runQueue</span><span style="color:#F8F8F2;">(queue, iterator, () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">      // wait until async components are resolved before</span></span>
<span class="line"><span style="color:#6272A4;">      // extracting in-component enter guards</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> enterGuards </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> extractEnterGuards</span><span style="color:#F8F8F2;">(activated)</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> queue </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> enterGuards.</span><span style="color:#50FA7B;">concat</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.router.resolveHooks)</span></span>
<span class="line"><span style="color:#50FA7B;">      runQueue</span><span style="color:#F8F8F2;">(queue, iterator, () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.pending </span><span style="color:#FF79C6;">!==</span><span style="color:#F8F8F2;"> route) {</span></span>
<span class="line"><span style="color:#FF79C6;">          return</span><span style="color:#50FA7B;"> abort</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">createNavigationCancelledError</span><span style="color:#F8F8F2;">(current, route))</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.pending </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span></span>
<span class="line"><span style="color:#50FA7B;">        onComplete</span><span style="color:#F8F8F2;">(route)</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.router.app) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">          this</span><span style="color:#F8F8F2;">.router.app.</span><span style="color:#50FA7B;">$nextTick</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">            handleRouteEntered</span><span style="color:#F8F8F2;">(route)</span></span>
<span class="line"><span style="color:#F8F8F2;">          })</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      })</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="resolvequeue" tabindex="-1"><a class="header-anchor" href="#resolvequeue"><span>resolveQueue</span></a></h4><p>对比 from 和 to 的 matched</p><p>current: a a/b a/b/c next: a a/b a/b/d a/b/d/e</p><p>第三个不同 next=》a a/b updated a/b/d a/b/d/e activated current =&gt; a/b/c deactivated</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> resolveQueue</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  current</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  next</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  updated</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#F8F8F2;">  activated</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#F8F8F2;">  deactivated</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#F8F8F2;">} {</span></span>
<span class="line"><span style="color:#FF79C6;">  let</span><span style="color:#F8F8F2;"> i;</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> max </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Math.</span><span style="color:#50FA7B;">max</span><span style="color:#F8F8F2;">(current.length, next.length);</span></span>
<span class="line"><span style="color:#FF79C6;">  for</span><span style="color:#F8F8F2;"> (i </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;"> max; i</span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (current[i] </span><span style="color:#FF79C6;">!==</span><span style="color:#F8F8F2;"> next[i]) {</span></span>
<span class="line"><span style="color:#FF79C6;">      break</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    updated</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> next.</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">, i),</span></span>
<span class="line"><span style="color:#F8F8F2;">    activated</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> next.</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">(i),</span></span>
<span class="line"><span style="color:#F8F8F2;">    deactivated</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> current.</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">(i),</span></span>
<span class="line"><span style="color:#F8F8F2;">  };</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="resolveasynccomponents" tabindex="-1"><a class="header-anchor" href="#resolveasynccomponents"><span>resolveAsyncComponents</span></a></h4><p>解析异步组件</p><details class="hint-container details"><summary>vue 异步组件</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">Vue.</span><span style="color:#50FA7B;">component</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">async-example</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">resolve</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">reject</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">  setTimeout</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> () {</span></span>
<span class="line"><span style="color:#6272A4;">    // 向 \`resolve\` 回调传递组件定义</span></span>
<span class="line"><span style="color:#50FA7B;">    resolve</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">      template</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">&lt;div&gt;I am async!&lt;/div&gt;</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }, </span><span style="color:#BD93F9;">1000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F8F8F2;">Vue.</span><span style="color:#50FA7B;">component</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">async-webpack-example</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">resolve</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">  // 这个特殊的 \`require\` 语法将会告诉 webpack</span></span>
<span class="line"><span style="color:#6272A4;">  // 自动将你的构建代码切割成多个包，这些包</span></span>
<span class="line"><span style="color:#6272A4;">  // 会通过 Ajax 请求加载</span></span>
<span class="line"><span style="color:#50FA7B;">  require</span><span style="color:#F8F8F2;">([</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">./my-async-component</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">], resolve);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F8F8F2;">Vue.</span><span style="color:#50FA7B;">component</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#E9F284;">  &quot;</span><span style="color:#F1FA8C;">async-webpack-example</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#6272A4;">  // 这个动态导入会返回一个 \`Promise\` 对象。</span></span>
<span class="line"><span style="color:#F8F8F2;">  () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#FF79C6;"> import</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">./my-async-component</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#50FA7B;"> Vue</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#6272A4;">  // ...</span></span>
<span class="line"><span style="color:#F8F8F2;">  components</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#E9F284;">    &quot;</span><span style="color:#F1FA8C;">my-component</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#FF79C6;"> import</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">./my-async-component</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">),</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>resolveAsyncComponents</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> resolveAsyncComponents</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">matched</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt;)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">to</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">from</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> hasAsync </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> pending </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> error </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // matched 要激活的主机</span></span>
<span class="line"><span style="color:#6272A4;">    // flatMapComponents 从matched 中 获取 路由 components实例</span></span>
<span class="line"><span style="color:#6272A4;">    //  def      components</span></span>
<span class="line"><span style="color:#6272A4;">    //   _       instances</span></span>
<span class="line"><span style="color:#6272A4;">    //  match    records</span></span>
<span class="line"><span style="color:#6272A4;">    //  key      components.key</span></span>
<span class="line"><span style="color:#50FA7B;">    flatMapComponents</span><span style="color:#F8F8F2;">(matched, (</span><span style="color:#FFB86C;font-style:italic;">def</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">_</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">match</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">      // if it&#39;s a function and doesn&#39;t have cid attached,</span></span>
<span class="line"><span style="color:#6272A4;">      // assume it&#39;s an async component resolve function.</span></span>
<span class="line"><span style="color:#6272A4;">      // we are not using Vue&#39;s default async resolving mechanism because</span></span>
<span class="line"><span style="color:#6272A4;">      // we want to halt the navigation until the incoming component has been</span></span>
<span class="line"><span style="color:#6272A4;">      // resolved.</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> def </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">function</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> &amp;&amp;</span><span style="color:#F8F8F2;"> def.cid </span><span style="color:#FF79C6;">===</span><span style="color:#BD93F9;"> undefined</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        hasAsync </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        pending</span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        const</span><span style="color:#F8F8F2;"> resolve </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> once</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">resolvedDef</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">          if</span><span style="color:#F8F8F2;"> (</span><span style="color:#50FA7B;">isESModule</span><span style="color:#F8F8F2;">(resolvedDef)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            resolvedDef </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> resolvedDef.default;</span></span>
<span class="line"><span style="color:#F8F8F2;">          }</span></span>
<span class="line"><span style="color:#6272A4;">          // save resolved on async factory in case it&#39;s used elsewhere</span></span>
<span class="line"><span style="color:#F8F8F2;">          def.resolved </span><span style="color:#FF79C6;">=</span></span>
<span class="line"><span style="color:#FF79C6;">            typeof</span><span style="color:#F8F8F2;"> resolvedDef </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">function</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#FF79C6;">              ?</span><span style="color:#F8F8F2;"> resolvedDef</span></span>
<span class="line"><span style="color:#FF79C6;">              :</span><span style="color:#F8F8F2;"> _Vue.</span><span style="color:#50FA7B;">extend</span><span style="color:#F8F8F2;">(resolvedDef);</span></span>
<span class="line"><span style="color:#F8F8F2;">          match.components[key] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> resolvedDef;</span></span>
<span class="line"><span style="color:#F8F8F2;">          pending</span><span style="color:#FF79C6;">--</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">          if</span><span style="color:#F8F8F2;"> (pending </span><span style="color:#FF79C6;">&lt;=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">            next</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">          }</span></span>
<span class="line"><span style="color:#F8F8F2;">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        const</span><span style="color:#F8F8F2;"> reject </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> once</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">reason</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">          const</span><span style="color:#F8F8F2;"> msg </span><span style="color:#FF79C6;">=</span><span style="color:#F1FA8C;"> \`Failed to resolve async component </span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">key</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">: </span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">reason</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">\`</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">          process.env.</span><span style="color:#BD93F9;">NODE_ENV</span><span style="color:#FF79C6;"> !==</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">production</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> &amp;&amp;</span><span style="color:#50FA7B;"> warn</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">, msg);</span></span>
<span class="line"><span style="color:#FF79C6;">          if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">error) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            error </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> isError</span><span style="color:#F8F8F2;">(reason) </span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> reason </span><span style="color:#FF79C6;">:</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> Error</span><span style="color:#F8F8F2;">(msg);</span></span>
<span class="line"><span style="color:#50FA7B;">            next</span><span style="color:#F8F8F2;">(error);</span></span>
<span class="line"><span style="color:#F8F8F2;">          }</span></span>
<span class="line"><span style="color:#F8F8F2;">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        let</span><span style="color:#F8F8F2;"> res;</span></span>
<span class="line"><span style="color:#FF79C6;">        try</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          res </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> def</span><span style="color:#F8F8F2;">(resolve, reject);</span></span>
<span class="line"><span style="color:#F8F8F2;">        } </span><span style="color:#FF79C6;">catch</span><span style="color:#F8F8F2;"> (e) {</span></span>
<span class="line"><span style="color:#50FA7B;">          reject</span><span style="color:#F8F8F2;">(e);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (res) {</span></span>
<span class="line"><span style="color:#FF79C6;">          if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> res.then </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">function</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            res.</span><span style="color:#50FA7B;">then</span><span style="color:#F8F8F2;">(resolve, reject);</span></span>
<span class="line"><span style="color:#F8F8F2;">          } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">            // new syntax in Vue 2.3</span></span>
<span class="line"><span style="color:#FF79C6;">            const</span><span style="color:#F8F8F2;"> comp </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> res.component;</span></span>
<span class="line"><span style="color:#FF79C6;">            if</span><span style="color:#F8F8F2;"> (comp </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#FF79C6;"> typeof</span><span style="color:#F8F8F2;"> comp.then </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">function</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">              comp.</span><span style="color:#50FA7B;">then</span><span style="color:#F8F8F2;">(resolve, reject);</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">          }</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">hasAsync) </span><span style="color:#50FA7B;">next</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  };</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="extractguards" tabindex="-1"><a class="header-anchor" href="#extractguards"><span>extractGuards</span></a></h4><p>获取路由守卫 从 record 中的 component 组件中获取到对应的路由导航 <img src="`+o+`" alt="" loading="lazy"></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// 获取组件离开守卫</span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> extractLeaveGuards</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">deactivated</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt;)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">?</span><span style="color:#FFB86C;font-style:italic;">Function</span><span style="color:#F8F8F2;">&gt; {</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#50FA7B;"> extractGuards</span><span style="color:#F8F8F2;">(deactivated, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">beforeRouteLeave</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, bindGuard, </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#6272A4;">// 获取组件更新守卫</span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> extractUpdateHooks</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">updated</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt;)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">?</span><span style="color:#FFB86C;font-style:italic;">Function</span><span style="color:#F8F8F2;">&gt; {</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#50FA7B;"> extractGuards</span><span style="color:#F8F8F2;">(updated, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">beforeRouteUpdate</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, bindGuard);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> bindGuard</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">guard</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> NavigationGuard</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">instance</span><span style="color:#FF79C6;">:</span><span style="color:#FF79C6;"> ?</span><span style="color:#8BE9FD;font-style:italic;">_Vue</span><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#FF79C6;"> ?</span><span style="color:#8BE9FD;font-style:italic;">NavigationGuard</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (instance) {</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> boundRouteGuard</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#F8F8F2;"> guard.</span><span style="color:#50FA7B;">apply</span><span style="color:#F8F8F2;">(instance, </span><span style="color:#BD93F9;font-style:italic;">arguments</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#6272A4;">//  获取 路由导航函数</span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> extractGuards</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  records</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  name</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> string</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#50FA7B;">  bind</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  reverse</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> boolean</span></span>
<span class="line"><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">?</span><span style="color:#FFB86C;font-style:italic;">Function</span><span style="color:#F8F8F2;">&gt; {</span></span>
<span class="line"><span style="color:#6272A4;">  //  fn =&gt;  从record记录中的 components 遍历 组件name，获取到 component</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> guards </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> flatMapComponents</span><span style="color:#F8F8F2;">(records, (</span><span style="color:#FFB86C;font-style:italic;">def</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">instance</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">match</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">    //  更具 key 从 component.options 中获取 路由导航函数</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> guard </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> extractGuard</span><span style="color:#F8F8F2;">(def, name);</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (guard) {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#F8F8F2;"> Array.</span><span style="color:#50FA7B;">isArray</span><span style="color:#F8F8F2;">(guard)</span></span>
<span class="line"><span style="color:#FF79C6;">        ?</span><span style="color:#F8F8F2;"> guard.</span><span style="color:#50FA7B;">map</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">guard</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#50FA7B;"> bind</span><span style="color:#F8F8F2;">(guard, instance, match, key))</span></span>
<span class="line"><span style="color:#FF79C6;">        :</span><span style="color:#6272A4;"> //  guard.apply(instance,arguments)</span></span>
<span class="line"><span style="color:#6272A4;">          //  改变 this 为 组件</span></span>
<span class="line"><span style="color:#50FA7B;">          bind</span><span style="color:#F8F8F2;">(guard, instance, match, key);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#6272A4;">  //  reverse 将数组中元素的位置颠倒</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#50FA7B;"> flatten</span><span style="color:#F8F8F2;">(reverse </span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> guards.</span><span style="color:#50FA7B;">reverse</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> guards);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> extractGuard</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  def</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Object</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  key</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> string</span></span>
<span class="line"><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> NavigationGuard</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">NavigationGuard</span><span style="color:#F8F8F2;">&gt; {</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> def </span><span style="color:#FF79C6;">!==</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">function</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">    // extend now so that global mixins are applied.</span></span>
<span class="line"><span style="color:#F8F8F2;">    def </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> _Vue.</span><span style="color:#50FA7B;">extend</span><span style="color:#F8F8F2;">(def);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> def.options[key];</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> flatMapComponents</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  matched</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RouteRecord</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#50FA7B;">  fn</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span></span>
<span class="line"><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">?</span><span style="color:#FFB86C;font-style:italic;">Function</span><span style="color:#F8F8F2;">&gt; {</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#50FA7B;"> flatten</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">    matched.</span><span style="color:#50FA7B;">map</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">m</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">      // 从record记录中的 components 遍历 组件name，获取到 component</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#F8F8F2;"> Object.</span><span style="color:#50FA7B;">keys</span><span style="color:#F8F8F2;">(m.components).</span><span style="color:#50FA7B;">map</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span></span>
<span class="line"><span style="color:#50FA7B;">        fn</span><span style="color:#F8F8F2;">(m.components[key], m.instances[key], m, key)</span></span>
<span class="line"><span style="color:#F8F8F2;">      );</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">  );</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> flatten</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">arr</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">any</span><span style="color:#F8F8F2;">&gt;)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">any</span><span style="color:#F8F8F2;">&gt; {</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">.prototype.concat.</span><span style="color:#50FA7B;">apply</span><span style="color:#F8F8F2;">([], arr);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="runqueue" tabindex="-1"><a class="header-anchor" href="#runqueue"><span>runQueue</span></a></h4><p>执行 路由导航</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">//  fn iterator</span></span>
<span class="line"><span style="color:#6272A4;">//  cb runQueue () =&gt; {}</span></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> runQueue</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  queue</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">?</span><span style="color:#FFB86C;font-style:italic;">NavigationGuard</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#50FA7B;">  fn</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#50FA7B;">  cb</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span></span>
<span class="line"><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#50FA7B;"> step</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">index</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (index </span><span style="color:#FF79C6;">&gt;=</span><span style="color:#F8F8F2;"> queue.length) {</span></span>
<span class="line"><span style="color:#50FA7B;">      cb</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (queue[index]) {</span></span>
<span class="line"><span style="color:#50FA7B;">        fn</span><span style="color:#F8F8F2;">(queue[index], () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">          step</span><span style="color:#F8F8F2;">(index </span><span style="color:#FF79C6;">+</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        });</span></span>
<span class="line"><span style="color:#F8F8F2;">      } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">        step</span><span style="color:#F8F8F2;">(index </span><span style="color:#FF79C6;">+</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  };</span></span>
<span class="line"><span style="color:#50FA7B;">  step</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#6272A4;">//  hook 路由导航函数</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#50FA7B;"> iterator</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">hook</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> NavigationGuard</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">  //  confirmTransition this.pending = router</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.pending </span><span style="color:#FF79C6;">!==</span><span style="color:#F8F8F2;"> route) {</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#50FA7B;"> abort</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">createNavigationCancelledError</span><span style="color:#F8F8F2;">(current, route));</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#FF79C6;">  try</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">    //  to from next()</span></span>
<span class="line"><span style="color:#50FA7B;">    hook</span><span style="color:#F8F8F2;">(route, current, (</span><span style="color:#FFB86C;font-style:italic;">to</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> any</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (to </span><span style="color:#FF79C6;">===</span><span style="color:#BD93F9;"> false</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">        // next(false) -&gt; abort navigation, ensure current URL</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">ensureURL</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#50FA7B;">        abort</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">createNavigationAbortedError</span><span style="color:#F8F8F2;">(current, route));</span></span>
<span class="line"><span style="color:#F8F8F2;">      } </span><span style="color:#FF79C6;">else</span><span style="color:#FF79C6;"> if</span><span style="color:#F8F8F2;"> (</span><span style="color:#50FA7B;">isError</span><span style="color:#F8F8F2;">(to)) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">ensureURL</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#50FA7B;">        abort</span><span style="color:#F8F8F2;">(to);</span></span>
<span class="line"><span style="color:#F8F8F2;">      } </span><span style="color:#FF79C6;">else</span><span style="color:#FF79C6;"> if</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#FF79C6;">        typeof</span><span style="color:#F8F8F2;"> to </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">string</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> ||</span></span>
<span class="line"><span style="color:#F8F8F2;">        (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> to </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">object</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> &amp;&amp;</span></span>
<span class="line"><span style="color:#F8F8F2;">          (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> to.path </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">string</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> ||</span><span style="color:#FF79C6;"> typeof</span><span style="color:#F8F8F2;"> to.name </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">string</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">      ) {</span></span>
<span class="line"><span style="color:#6272A4;">        // next(&#39;/&#39;) or next({ path: &#39;/&#39; }) -&gt; redirect</span></span>
<span class="line"><span style="color:#50FA7B;">        abort</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">createNavigationRedirectedError</span><span style="color:#F8F8F2;">(current, route));</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> to </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">object</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> &amp;&amp;</span><span style="color:#F8F8F2;"> to.replace) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">          this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(to);</span></span>
<span class="line"><span style="color:#F8F8F2;">        } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">          this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(to);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">        // confirm transition and pass on the value</span></span>
<span class="line"><span style="color:#50FA7B;">        next</span><span style="color:#F8F8F2;">(to);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#FF79C6;">catch</span><span style="color:#F8F8F2;"> (e) {</span></span>
<span class="line"><span style="color:#50FA7B;">    abort</span><span style="color:#F8F8F2;">(e);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#6272A4;">// queue 路由导航数组</span></span>
<span class="line"><span style="color:#50FA7B;">runQueue</span><span style="color:#F8F8F2;">(queue, iterator, () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">  // wait until async components are resolved before</span></span>
<span class="line"><span style="color:#6272A4;">  // extracting in-component enter guards</span></span>
<span class="line"><span style="color:#6272A4;">  // 获取 beforeRouteEnter</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> enterGuards </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> extractEnterGuards</span><span style="color:#F8F8F2;">(activated);</span></span>
<span class="line"><span style="color:#6272A4;">  //  beforeResolve</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> queue </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> enterGuards.</span><span style="color:#50FA7B;">concat</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.router.resolveHooks);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">  runQueue</span><span style="color:#F8F8F2;">(queue, iterator, () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.pending </span><span style="color:#FF79C6;">!==</span><span style="color:#F8F8F2;"> route) {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#50FA7B;"> abort</span><span style="color:#F8F8F2;">(</span><span style="color:#50FA7B;">createNavigationCancelledError</span><span style="color:#F8F8F2;">(current, route));</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.pending </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">    //  向history 添加或替换一条记录</span></span>
<span class="line"><span style="color:#6272A4;">    //  页面滚动</span></span>
<span class="line"><span style="color:#6272A4;">    //  执行 afterEach 路由导航</span></span>
<span class="line"><span style="color:#50FA7B;">    onComplete</span><span style="color:#F8F8F2;">(route);</span></span>
<span class="line"><span style="color:#6272A4;">    // app = vue</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.router.app) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">.router.app.</span><span style="color:#50FA7B;">$nextTick</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">        // ??</span></span>
<span class="line"><span style="color:#50FA7B;">        handleRouteEntered</span><span style="color:#F8F8F2;">(route);</span></span>
<span class="line"><span style="color:#F8F8F2;">      });</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="router-view-更新机制" tabindex="-1"><a class="header-anchor" href="#router-view-更新机制"><span>router-view 更新机制</span></a></h2><p>_route 改变触发更新</p><p>将路由主机渲染出来</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// core/global-api</span></span>
<span class="line"><span style="color:#F8F8F2;">Vue.</span><span style="color:#50FA7B;">component</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">RouterView</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, View);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>Vue.component</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">Vue.</span><span style="color:#50FA7B;">component</span><span style="color:#FF79C6;"> =</span><span style="color:#FF79C6;"> function</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  id</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> string</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#50FA7B;">  definition</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> Object</span></span>
<span class="line"><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Function</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> Object</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> void</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">definition) {</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.options[type </span><span style="color:#FF79C6;">+</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">s</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">][id];</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">    /* istanbul ignore if */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // @ts-expect-error</span></span>
<span class="line"><span style="color:#F8F8F2;">    definition.name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> definition.name </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> id;</span></span>
<span class="line"><span style="color:#6272A4;">    // _base = Vue</span></span>
<span class="line"><span style="color:#6272A4;">    // extend 构造一个 Vue 的子类</span></span>
<span class="line"><span style="color:#F8F8F2;">    definition </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.options._base.</span><span style="color:#50FA7B;">extend</span><span style="color:#F8F8F2;">(definition);</span></span>
<span class="line"><span style="color:#6272A4;">    // 挂载到Vue.options.components里面</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.options[</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">components</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">][id] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> definition;</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#F8F8F2;"> definition;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>router-view</summary><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  name</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">RouterView</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#6272A4;">  // 定义为函数式组件</span></span>
<span class="line"><span style="color:#F8F8F2;">  functional</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  props</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      type</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> String,</span></span>
<span class="line"><span style="color:#F8F8F2;">      default</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">default</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#6272A4;">  // _createElement</span></span>
<span class="line"><span style="color:#50FA7B;">  render</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">_</span><span style="color:#F8F8F2;">, { </span><span style="color:#FFB86C;font-style:italic;">props</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">children</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">parent</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">data</span><span style="color:#F8F8F2;"> }) {</span></span>
<span class="line"><span style="color:#6272A4;">    // used by devtools to display a router-view badge</span></span>
<span class="line"><span style="color:#6272A4;">    // 表示当前主机为router-view</span></span>
<span class="line"><span style="color:#F8F8F2;">    data.routerView </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // directly use parent context&#39;s createElement() function</span></span>
<span class="line"><span style="color:#6272A4;">    // so that components rendered by router-view can resolve named slots</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> h </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> parent.$createElement;</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> props.name;</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> route </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> parent.$route;</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> cache </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> parent._routerViewCache </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> (parent._routerViewCache </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // determine current view depth, also check to see if the tree</span></span>
<span class="line"><span style="color:#6272A4;">    // has been toggled inactive but kept-alive.</span></span>
<span class="line"><span style="color:#6272A4;">    // 当前 router-view嵌套深度</span></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> depth </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> inactive </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">    while</span><span style="color:#F8F8F2;"> (parent </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> parent._routerRoot </span><span style="color:#FF79C6;">!==</span><span style="color:#F8F8F2;"> parent) {</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> vnodeData </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> parent.$vnode </span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> parent.$vnode.data </span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {};</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (vnodeData.routerView) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        depth</span><span style="color:#FF79C6;">++</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (vnodeData.keepAlive </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> parent._directInactive </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> parent._inactive) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        inactive </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">      parent </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> parent.$parent;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    data.routerViewDepth </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> depth;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // render previous view if the tree is inactive and kept-alive</span></span>
<span class="line"><span style="color:#6272A4;">    // 处理 keep-alive</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (inactive) {</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> cachedData </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> cache[name];</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> cachedComponent </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> cachedData </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> cachedData.component;</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (cachedComponent) {</span></span>
<span class="line"><span style="color:#6272A4;">        // #2301</span></span>
<span class="line"><span style="color:#6272A4;">        // pass props</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (cachedData.configProps) {</span></span>
<span class="line"><span style="color:#50FA7B;">          fillPropsinData</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">            cachedComponent,</span></span>
<span class="line"><span style="color:#F8F8F2;">            data,</span></span>
<span class="line"><span style="color:#F8F8F2;">            cachedData.route,</span></span>
<span class="line"><span style="color:#F8F8F2;">            cachedData.configProps</span></span>
<span class="line"><span style="color:#F8F8F2;">          );</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> h</span><span style="color:#F8F8F2;">(cachedComponent, data, children);</span></span>
<span class="line"><span style="color:#F8F8F2;">      } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">        // render previous empty view</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> h</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> matched </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> route.matched[depth];</span></span>
<span class="line"><span style="color:#6272A4;">    // 获取组件</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> component </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> matched </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> matched.components[name];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // render empty node if no matched route or no config component</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">matched </span><span style="color:#FF79C6;">||</span><span style="color:#FF79C6;"> !</span><span style="color:#F8F8F2;">component) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      cache[name] </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#50FA7B;"> h</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // cache component</span></span>
<span class="line"><span style="color:#F8F8F2;">    cache[name] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { component };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // attach instance registration hook</span></span>
<span class="line"><span style="color:#6272A4;">    // this will be called in the instance&#39;s injected lifecycle hooks</span></span>
<span class="line"><span style="color:#F8F8F2;">    data.</span><span style="color:#50FA7B;">registerRouteInstance</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">vm</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">val</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">      // val could be undefined for unregistration</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> current </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> matched.instances[name];</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> ((val </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> current </span><span style="color:#FF79C6;">!==</span><span style="color:#F8F8F2;"> vm) </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">val </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> current </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> vm)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        matched.instances[name] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> val;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // also register instance in prepatch hook</span></span>
<span class="line"><span style="color:#6272A4;">    // in case the same component instance is reused across different routes</span></span>
<span class="line"><span style="color:#F8F8F2;">    (data.hook </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> (data.hook </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {})).</span><span style="color:#50FA7B;">prepatch</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">_</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">vnode</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      matched.instances[name] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> vnode.componentInstance;</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // register instance in init hook</span></span>
<span class="line"><span style="color:#6272A4;">    // in case kept-alive component be actived when routes changed</span></span>
<span class="line"><span style="color:#F8F8F2;">    data.hook.</span><span style="color:#50FA7B;">init</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">vnode</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#F8F8F2;">        vnode.data.keepAlive </span><span style="color:#FF79C6;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F8F8F2;">        vnode.componentInstance </span><span style="color:#FF79C6;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F8F8F2;">        vnode.componentInstance </span><span style="color:#FF79C6;">!==</span><span style="color:#F8F8F2;"> matched.instances[name]</span></span>
<span class="line"><span style="color:#F8F8F2;">      ) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        matched.instances[name] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> vnode.componentInstance;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">      // if the route transition has already been confirmed then we weren&#39;t</span></span>
<span class="line"><span style="color:#6272A4;">      // able to call the cbs during confirmation as the component was not</span></span>
<span class="line"><span style="color:#6272A4;">      // registered yet, so we call it here.</span></span>
<span class="line"><span style="color:#50FA7B;">      handleRouteEntered</span><span style="color:#F8F8F2;">(route);</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> configProps </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> matched.props </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> matched.props[name];</span></span>
<span class="line"><span style="color:#6272A4;">    // save route and configProps in cache</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (configProps) {</span></span>
<span class="line"><span style="color:#50FA7B;">      extend</span><span style="color:#F8F8F2;">(cache[name], {</span></span>
<span class="line"><span style="color:#F8F8F2;">        route,</span></span>
<span class="line"><span style="color:#F8F8F2;">        configProps,</span></span>
<span class="line"><span style="color:#F8F8F2;">      });</span></span>
<span class="line"><span style="color:#50FA7B;">      fillPropsinData</span><span style="color:#F8F8F2;">(component, data, route, configProps);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#50FA7B;"> h</span><span style="color:#F8F8F2;">(component, data, children);</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,48)]))}const i=n(F,[["render",t],["__file","vue-router-code-analysis.html.vue"]]),y=JSON.parse('{"path":"/vue2/vue-router-code-analysis.html","title":"Vue-Router3.x 框架原理分析","lang":"en-US","frontmatter":{"title":"Vue-Router3.x 框架原理分析","date":"2021-08-22T00:00:00.000Z","category":["Vue"],"type":["vue2","vue-router"],"description":"[]路由跳转匹配 - 子路由 孙路由跳转 []路由记录表的生成 install install _router.init VueRouter VueRouter createMatcher createMatcher createRouteMap 更新路由映射表 从 route 中匹配对应的路由信息 addRouteRecord 路由跳转 html5 ...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/vue2/vue-router-code-analysis.html"}],["meta",{"property":"og:title","content":"Vue-Router3.x 框架原理分析"}],["meta",{"property":"og:description","content":"[]路由跳转匹配 - 子路由 孙路由跳转 []路由记录表的生成 install install _router.init VueRouter VueRouter createMatcher createMatcher createRouteMap 更新路由映射表 从 route 中匹配对应的路由信息 addRouteRecord 路由跳转 html5 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2022-12-30T06:28:03.000Z"}],["meta",{"property":"article:published_time","content":"2021-08-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-30T06:28:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue-Router3.x 框架原理分析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-08-22T00:00:00.000Z\\",\\"dateModified\\":\\"2022-12-30T06:28:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"install","slug":"install","link":"#install","children":[]},{"level":2,"title":"VueRouter","slug":"vuerouter","link":"#vuerouter","children":[{"level":3,"title":"createMatcher","slug":"creatematcher","link":"#creatematcher","children":[]}]},{"level":2,"title":"路由跳转","slug":"路由跳转","link":"#路由跳转","children":[{"level":3,"title":"html5","slug":"html5","link":"#html5","children":[]},{"level":3,"title":"hash","slug":"hash","link":"#hash","children":[]}]},{"level":2,"title":"路由守卫","slug":"路由守卫","link":"#路由守卫","children":[]},{"level":2,"title":"transitionTo","slug":"transitionto","link":"#transitionto","children":[{"level":3,"title":"confirmTransition","slug":"confirmtransition","link":"#confirmtransition","children":[]}]},{"level":2,"title":"router-view 更新机制","slug":"router-view-更新机制","link":"#router-view-更新机制","children":[]}],"git":{"createdTime":1665567570000,"updatedTime":1672381683000,"contributors":[{"name":"卢祥","email":"example@qq.com","commits":3},{"name":"卢祥","email":"example@gmail.com","commits":2},{"name":"luxiag","email":"luxiag@qq.com","commits":1}]},"readingTime":{"minutes":13.55,"words":4065},"filePathRelative":"vue2/vue-router-code-analysis.md","localizedDate":"August 22, 2021","excerpt":"<p>[]路由跳转匹配 - 子路由 孙路由跳转\\n[]路由记录表的生成</p>\\n<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"background-color:#282A36;color:#F8F8F2\\"><pre class=\\"shiki dracula vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#FF79C6\\">import</span><span style=\\"color:#F8F8F2\\"> Vue </span><span style=\\"color:#FF79C6\\">from</span><span style=\\"color:#E9F284\\"> \\"</span><span style=\\"color:#F1FA8C\\">vue</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F8F8F2\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">import</span><span style=\\"color:#F8F8F2\\"> VueRouter </span><span style=\\"color:#FF79C6\\">from</span><span style=\\"color:#E9F284\\"> \\"</span><span style=\\"color:#F1FA8C\\">vue-router</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F8F8F2\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">Vue.</span><span style=\\"color:#50FA7B\\">use</span><span style=\\"color:#F8F8F2\\">(VueRouter);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">export</span><span style=\\"color:#FF79C6\\"> const</span><span style=\\"color:#F8F8F2\\"> constantRoutes </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> [</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    path</span><span style=\\"color:#FF79C6\\">:</span><span style=\\"color:#E9F284\\"> \\"</span><span style=\\"color:#F1FA8C\\">/login</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F8F8F2\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color:#50FA7B\\">    component</span><span style=\\"color:#FF79C6\\">:</span><span style=\\"color:#F8F8F2\\"> () </span><span style=\\"color:#FF79C6\\">=&gt;</span><span style=\\"color:#FF79C6\\"> import</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F1FA8C\\">@/views/login/index</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F8F8F2\\">),</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    hidden</span><span style=\\"color:#FF79C6\\">:</span><span style=\\"color:#BD93F9\\"> true</span><span style=\\"color:#F8F8F2\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  },</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">  // .....</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">];</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">const</span><span style=\\"color:#50FA7B\\"> createRouter</span><span style=\\"color:#FF79C6\\"> =</span><span style=\\"color:#F8F8F2\\"> () </span><span style=\\"color:#FF79C6\\">=&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6;font-weight:bold\\">  new</span><span style=\\"color:#50FA7B\\"> VueRouter</span><span style=\\"color:#F8F8F2\\">({</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    routes</span><span style=\\"color:#FF79C6\\">:</span><span style=\\"color:#F8F8F2\\"> constantRoutes,</span></span>\\n<span class=\\"line\\"><span style=\\"color:#50FA7B\\">    scrollBehavior</span><span style=\\"color:#FF79C6\\">:</span><span style=\\"color:#F8F8F2\\"> () </span><span style=\\"color:#FF79C6\\">=&gt;</span><span style=\\"color:#F8F8F2\\"> ({ y</span><span style=\\"color:#FF79C6\\">:</span><span style=\\"color:#BD93F9\\"> 0</span><span style=\\"color:#F8F8F2\\"> }),</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  });</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">const</span><span style=\\"color:#F8F8F2\\"> router </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#50FA7B\\"> createRouter</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">export</span><span style=\\"color:#FF79C6\\"> default</span><span style=\\"color:#F8F8F2\\"> router;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6;font-weight:bold\\">new</span><span style=\\"color:#50FA7B\\"> Vue</span><span style=\\"color:#F8F8F2\\">({ router });</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{i as comp,y as data};
