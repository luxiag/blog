import{C as Ja,V as F,Q as O,aJ as Ua,O as ma,a5 as ga,a3 as wa,aS as D,aD as _,B as ya,aT as Ea,p as l,aU as da,a9 as k,aV as ea,aH as ba,aW as $a,k as Ca,q as Ka,o as ae,I as ee,aX as se,aY as ne,H as te,_ as Ba,d as Aa,c as ia,e as oe,f as le,aZ as de,a_ as ie,G as re,s as pe,m as _a,l as Sa,A as Pa,aC as Da,aE as Ma,a as Ta,a$ as Ia,W as Ha,r as ce,aa as Fe,a4 as ve}from"./three.module-_5Kft3IB.js";import{O as fe}from"./OrbitControls-86TszHm5.js";import{C as ye,a as he}from"./CSS2DRenderer-cXBTsFor.js";import{S as ue}from"./stats.module--VATS4Kh.js";import{_ as me,e as we,g as ja,f as Z,h as be,j as ge,r as ra,i as Ra,o as Ce}from"./app-BcLUFOMF.js";const Y=new Ua,S=new F,X=new F,u=new O,Oa={X:new F(1,0,0),Y:new F(0,1,0),Z:new F(0,0,1)},ha={type:"change"},La={type:"mouseDown",mode:null},za={type:"mouseUp",mode:null},ka={type:"objectChange"};class Xa extends Ja{constructor(s,a=null){super(void 0,a);const n=new Se(this);this._root=n;const t=new Pe;this._gizmo=t,n.add(t);const d=new De;this._plane=d,n.add(d);const e=this;function o(m,M){let H=M;Object.defineProperty(e,m,{get:function(){return H!==void 0?H:M},set:function(I){H!==I&&(H=I,d[m]=I,t[m]=I,e.dispatchEvent({type:m+"-changed",value:I}),e.dispatchEvent(ha))}}),e[m]=M,d[m]=M,t[m]=M}o("camera",s),o("object",void 0),o("enabled",!0),o("axis",null),o("mode","translate"),o("translationSnap",null),o("rotationSnap",null),o("scaleSnap",null),o("space","world"),o("size",1),o("dragging",!1),o("showX",!0),o("showY",!0),o("showZ",!0);const c=new F,p=new F,b=new O,g=new O,C=new F,x=new O,y=new F,r=new F,v=new F,B=0,E=new F;o("worldPosition",c),o("worldPositionStart",p),o("worldQuaternion",b),o("worldQuaternionStart",g),o("cameraPosition",C),o("cameraQuaternion",x),o("pointStart",y),o("pointEnd",r),o("rotationAxis",v),o("rotationAngle",B),o("eye",E),this._offset=new F,this._startNorm=new F,this._endNorm=new F,this._cameraScale=new F,this._parentPosition=new F,this._parentQuaternion=new O,this._parentQuaternionInv=new O,this._parentScale=new F,this._worldScaleStart=new F,this._worldQuaternionInv=new O,this._worldScale=new F,this._positionStart=new F,this._quaternionStart=new O,this._scaleStart=new F,this._getPointer=xe.bind(this),this._onPointerDown=Be.bind(this),this._onPointerHover=Ee.bind(this),this._onPointerMove=Ae.bind(this),this._onPointerUp=_e.bind(this),a!==null&&this.connect()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="auto"}getHelper(){return this._root}pointerHover(s){if(this.object===void 0||this.dragging===!0)return;s!==null&&Y.setFromCamera(s,this.camera);const a=ua(this._gizmo.picker[this.mode],Y);a?this.axis=a.object.name:this.axis=null}pointerDown(s){if(!(this.object===void 0||this.dragging===!0||s!=null&&s.button!==0)&&this.axis!==null){s!==null&&Y.setFromCamera(s,this.camera);const a=ua(this._plane,Y,!0);a&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(a.point).sub(this.worldPositionStart)),this.dragging=!0,La.mode=this.mode,this.dispatchEvent(La)}}pointerMove(s){const a=this.axis,n=this.mode,t=this.object;let d=this.space;if(n==="scale"?d="local":(a==="E"||a==="XYZE"||a==="XYZ")&&(d="world"),t===void 0||a===null||this.dragging===!1||s!==null&&s.button!==-1)return;s!==null&&Y.setFromCamera(s,this.camera);const e=ua(this._plane,Y,!0);if(e){if(this.pointEnd.copy(e.point).sub(this.worldPositionStart),n==="translate")this._offset.copy(this.pointEnd).sub(this.pointStart),d==="local"&&a!=="XYZ"&&this._offset.applyQuaternion(this._worldQuaternionInv),a.indexOf("X")===-1&&(this._offset.x=0),a.indexOf("Y")===-1&&(this._offset.y=0),a.indexOf("Z")===-1&&(this._offset.z=0),d==="local"&&a!=="XYZ"?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),t.position.copy(this._offset).add(this._positionStart),this.translationSnap&&(d==="local"&&(t.position.applyQuaternion(u.copy(this._quaternionStart).invert()),a.search("X")!==-1&&(t.position.x=Math.round(t.position.x/this.translationSnap)*this.translationSnap),a.search("Y")!==-1&&(t.position.y=Math.round(t.position.y/this.translationSnap)*this.translationSnap),a.search("Z")!==-1&&(t.position.z=Math.round(t.position.z/this.translationSnap)*this.translationSnap),t.position.applyQuaternion(this._quaternionStart)),d==="world"&&(t.parent&&t.position.add(S.setFromMatrixPosition(t.parent.matrixWorld)),a.search("X")!==-1&&(t.position.x=Math.round(t.position.x/this.translationSnap)*this.translationSnap),a.search("Y")!==-1&&(t.position.y=Math.round(t.position.y/this.translationSnap)*this.translationSnap),a.search("Z")!==-1&&(t.position.z=Math.round(t.position.z/this.translationSnap)*this.translationSnap),t.parent&&t.position.sub(S.setFromMatrixPosition(t.parent.matrixWorld))));else if(n==="scale"){if(a.search("XYZ")!==-1){let o=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(o*=-1),X.set(o,o,o)}else S.copy(this.pointStart),X.copy(this.pointEnd),S.applyQuaternion(this._worldQuaternionInv),X.applyQuaternion(this._worldQuaternionInv),X.divide(S),a.search("X")===-1&&(X.x=1),a.search("Y")===-1&&(X.y=1),a.search("Z")===-1&&(X.z=1);t.scale.copy(this._scaleStart).multiply(X),this.scaleSnap&&(a.search("X")!==-1&&(t.scale.x=Math.round(t.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),a.search("Y")!==-1&&(t.scale.y=Math.round(t.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),a.search("Z")!==-1&&(t.scale.z=Math.round(t.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(n==="rotate"){this._offset.copy(this.pointEnd).sub(this.pointStart);const o=20/this.worldPosition.distanceTo(S.setFromMatrixPosition(this.camera.matrixWorld));let c=!1;a==="XYZE"?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(S.copy(this.rotationAxis).cross(this.eye))*o):(a==="X"||a==="Y"||a==="Z")&&(this.rotationAxis.copy(Oa[a]),S.copy(Oa[a]),d==="local"&&S.applyQuaternion(this.worldQuaternion),S.cross(this.eye),S.length()===0?c=!0:this.rotationAngle=this._offset.dot(S.normalize())*o),(a==="E"||c)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),d==="local"&&a!=="E"&&a!=="XYZE"?(t.quaternion.copy(this._quaternionStart),t.quaternion.multiply(u.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),t.quaternion.copy(u.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),t.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(ha),this.dispatchEvent(ka)}}pointerUp(s){s!==null&&s.button!==0||(this.dragging&&this.axis!==null&&(za.mode=this.mode,this.dispatchEvent(za)),this.dragging=!1,this.axis=null)}dispose(){this.disconnect(),this.traverse(function(s){s.geometry&&s.geometry.dispose(),s.material&&s.material.dispose()})}attach(s){return this.object=s,this._root.visible=!0,this}detach(){return this.object=void 0,this.axis=null,this._root.visible=!1,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(ha),this.dispatchEvent(ka),this.pointStart.copy(this.pointEnd))}getRaycaster(){return Y}getMode(){return this.mode}setMode(s){this.mode=s}setTranslationSnap(s){this.translationSnap=s}setRotationSnap(s){this.rotationSnap=s}setScaleSnap(s){this.scaleSnap=s}setSize(s){this.size=s}setSpace(s){this.space=s}}function xe(i){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:i.button};{const s=this.domElement.getBoundingClientRect();return{x:(i.clientX-s.left)/s.width*2-1,y:-(i.clientY-s.top)/s.height*2+1,button:i.button}}}function Ee(i){if(this.enabled)switch(i.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(i));break}}function Be(i){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(i.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(i)),this.pointerDown(this._getPointer(i)))}function Ae(i){this.enabled&&this.pointerMove(this._getPointer(i))}function _e(i){this.enabled&&(this.domElement.releasePointerCapture(i.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(i)))}function ua(i,s,a){const n=s.intersectObject(i,!0);for(let t=0;t<n.length;t++)if(n[t].object.visible||a)return n[t];return!1}const pa=new $a,f=new F(0,1,0),Qa=new F(0,0,0),Za=new Ca,ca=new O,fa=new O,R=new F,Ya=new Ca,ta=new F(1,0,0),q=new F(0,1,0),oa=new F(0,0,1),Fa=new F,sa=new F,na=new F;class Se extends ma{constructor(s){super(),this.isTransformControlsRoot=!0,this.controls=s,this.visible=!1}updateMatrixWorld(s){const a=this.controls;a.object!==void 0&&(a.object.updateMatrixWorld(),a.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):a.object.parent.matrixWorld.decompose(a._parentPosition,a._parentQuaternion,a._parentScale),a.object.matrixWorld.decompose(a.worldPosition,a.worldQuaternion,a._worldScale),a._parentQuaternionInv.copy(a._parentQuaternion).invert(),a._worldQuaternionInv.copy(a.worldQuaternion).invert()),a.camera.updateMatrixWorld(),a.camera.matrixWorld.decompose(a.cameraPosition,a.cameraQuaternion,a._cameraScale),a.camera.isOrthographicCamera?a.camera.getWorldDirection(a.eye).negate():a.eye.copy(a.cameraPosition).sub(a.worldPosition).normalize(),super.updateMatrixWorld(s)}}class Pe extends ma{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const s=new ga({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),a=new wa({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),n=s.clone();n.opacity=.15;const t=a.clone();t.opacity=.5;const d=s.clone();d.color.setHex(16711680);const e=s.clone();e.color.setHex(65280);const o=s.clone();o.color.setHex(255);const c=s.clone();c.color.setHex(16711680),c.opacity=.5;const p=s.clone();p.color.setHex(65280),p.opacity=.5;const b=s.clone();b.color.setHex(255),b.opacity=.5;const g=s.clone();g.opacity=.25;const C=s.clone();C.color.setHex(16776960),C.opacity=.25,s.clone().color.setHex(16776960);const y=s.clone();y.color.setHex(7895160);const r=new D(0,.04,.1,12);r.translate(0,.05,0);const v=new _(.08,.08,.08);v.translate(0,.04,0);const B=new ya;B.setAttribute("position",new Ea([0,0,0,1,0,0],3));const E=new D(.0075,.0075,.5,3);E.translate(0,.25,0);function m(A,z){const T=new ea(A,.0075,3,64,z*Math.PI*2);return T.rotateY(Math.PI/2),T.rotateX(Math.PI/2),T}function M(){const A=new ya;return A.setAttribute("position",new Ea([0,0,0,1,1,1],3)),A}const H={X:[[new l(r,d),[.5,0,0],[0,0,-Math.PI/2]],[new l(r,d),[-.5,0,0],[0,0,Math.PI/2]],[new l(E,d),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new l(r,e),[0,.5,0]],[new l(r,e),[0,-.5,0],[Math.PI,0,0]],[new l(E,e)]],Z:[[new l(r,o),[0,0,.5],[Math.PI/2,0,0]],[new l(r,o),[0,0,-.5],[-Math.PI/2,0,0]],[new l(E,o),null,[Math.PI/2,0,0]]],XYZ:[[new l(new da(.1,0),g.clone()),[0,0,0]]],XY:[[new l(new _(.15,.15,.01),b.clone()),[.15,.15,0]]],YZ:[[new l(new _(.15,.15,.01),c.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new l(new _(.15,.15,.01),p.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},I={X:[[new l(new D(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new l(new D(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new l(new D(.2,0,.6,4),n),[0,.3,0]],[new l(new D(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new l(new D(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new l(new D(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new l(new da(.2,0),n)]],XY:[[new l(new _(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new l(new _(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new l(new _(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]]},$={START:[[new l(new da(.01,2),t),null,null,null,"helper"]],END:[[new l(new da(.01,2),t),null,null,null,"helper"]],DELTA:[[new k(M(),t),null,null,null,"helper"]],X:[[new k(B,t.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new k(B,t.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new k(B,t.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},j={XYZE:[[new l(m(.5,1),y),null,[0,Math.PI/2,0]]],X:[[new l(m(.5,.5),d)]],Y:[[new l(m(.5,.5),e),null,[0,0,-Math.PI/2]]],Z:[[new l(m(.5,.5),o),null,[0,Math.PI/2,0]]],E:[[new l(m(.75,1),C),null,[0,Math.PI/2,0]]]},K={AXIS:[[new k(B,t.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},G={XYZE:[[new l(new ba(.25,10,8),n)]],X:[[new l(new ea(.5,.1,4,24),n),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new l(new ea(.5,.1,4,24),n),[0,0,0],[Math.PI/2,0,0]]],Z:[[new l(new ea(.5,.1,4,24),n),[0,0,0],[0,0,-Math.PI/2]]],E:[[new l(new ea(.75,.1,2,24),n)]]},Q={X:[[new l(v,d),[.5,0,0],[0,0,-Math.PI/2]],[new l(E,d),[0,0,0],[0,0,-Math.PI/2]],[new l(v,d),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new l(v,e),[0,.5,0]],[new l(E,e)],[new l(v,e),[0,-.5,0],[0,0,Math.PI]]],Z:[[new l(v,o),[0,0,.5],[Math.PI/2,0,0]],[new l(E,o),[0,0,0],[Math.PI/2,0,0]],[new l(v,o),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new l(new _(.15,.15,.01),b),[.15,.15,0]]],YZ:[[new l(new _(.15,.15,.01),c),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new l(new _(.15,.15,.01),p),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new l(new _(.1,.1,.1),g.clone())]]},W={X:[[new l(new D(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new l(new D(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new l(new D(.2,0,.6,4),n),[0,.3,0]],[new l(new D(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new l(new D(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new l(new D(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new l(new _(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new l(new _(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new l(new _(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new l(new _(.2,.2,.2),n),[0,0,0]]]},aa={X:[[new k(B,t.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new k(B,t.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new k(B,t.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function P(A){const z=new ma;for(const T in A)for(let w=A[T].length;w--;){const h=A[T][w][0].clone(),N=A[T][w][1],U=A[T][w][2],la=A[T][w][3],Va=A[T][w][4];h.name=T,h.tag=Va,N&&h.position.set(N[0],N[1],N[2]),U&&h.rotation.set(U[0],U[1],U[2]),la&&h.scale.set(la[0],la[1],la[2]),h.updateMatrix();const xa=h.geometry.clone();xa.applyMatrix4(h.matrix),h.geometry=xa,h.renderOrder=1/0,h.position.set(0,0,0),h.rotation.set(0,0,0),h.scale.set(1,1,1),z.add(h)}return z}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=P(H)),this.add(this.gizmo.rotate=P(j)),this.add(this.gizmo.scale=P(Q)),this.add(this.picker.translate=P(I)),this.add(this.picker.rotate=P(G)),this.add(this.picker.scale=P(W)),this.add(this.helper.translate=P($)),this.add(this.helper.rotate=P(K)),this.add(this.helper.scale=P(aa)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(s){const n=(this.mode==="scale"?"local":this.space)==="local"?this.worldQuaternion:fa;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";let t=[];t=t.concat(this.picker[this.mode].children),t=t.concat(this.gizmo[this.mode].children),t=t.concat(this.helper[this.mode].children);for(let d=0;d<t.length;d++){const e=t[d];e.visible=!0,e.rotation.set(0,0,0),e.position.copy(this.worldPosition);let o;if(this.camera.isOrthographicCamera?o=(this.camera.top-this.camera.bottom)/this.camera.zoom:o=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),e.scale.set(1,1,1).multiplyScalar(o*this.size/4),e.tag==="helper"){e.visible=!1,e.name==="AXIS"?(e.visible=!!this.axis,this.axis==="X"&&(u.setFromEuler(pa.set(0,0,0)),e.quaternion.copy(n).multiply(u),Math.abs(f.copy(ta).applyQuaternion(n).dot(this.eye))>.9&&(e.visible=!1)),this.axis==="Y"&&(u.setFromEuler(pa.set(0,0,Math.PI/2)),e.quaternion.copy(n).multiply(u),Math.abs(f.copy(q).applyQuaternion(n).dot(this.eye))>.9&&(e.visible=!1)),this.axis==="Z"&&(u.setFromEuler(pa.set(0,Math.PI/2,0)),e.quaternion.copy(n).multiply(u),Math.abs(f.copy(oa).applyQuaternion(n).dot(this.eye))>.9&&(e.visible=!1)),this.axis==="XYZE"&&(u.setFromEuler(pa.set(0,Math.PI/2,0)),f.copy(this.rotationAxis),e.quaternion.setFromRotationMatrix(Za.lookAt(Qa,f,q)),e.quaternion.multiply(u),e.visible=this.dragging),this.axis==="E"&&(e.visible=!1)):e.name==="START"?(e.position.copy(this.worldPositionStart),e.visible=this.dragging):e.name==="END"?(e.position.copy(this.worldPosition),e.visible=this.dragging):e.name==="DELTA"?(e.position.copy(this.worldPositionStart),e.quaternion.copy(this.worldQuaternionStart),S.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),S.applyQuaternion(this.worldQuaternionStart.clone().invert()),e.scale.copy(S),e.visible=this.dragging):(e.quaternion.copy(n),this.dragging?e.position.copy(this.worldPositionStart):e.position.copy(this.worldPosition),this.axis&&(e.visible=this.axis.search(e.name)!==-1));continue}e.quaternion.copy(n),this.mode==="translate"||this.mode==="scale"?(e.name==="X"&&Math.abs(f.copy(ta).applyQuaternion(n).dot(this.eye))>.99&&(e.scale.set(1e-10,1e-10,1e-10),e.visible=!1),e.name==="Y"&&Math.abs(f.copy(q).applyQuaternion(n).dot(this.eye))>.99&&(e.scale.set(1e-10,1e-10,1e-10),e.visible=!1),e.name==="Z"&&Math.abs(f.copy(oa).applyQuaternion(n).dot(this.eye))>.99&&(e.scale.set(1e-10,1e-10,1e-10),e.visible=!1),e.name==="XY"&&Math.abs(f.copy(oa).applyQuaternion(n).dot(this.eye))<.2&&(e.scale.set(1e-10,1e-10,1e-10),e.visible=!1),e.name==="YZ"&&Math.abs(f.copy(ta).applyQuaternion(n).dot(this.eye))<.2&&(e.scale.set(1e-10,1e-10,1e-10),e.visible=!1),e.name==="XZ"&&Math.abs(f.copy(q).applyQuaternion(n).dot(this.eye))<.2&&(e.scale.set(1e-10,1e-10,1e-10),e.visible=!1)):this.mode==="rotate"&&(ca.copy(n),f.copy(this.eye).applyQuaternion(u.copy(n).invert()),e.name.search("E")!==-1&&e.quaternion.setFromRotationMatrix(Za.lookAt(this.eye,Qa,q)),e.name==="X"&&(u.setFromAxisAngle(ta,Math.atan2(-f.y,f.z)),u.multiplyQuaternions(ca,u),e.quaternion.copy(u)),e.name==="Y"&&(u.setFromAxisAngle(q,Math.atan2(f.x,f.z)),u.multiplyQuaternions(ca,u),e.quaternion.copy(u)),e.name==="Z"&&(u.setFromAxisAngle(oa,Math.atan2(f.y,f.x)),u.multiplyQuaternions(ca,u),e.quaternion.copy(u))),e.visible=e.visible&&(e.name.indexOf("X")===-1||this.showX),e.visible=e.visible&&(e.name.indexOf("Y")===-1||this.showY),e.visible=e.visible&&(e.name.indexOf("Z")===-1||this.showZ),e.visible=e.visible&&(e.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),e.material._color=e.material._color||e.material.color.clone(),e.material._opacity=e.material._opacity||e.material.opacity,e.material.color.copy(e.material._color),e.material.opacity=e.material._opacity,this.enabled&&this.axis&&(e.name===this.axis||this.axis.split("").some(function(c){return e.name===c}))&&(e.material.color.setHex(16776960),e.material.opacity=1)}super.updateMatrixWorld(s)}}class De extends l{constructor(){super(new Ka(1e5,1e5,2,2),new ga({visible:!1,wireframe:!0,side:ae,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(s){let a=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(a="local"),Fa.copy(ta).applyQuaternion(a==="local"?this.worldQuaternion:fa),sa.copy(q).applyQuaternion(a==="local"?this.worldQuaternion:fa),na.copy(oa).applyQuaternion(a==="local"?this.worldQuaternion:fa),f.copy(sa),this.mode){case"translate":case"scale":switch(this.axis){case"X":f.copy(this.eye).cross(Fa),R.copy(Fa).cross(f);break;case"Y":f.copy(this.eye).cross(sa),R.copy(sa).cross(f);break;case"Z":f.copy(this.eye).cross(na),R.copy(na).cross(f);break;case"XY":R.copy(na);break;case"YZ":R.copy(Fa);break;case"XZ":f.copy(na),R.copy(sa);break;case"XYZ":case"E":R.set(0,0,0);break}break;case"rotate":default:R.set(0,0,0)}R.length()===0?this.quaternion.copy(this.cameraQuaternion):(Ya.lookAt(S.set(0,0,0),R,f),this.quaternion.setFromRotationMatrix(Ya)),super.updateMatrixWorld(s)}}const V=4,J=1024,L=4;function Me(i=1){const s=new Uint16Array(J*L*i*V),a=new se(s,J,L*i,ne,te);return a.wrapS=Ba,a.wrapY=Ba,a.magFilter=Aa,a.minFilter=Aa,a.needsUpdate=!0,a}function Te(i,s,a=0){const n=Math.floor(J*(L/4));s.arcLengthDivisions=n/2,s.updateArcLengths();const t=s.getSpacedPoints(n),d=s.computeFrenetFrames(n,!0);for(let e=0;e<n;e++){const o=Math.floor(e/J),c=e%J;let p=t[e];va(i,c,p.x,p.y,p.z,0+o+L*a),p=d.tangents[e],va(i,c,p.x,p.y,p.z,1+o+L*a),p=d.normals[e],va(i,c,p.x,p.y,p.z,2+o+L*a),p=d.binormals[e],va(i,c,p.x,p.y,p.z,3+o+L*a)}i.needsUpdate=!0}function va(i,s,a,n,t,d){const e=i.image,{data:o}=e,c=V*J*d;o[s*V+c+0]=ia.toHalfFloat(a),o[s*V+c+1]=ia.toHalfFloat(n),o[s*V+c+2]=ia.toHalfFloat(t),o[s*V+c+3]=ia.toHalfFloat(1)}function Ie(i){return{spineTexture:{value:i},pathOffset:{type:"f",value:0},pathSegment:{type:"f",value:1},spineOffset:{type:"f",value:161},spineLength:{type:"f",value:400},flow:{type:"i",value:1}}}function qa(i,s,a=1){i.__ok||(i.__ok=!0,i.onBeforeCompile=n=>{if(n.__modified)return;n.__modified=!0,Object.assign(n.uniforms,s);const t=`
		uniform sampler2D spineTexture;
		uniform float pathOffset;
		uniform float pathSegment;
		uniform float spineOffset;
		uniform float spineLength;
		uniform int flow;

		float textureLayers = ${L*a}.;
		float textureStacks = ${L/4}.;

		${n.vertexShader}
		`.replace("#include <beginnormal_vertex>","").replace("#include <defaultnormal_vertex>","").replace("#include <begin_vertex>","").replace(/void\s*main\s*\(\)\s*\{/,`
void main() {
#include <beginnormal_vertex>

vec4 worldPos = modelMatrix * vec4(position, 1.);

bool bend = flow > 0;
float xWeight = bend ? 0. : 1.;

#ifdef USE_INSTANCING
float pathOffsetFromInstanceMatrix = instanceMatrix[3][2];
float spineLengthFromInstanceMatrix = instanceMatrix[3][0];
float spinePortion = bend ? (worldPos.x + spineOffset) / spineLengthFromInstanceMatrix : 0.;
float mt = (spinePortion * pathSegment + pathOffset + pathOffsetFromInstanceMatrix)*textureStacks;
#else
float spinePortion = bend ? (worldPos.x + spineOffset) / spineLength : 0.;
float mt = (spinePortion * pathSegment + pathOffset)*textureStacks;
#endif

mt = mod(mt, textureStacks);
float rowOffset = floor(mt);

#ifdef USE_INSTANCING
rowOffset += instanceMatrix[3][1] * ${L}.;
#endif

vec3 spinePos = texture2D(spineTexture, vec2(mt, (0. + rowOffset + 0.5) / textureLayers)).xyz;
vec3 a =        texture2D(spineTexture, vec2(mt, (1. + rowOffset + 0.5) / textureLayers)).xyz;
vec3 b =        texture2D(spineTexture, vec2(mt, (2. + rowOffset + 0.5) / textureLayers)).xyz;
vec3 c =        texture2D(spineTexture, vec2(mt, (3. + rowOffset + 0.5) / textureLayers)).xyz;
mat3 basis = mat3(a, b, c);

vec3 transformed = basis
	* vec3(worldPos.x * xWeight, worldPos.y * 1., worldPos.z * 1.)
	+ spinePos;

vec3 transformedNormal = normalMatrix * (basis * objectNormal);
			`).replace("#include <project_vertex>",`vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );
				gl_Position = projectionMatrix * mvPosition;`);n.vertexShader=t})}class Ga{constructor(s,a=1){const n=s.clone(),t=Me(a),d=Ie(t);n.traverse(function(e){if(e instanceof l||e instanceof ee)if(Array.isArray(e.material)){const o=[];for(const c of e.material){const p=c.clone();qa(p,d,a),o.push(p)}e.material=o}else e.material=e.material.clone(),qa(e.material,d,a)}),this.curveArray=new Array(a),this.curveLengthArray=new Array(a),this.object3D=n,this.splineTexure=t,this.uniforms=d}updateCurve(s,a){if(s>=this.curveArray.length)throw Error("Index out of range for Flow");const n=a.getLength();this.uniforms.spineLength.value=n,this.curveLengthArray[s]=n,this.curveArray[s]=a,Te(this.splineTexure,a,s)}moveAlongCurve(s){this.uniforms.pathOffset.value+=s}}new Ca;class Wa extends oe{constructor(s){super(s)}load(s,a,n,t){const d=this,e=new le(this.manager);e.setPath(this.path),e.setRequestHeader(this.requestHeader),e.setWithCredentials(this.withCredentials),e.load(s,function(o){const c=d.parse(JSON.parse(o));a&&a(c)},n,t)}parse(s){return new He(s)}}class He{constructor(s){this.isFont=!0,this.type="Font",this.data=s}generateShapes(s,a=100){const n=[],t=je(s,a,this.data);for(let d=0,e=t.length;d<e;d++)n.push(...t[d].toShapes());return n}}function je(i,s,a){const n=Array.from(i),t=s/a.resolution,d=(a.boundingBox.yMax-a.boundingBox.yMin+a.underlineThickness)*t,e=[];let o=0,c=0;for(let p=0;p<n.length;p++){const b=n[p];if(b===`
`)o=0,c-=d;else{const g=Re(b,t,o,c,a);o+=g.offsetX,e.push(g.path)}}return e}function Re(i,s,a,n,t){const d=t.glyphs[i]||t.glyphs["?"];if(!d){console.error('THREE.Font: character "'+i+'" does not exists in font family '+t.familyName+".");return}const e=new de;let o,c,p,b,g,C,x,y;if(d.o){const r=d._cachedOutline||(d._cachedOutline=d.o.split(" "));for(let v=0,B=r.length;v<B;)switch(r[v++]){case"m":o=r[v++]*s+a,c=r[v++]*s+n,e.moveTo(o,c);break;case"l":o=r[v++]*s+a,c=r[v++]*s+n,e.lineTo(o,c);break;case"q":p=r[v++]*s+a,b=r[v++]*s+n,g=r[v++]*s+a,C=r[v++]*s+n,e.quadraticCurveTo(g,C,p,b);break;case"b":p=r[v++]*s+a,b=r[v++]*s+n,g=r[v++]*s+a,C=r[v++]*s+n,x=r[v++]*s+a,y=r[v++]*s+n,e.bezierCurveTo(g,C,x,y,p,b);break}}return{offsetX:d.ha*s,path:e}}class Na extends ie{constructor(s,a={}){const n=a.font;if(n===void 0)super();else{const t=n.generateShapes(s,a.size);a.depth===void 0&&a.height!==void 0&&console.warn("THREE.TextGeometry: .height is now depreciated. Please use .depth instead"),a.depth=a.depth!==void 0?a.depth:a.height!==void 0?a.height:50,a.bevelThickness===void 0&&(a.bevelThickness=10),a.bevelSize===void 0&&(a.bevelSize=8),a.bevelEnabled===void 0&&(a.bevelEnabled=!1),super(t,a)}this.type="TextGeometry"}}const Oe={__name:"threejs-curve.html",setup(i,{expose:s}){s();const a=ra(),n=new pe,t=new re,d=ra(900);function e(){let b,g,C,x,y,r;x=new _a(75,2,.1,200),x.position.set(0,5,-10),y=new Sa;const E=new Pa(16777215);E.position.set(0,0,1),y.add(E);const m=new Da(16777215,.5);y.add(m);const M=new ba(5,16,16),H=new Ma({specular:3355443,shininess:5,map:t.load("./assets/textures/planets/earth_atmos_2048.jpg"),specularMap:t.load("./assets/textures/planets/earth_specular_2048.jpg"),normalMap:t.load("./assets/textures/planets/earth_normal_2048.jpg"),normalScale:new Ta(.85,.85)});g=new l(M,H),g.position.z=-4,y.add(g);const I=new ba(.5,16,16),$=new Ma({shininess:5,map:t.load("./assets/textures/planets/moon_1024.jpg")});b=new l(I,$),y.add(b),C=new Ia([new F(-10,0,10),new F(-5,5,5),new F(0,0,5),new F(5,-5,5),new F(10,0,10)],!0);const j=C.getPoints(500),K=new ya().setFromPoints(j),G=new wa({color:16711680}),Q=new k(K,G);y.add(Q),r=new Ha,r.setPixelRatio(window.devicePixelRatio),window.addEventListener("resize",W),r.setSize(a.value.offsetWidth,a.value.offsetWidth/2),a.value.appendChild(r.domElement),r.render(y,x);function W(){x.aspect=2,x.updateProjectionMatrix(),r.setSize(a.value.offsetWidth,a.value.offsetWidth/2),d.value=a.value.offsetWidth}function aa(){r.render(y,x);const P=n.getElapsedTime(),A=P/10%1;b.position.set(Math.sin(P)*8,0,Math.cos(P)*8);const z=C.getPoint(A);x.position.copy(z),x.lookAt(g.position),requestAnimationFrame(aa)}aa()}const o=ra(),c=()=>{const C=[],x=new Ta;let y,r,v,B,E,m,M=0;y=new Sa,r=new _a(40,2,1,1e3),r.position.set(2,2,4),r.lookAt(y.position);const H=[{x:1,y:0,z:-1},{x:1,y:0,z:1},{x:-1,y:0,z:1},{x:-1,y:0,z:-1}],I=new _(.1,.1,.1),$=new ga;for(const w of H){const h=new l(I,$);h.position.copy(w),C.push(h),y.add(h)}const j=new Ia(C.map(w=>w.position));j.curveType="centripetal",j.closed=!0;const K=j.getPoints(50),G=new Fe(new ya().setFromPoints(K),new wa({color:65280}));y.add(G);const Q=new Pa(16755251);Q.position.set(-10,10,10),Q.intensity=1,y.add(Q);const W=new Da(14707);W.intensity=1,y.add(W),new Wa().load("./assets/geojson/helvetiker_regular.typeface.json",function(w){const h=new Na("Hello three.js!",{font:w,size:.2,height:.05,curveSegments:12,bevelEnabled:!0,bevelThickness:.02,bevelSize:.01,bevelOffset:0,bevelSegments:5});h.rotateX(Math.PI);const N=new ve({color:10092543}),U=new l(h,N);m=new Ga(U),m.updateCurve(0,j),y.add(m.object3D)}),v=new Ha({antialias:!0}),v.setSize(o.value.offsetWidth,o.value.offsetWidth/2),o.value.appendChild(v.domElement),v.domElement.addEventListener("pointerdown",A),B=new Ua,E=new Xa(r,v.domElement),E.addEventListener("dragging-changed",function(w){if(!w.value){const h=j.getPoints(50);G.geometry.setFromPoints(h),m.updateCurve(0,j)}window.addEventListener("resize",P)});function P(){r.updateProjectionMatrix(),v.setSize(o.value.offsetWidth,o.value.offsetWidth/2)}function A(w){M=1,x.x=w.clientX/window.innerWidth*2-1,x.y=-(w.clientY/window.innerHeight)*2+1}function z(){if(requestAnimationFrame(z),M===1){B.setFromCamera(x,r),M=0;const w=B.intersectObjects(C,!1);if(console.log(w,"a"),w.length){const h=w[0].object;E.attach(h),y.add(E)}}m&&m.moveAlongCurve(.001),T()}function T(){v.render(y,r)}z()};Ra(()=>{e(),d.value=a.value.offsetWidth});const p={motion:a,clock:n,textureLoader:t,width:d,initMotion:e,modifierCurveRef:o,initModifierCurveRef:c,ref:ra,onMounted:Ra,get THREE(){return ce},get OrbitControls(){return fe},get CSS2DRenderer(){return he},get CSS2DObject(){return ye},get TransformControls(){return Xa},get Stats(){return ue},get Flow(){return Ga},get FontLoader(){return Wa},get TextGeometry(){return Na}};return Object.defineProperty(p,"__isScriptSetup",{enumerable:!1,value:!0}),p}},Le={class:"motion",ref:"motion"},ze=["height","width"];function ke(i,s,a,n,t,d){return Ce(),we("div",null,[s[0]||(s[0]=ja(`<h2 id="曲线运动" tabindex="-1" data-v-d0564ef7><a class="header-anchor" href="#曲线运动" data-v-d0564ef7><span data-v-d0564ef7>曲线运动</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-d0564ef7><pre class="shiki dracula vp-code" data-v-d0564ef7><code data-v-d0564ef7><span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7>  // 从一系列的点创建一条平滑的三维样条曲线。</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>  curve </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>CatmullRomCurve3</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>    [</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7>      new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>Vector3</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#FF79C6;" data-v-d0564ef7>-</span><span style="color:#BD93F9;" data-v-d0564ef7>10</span><span style="color:#F8F8F2;" data-v-d0564ef7>, </span><span style="color:#BD93F9;" data-v-d0564ef7>0</span><span style="color:#F8F8F2;" data-v-d0564ef7>, </span><span style="color:#BD93F9;" data-v-d0564ef7>10</span><span style="color:#F8F8F2;" data-v-d0564ef7>),</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7>      new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>Vector3</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#FF79C6;" data-v-d0564ef7>-</span><span style="color:#BD93F9;" data-v-d0564ef7>5</span><span style="color:#F8F8F2;" data-v-d0564ef7>, </span><span style="color:#BD93F9;" data-v-d0564ef7>5</span><span style="color:#F8F8F2;" data-v-d0564ef7>, </span><span style="color:#BD93F9;" data-v-d0564ef7>5</span><span style="color:#F8F8F2;" data-v-d0564ef7>),</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7>      new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>Vector3</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#BD93F9;" data-v-d0564ef7>0</span><span style="color:#F8F8F2;" data-v-d0564ef7>, </span><span style="color:#BD93F9;" data-v-d0564ef7>0</span><span style="color:#F8F8F2;" data-v-d0564ef7>, </span><span style="color:#BD93F9;" data-v-d0564ef7>5</span><span style="color:#F8F8F2;" data-v-d0564ef7>),</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7>      new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>Vector3</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#BD93F9;" data-v-d0564ef7>5</span><span style="color:#F8F8F2;" data-v-d0564ef7>, </span><span style="color:#FF79C6;" data-v-d0564ef7>-</span><span style="color:#BD93F9;" data-v-d0564ef7>5</span><span style="color:#F8F8F2;" data-v-d0564ef7>, </span><span style="color:#BD93F9;" data-v-d0564ef7>5</span><span style="color:#F8F8F2;" data-v-d0564ef7>),</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7>      new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>Vector3</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#BD93F9;" data-v-d0564ef7>10</span><span style="color:#F8F8F2;" data-v-d0564ef7>, </span><span style="color:#BD93F9;" data-v-d0564ef7>0</span><span style="color:#F8F8F2;" data-v-d0564ef7>, </span><span style="color:#BD93F9;" data-v-d0564ef7>10</span><span style="color:#F8F8F2;" data-v-d0564ef7>),</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>    ],</span></span>
<span class="line" data-v-d0564ef7><span style="color:#BD93F9;" data-v-d0564ef7>    true</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>  );</span></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7>  // 使用getPoint（t）返回一组divisions+1的点</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>  const</span><span style="color:#F8F8F2;" data-v-d0564ef7> points </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#F8F8F2;" data-v-d0564ef7> curve.</span><span style="color:#50FA7B;" data-v-d0564ef7>getPoints</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#BD93F9;" data-v-d0564ef7>500</span><span style="color:#F8F8F2;" data-v-d0564ef7>);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7>  // 通过点队列设置该 BufferGeometry 的 attribute。</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>  const</span><span style="color:#F8F8F2;" data-v-d0564ef7> geometry </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>BufferGeometry</span><span style="color:#F8F8F2;" data-v-d0564ef7>().</span><span style="color:#50FA7B;" data-v-d0564ef7>setFromPoints</span><span style="color:#F8F8F2;" data-v-d0564ef7>(points);</span></span>
<span class="line" data-v-d0564ef7></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>  const</span><span style="color:#F8F8F2;" data-v-d0564ef7> material </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>LineBasicMaterial</span><span style="color:#F8F8F2;" data-v-d0564ef7>({ color</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 0xff0000</span><span style="color:#F8F8F2;" data-v-d0564ef7> });</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>  const</span><span style="color:#F8F8F2;" data-v-d0564ef7> curveObject </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>Line</span><span style="color:#F8F8F2;" data-v-d0564ef7>(geometry, material);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>  scene.</span><span style="color:#50FA7B;" data-v-d0564ef7>add</span><span style="color:#F8F8F2;" data-v-d0564ef7>(curveObject);</span></span>
<span class="line" data-v-d0564ef7></span>
<span class="line" data-v-d0564ef7></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>  function</span><span style="color:#50FA7B;" data-v-d0564ef7> animate</span><span style="color:#F8F8F2;" data-v-d0564ef7>(){</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>      renderer.</span><span style="color:#50FA7B;" data-v-d0564ef7>render</span><span style="color:#F8F8F2;" data-v-d0564ef7>(scene, camera);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>      const</span><span style="color:#F8F8F2;" data-v-d0564ef7> elapsed </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#F8F8F2;" data-v-d0564ef7> clock.</span><span style="color:#50FA7B;" data-v-d0564ef7>getElapsedTime</span><span style="color:#F8F8F2;" data-v-d0564ef7>();</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>      const</span><span style="color:#F8F8F2;" data-v-d0564ef7> time </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#F8F8F2;" data-v-d0564ef7> elapsed</span><span style="color:#FF79C6;" data-v-d0564ef7>/</span><span style="color:#BD93F9;" data-v-d0564ef7>10</span><span style="color:#FF79C6;" data-v-d0564ef7>%</span><span style="color:#BD93F9;" data-v-d0564ef7>1</span><span style="color:#F8F8F2;" data-v-d0564ef7>;</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>      const</span><span style="color:#F8F8F2;" data-v-d0564ef7> point </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#F8F8F2;" data-v-d0564ef7> curve.</span><span style="color:#50FA7B;" data-v-d0564ef7>getPoint</span><span style="color:#F8F8F2;" data-v-d0564ef7>(time);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>      moon.position.</span><span style="color:#50FA7B;" data-v-d0564ef7>copy</span><span style="color:#F8F8F2;" data-v-d0564ef7>(point);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>      camera.position.</span><span style="color:#50FA7B;" data-v-d0564ef7>copy</span><span style="color:#F8F8F2;" data-v-d0564ef7>(point);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>      camera.</span><span style="color:#50FA7B;" data-v-d0564ef7>lookAt</span><span style="color:#F8F8F2;" data-v-d0564ef7>(earth.position)</span></span>
<span class="line" data-v-d0564ef7><span style="color:#50FA7B;" data-v-d0564ef7>      requestAnimationFrame</span><span style="color:#F8F8F2;" data-v-d0564ef7>(animate)</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-d0564ef7><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div></div></div>`,2)),Z("div",Le,null,512),s[1]||(s[1]=ja(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-d0564ef7><pre class="shiki dracula vp-code" data-v-d0564ef7><code data-v-d0564ef7><span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>const</span><span style="color:#F8F8F2;" data-v-d0564ef7> curveHandles </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#F8F8F2;" data-v-d0564ef7> []; </span><span style="color:#6272A4;" data-v-d0564ef7>// 曲线控制点数组</span></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7>  // 初始化曲线控制点，设置成立方样条曲线</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>  const</span><span style="color:#F8F8F2;" data-v-d0564ef7> initialPoints </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#F8F8F2;" data-v-d0564ef7> [</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>    { x</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 1</span><span style="color:#F8F8F2;" data-v-d0564ef7>, y</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 0</span><span style="color:#F8F8F2;" data-v-d0564ef7>, z</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#FF79C6;" data-v-d0564ef7> -</span><span style="color:#BD93F9;" data-v-d0564ef7>1</span><span style="color:#F8F8F2;" data-v-d0564ef7> },</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>    { x</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 1</span><span style="color:#F8F8F2;" data-v-d0564ef7>, y</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 0</span><span style="color:#F8F8F2;" data-v-d0564ef7>, z</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 1</span><span style="color:#F8F8F2;" data-v-d0564ef7> },</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>    { x</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#FF79C6;" data-v-d0564ef7> -</span><span style="color:#BD93F9;" data-v-d0564ef7>1</span><span style="color:#F8F8F2;" data-v-d0564ef7>, y</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 0</span><span style="color:#F8F8F2;" data-v-d0564ef7>, z</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 1</span><span style="color:#F8F8F2;" data-v-d0564ef7> },</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>    { x</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#FF79C6;" data-v-d0564ef7> -</span><span style="color:#BD93F9;" data-v-d0564ef7>1</span><span style="color:#F8F8F2;" data-v-d0564ef7>, y</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 0</span><span style="color:#F8F8F2;" data-v-d0564ef7>, z</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#FF79C6;" data-v-d0564ef7> -</span><span style="color:#BD93F9;" data-v-d0564ef7>1</span><span style="color:#F8F8F2;" data-v-d0564ef7> },</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>  ];</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>  const</span><span style="color:#F8F8F2;" data-v-d0564ef7> boxGeometry </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>BoxGeometry</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#BD93F9;" data-v-d0564ef7>0.1</span><span style="color:#F8F8F2;" data-v-d0564ef7>, </span><span style="color:#BD93F9;" data-v-d0564ef7>0.1</span><span style="color:#F8F8F2;" data-v-d0564ef7>, </span><span style="color:#BD93F9;" data-v-d0564ef7>0.1</span><span style="color:#F8F8F2;" data-v-d0564ef7>);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>  const</span><span style="color:#F8F8F2;" data-v-d0564ef7> boxMaterial </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-d0564ef7>();</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>  for</span><span style="color:#F8F8F2;" data-v-d0564ef7> (</span><span style="color:#FF79C6;" data-v-d0564ef7>const</span><span style="color:#F8F8F2;" data-v-d0564ef7> handlePos </span><span style="color:#FF79C6;" data-v-d0564ef7>of</span><span style="color:#F8F8F2;" data-v-d0564ef7> initialPoints) {</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>    const</span><span style="color:#F8F8F2;" data-v-d0564ef7> handle </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>Mesh</span><span style="color:#F8F8F2;" data-v-d0564ef7>(boxGeometry, boxMaterial);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>    handle.position.</span><span style="color:#50FA7B;" data-v-d0564ef7>copy</span><span style="color:#F8F8F2;" data-v-d0564ef7>(handlePos);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>    curveHandles.</span><span style="color:#50FA7B;" data-v-d0564ef7>push</span><span style="color:#F8F8F2;" data-v-d0564ef7>(handle);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>    scene.</span><span style="color:#50FA7B;" data-v-d0564ef7>add</span><span style="color:#F8F8F2;" data-v-d0564ef7>(handle);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>  }</span></span>
<span class="line" data-v-d0564ef7></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7>   // 创建立方样条曲线</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7> const</span><span style="color:#F8F8F2;" data-v-d0564ef7> curve </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>CatmullRomCurve3</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>   curveHandles.</span><span style="color:#50FA7B;" data-v-d0564ef7>map</span><span style="color:#F8F8F2;" data-v-d0564ef7>((</span><span style="color:#FFB86C;font-style:italic;" data-v-d0564ef7>handle</span><span style="color:#F8F8F2;" data-v-d0564ef7>) </span><span style="color:#FF79C6;" data-v-d0564ef7>=&gt;</span><span style="color:#F8F8F2;" data-v-d0564ef7> handle.position)</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7> );</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7> curve.curveType </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#E9F284;" data-v-d0564ef7> &quot;</span><span style="color:#F1FA8C;" data-v-d0564ef7>centripetal</span><span style="color:#E9F284;" data-v-d0564ef7>&quot;</span><span style="color:#F8F8F2;" data-v-d0564ef7>; </span><span style="color:#6272A4;" data-v-d0564ef7>// 曲线类型(切向加速调整)</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7> curve.closed </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#BD93F9;" data-v-d0564ef7> true</span><span style="color:#F8F8F2;" data-v-d0564ef7>; </span><span style="color:#6272A4;" data-v-d0564ef7>// 是否封闭</span></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7> // 创建曲线并根据关键点更新线条</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7> const</span><span style="color:#F8F8F2;" data-v-d0564ef7> points </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#F8F8F2;" data-v-d0564ef7> curve.</span><span style="color:#50FA7B;" data-v-d0564ef7>getPoints</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#BD93F9;" data-v-d0564ef7>50</span><span style="color:#F8F8F2;" data-v-d0564ef7>);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7> const</span><span style="color:#F8F8F2;" data-v-d0564ef7> line </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>LineLoop</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7>   new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>BufferGeometry</span><span style="color:#F8F8F2;" data-v-d0564ef7>().</span><span style="color:#50FA7B;" data-v-d0564ef7>setFromPoints</span><span style="color:#F8F8F2;" data-v-d0564ef7>(points),</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7>   new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>LineBasicMaterial</span><span style="color:#F8F8F2;" data-v-d0564ef7>({ color</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 0x00ff00</span><span style="color:#F8F8F2;" data-v-d0564ef7> })</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7> );</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7> scene.</span><span style="color:#50FA7B;" data-v-d0564ef7>add</span><span style="color:#F8F8F2;" data-v-d0564ef7>(line);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7> // 加载字体并创建 3D 文本</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7> const</span><span style="color:#F8F8F2;" data-v-d0564ef7> loader </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#50FA7B;" data-v-d0564ef7> FontLoader</span><span style="color:#F8F8F2;" data-v-d0564ef7>();</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7> loader.</span><span style="color:#50FA7B;" data-v-d0564ef7>load</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#E9F284;" data-v-d0564ef7>&quot;</span><span style="color:#F1FA8C;" data-v-d0564ef7>fonts/helvetiker_regular.typeface.json</span><span style="color:#E9F284;" data-v-d0564ef7>&quot;</span><span style="color:#F8F8F2;" data-v-d0564ef7>, </span><span style="color:#FF79C6;" data-v-d0564ef7>function</span><span style="color:#F8F8F2;" data-v-d0564ef7> (</span><span style="color:#FFB86C;font-style:italic;" data-v-d0564ef7>font</span><span style="color:#F8F8F2;" data-v-d0564ef7>) {</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>   const</span><span style="color:#F8F8F2;" data-v-d0564ef7> geometry </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#50FA7B;" data-v-d0564ef7> TextGeometry</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#E9F284;" data-v-d0564ef7>&quot;</span><span style="color:#F1FA8C;" data-v-d0564ef7>Hello three.js!</span><span style="color:#E9F284;" data-v-d0564ef7>&quot;</span><span style="color:#F8F8F2;" data-v-d0564ef7>, {</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>     font</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#F8F8F2;" data-v-d0564ef7> font,</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>     size</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 0.2</span><span style="color:#F8F8F2;" data-v-d0564ef7>,</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>     height</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 0.05</span><span style="color:#F8F8F2;" data-v-d0564ef7>,</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>     curveSegments</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 12</span><span style="color:#F8F8F2;" data-v-d0564ef7>,</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>     bevelEnabled</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> true</span><span style="color:#F8F8F2;" data-v-d0564ef7>,</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>     bevelThickness</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 0.02</span><span style="color:#F8F8F2;" data-v-d0564ef7>,</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>     bevelSize</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 0.01</span><span style="color:#F8F8F2;" data-v-d0564ef7>,</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>     bevelOffset</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 0</span><span style="color:#F8F8F2;" data-v-d0564ef7>,</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>     bevelSegments</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 5</span><span style="color:#F8F8F2;" data-v-d0564ef7>,</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>   });</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>   geometry.</span><span style="color:#50FA7B;" data-v-d0564ef7>rotateX</span><span style="color:#F8F8F2;" data-v-d0564ef7>(Math.</span><span style="color:#BD93F9;" data-v-d0564ef7>PI</span><span style="color:#F8F8F2;" data-v-d0564ef7>);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>   const</span><span style="color:#F8F8F2;" data-v-d0564ef7> material </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>MeshStandardMaterial</span><span style="color:#F8F8F2;" data-v-d0564ef7>({</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>     color</span><span style="color:#FF79C6;" data-v-d0564ef7>:</span><span style="color:#BD93F9;" data-v-d0564ef7> 0x99ffff</span><span style="color:#F8F8F2;" data-v-d0564ef7>,</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>   });</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>   const</span><span style="color:#F8F8F2;" data-v-d0564ef7> objectToCurve </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>Mesh</span><span style="color:#F8F8F2;" data-v-d0564ef7>(geometry, material);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7>   /*</span></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7>   </span></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7>   </span></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7>   */</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>   flow </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#50FA7B;" data-v-d0564ef7> Flow</span><span style="color:#F8F8F2;" data-v-d0564ef7>(objectToCurve);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>   flow.</span><span style="color:#50FA7B;" data-v-d0564ef7>updateCurve</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#BD93F9;" data-v-d0564ef7>0</span><span style="color:#F8F8F2;" data-v-d0564ef7>, curve);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>   scene.</span><span style="color:#50FA7B;" data-v-d0564ef7>add</span><span style="color:#F8F8F2;" data-v-d0564ef7>(flow.object3D);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7> });</span></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7> // 创建射线对象</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7> rayCaster </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#BD93F9;" data-v-d0564ef7> THREE</span><span style="color:#F8F8F2;" data-v-d0564ef7>.</span><span style="color:#50FA7B;" data-v-d0564ef7>Raycaster</span><span style="color:#F8F8F2;" data-v-d0564ef7>();</span></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7> // 创建变换控制器对象</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7> control </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-d0564ef7> new</span><span style="color:#50FA7B;" data-v-d0564ef7> TransformControls</span><span style="color:#F8F8F2;" data-v-d0564ef7>(camera, renderer.domElement);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7> control.</span><span style="color:#50FA7B;" data-v-d0564ef7>addEventListener</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#E9F284;" data-v-d0564ef7>&quot;</span><span style="color:#F1FA8C;" data-v-d0564ef7>dragging-changed</span><span style="color:#E9F284;" data-v-d0564ef7>&quot;</span><span style="color:#F8F8F2;" data-v-d0564ef7>, </span><span style="color:#FF79C6;" data-v-d0564ef7>function</span><span style="color:#F8F8F2;" data-v-d0564ef7> (</span><span style="color:#FFB86C;font-style:italic;" data-v-d0564ef7>event</span><span style="color:#F8F8F2;" data-v-d0564ef7>) {</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>   if</span><span style="color:#F8F8F2;" data-v-d0564ef7> (</span><span style="color:#FF79C6;" data-v-d0564ef7>!</span><span style="color:#F8F8F2;" data-v-d0564ef7>event.value) {</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>     const</span><span style="color:#F8F8F2;" data-v-d0564ef7> points </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#F8F8F2;" data-v-d0564ef7> curve.</span><span style="color:#50FA7B;" data-v-d0564ef7>getPoints</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#BD93F9;" data-v-d0564ef7>50</span><span style="color:#F8F8F2;" data-v-d0564ef7>);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>     line.geometry.</span><span style="color:#50FA7B;" data-v-d0564ef7>setFromPoints</span><span style="color:#F8F8F2;" data-v-d0564ef7>(points);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>     flow.</span><span style="color:#50FA7B;" data-v-d0564ef7>updateCurve</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#BD93F9;" data-v-d0564ef7>0</span><span style="color:#F8F8F2;" data-v-d0564ef7>, curve);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>   }</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7> });</span></span>
<span class="line" data-v-d0564ef7></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7>  // 逐帧动画函数</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>function</span><span style="color:#50FA7B;" data-v-d0564ef7> animate</span><span style="color:#F8F8F2;" data-v-d0564ef7>() {</span></span>
<span class="line" data-v-d0564ef7><span style="color:#50FA7B;" data-v-d0564ef7>  requestAnimationFrame</span><span style="color:#F8F8F2;" data-v-d0564ef7>(animate);</span></span>
<span class="line" data-v-d0564ef7></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7>  // 判断是否点击场景</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>  if</span><span style="color:#F8F8F2;" data-v-d0564ef7> (action </span><span style="color:#FF79C6;" data-v-d0564ef7>===</span><span style="color:#F8F8F2;" data-v-d0564ef7> ACTION_SELECT) {</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>    rayCaster.</span><span style="color:#50FA7B;" data-v-d0564ef7>setFromCamera</span><span style="color:#F8F8F2;" data-v-d0564ef7>(mouse, camera);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>    action </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#F8F8F2;" data-v-d0564ef7> ACTION_NONE;</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>    const</span><span style="color:#F8F8F2;" data-v-d0564ef7> intersects </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#F8F8F2;" data-v-d0564ef7> rayCaster.</span><span style="color:#50FA7B;" data-v-d0564ef7>intersectObjects</span><span style="color:#F8F8F2;" data-v-d0564ef7>(curveHandles, </span><span style="color:#BD93F9;" data-v-d0564ef7>false</span><span style="color:#F8F8F2;" data-v-d0564ef7>);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>    if</span><span style="color:#F8F8F2;" data-v-d0564ef7> (intersects.length) {</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>      const</span><span style="color:#F8F8F2;" data-v-d0564ef7> target </span><span style="color:#FF79C6;" data-v-d0564ef7>=</span><span style="color:#F8F8F2;" data-v-d0564ef7> intersects[</span><span style="color:#BD93F9;" data-v-d0564ef7>0</span><span style="color:#F8F8F2;" data-v-d0564ef7>].object;</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>      control.</span><span style="color:#50FA7B;" data-v-d0564ef7>attach</span><span style="color:#F8F8F2;" data-v-d0564ef7>(target);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>      scene.</span><span style="color:#50FA7B;" data-v-d0564ef7>add</span><span style="color:#F8F8F2;" data-v-d0564ef7>(control);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>    }</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>  }</span></span>
<span class="line" data-v-d0564ef7></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7>  // 曲线模拟器运动</span></span>
<span class="line" data-v-d0564ef7><span style="color:#FF79C6;" data-v-d0564ef7>  if</span><span style="color:#F8F8F2;" data-v-d0564ef7> (flow) {</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>    flow.</span><span style="color:#50FA7B;" data-v-d0564ef7>moveAlongCurve</span><span style="color:#F8F8F2;" data-v-d0564ef7>(</span><span style="color:#BD93F9;" data-v-d0564ef7>0.001</span><span style="color:#F8F8F2;" data-v-d0564ef7>);</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>  }</span></span>
<span class="line" data-v-d0564ef7></span>
<span class="line" data-v-d0564ef7><span style="color:#6272A4;" data-v-d0564ef7>  // 渲染场景</span></span>
<span class="line" data-v-d0564ef7><span style="color:#50FA7B;" data-v-d0564ef7>  render</span><span style="color:#F8F8F2;" data-v-d0564ef7>();</span></span>
<span class="line" data-v-d0564ef7><span style="color:#F8F8F2;" data-v-d0564ef7>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-d0564ef7><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div><div class="line-number" data-v-d0564ef7></div></div></div>`,1)),be(' <div ref="modifierCurveRef"></div> '),Z("iframe",{src:"https://threejs.org/examples/webgl_modifier_curve.html",height:n.width/2,width:n.width},null,8,ze),s[2]||(s[2]=Z("h1",{id:"参考",tabindex:"-1"},[Z("a",{class:"header-anchor",href:"#参考"},[Z("span",null,"参考")])],-1)),s[3]||(s[3]=Z("p",null,[ge("参考："),Z("a",{href:"https://threejs.org/",target:"_blank",rel:"noopener noreferrer"},"https://threejs.org/")],-1))])}const Ge=me(Oe,[["render",ke],["__scopeId","data-v-d0564ef7"],["__file","threejs-curve.html.vue"]]),We=JSON.parse('{"path":"/threejs/threejs-curve.html","title":"ThreeJS中的曲线应用","lang":"en-US","frontmatter":{"title":"ThreeJS中的曲线应用","date":"2022-02-01T00:00:00.000Z","category":["ThreeJS"],"description":"曲线运动 参考 参考：https://threejs.org/","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/threejs/threejs-curve.html"}],["meta",{"property":"og:title","content":"ThreeJS中的曲线应用"}],["meta",{"property":"og:description","content":"曲线运动 参考 参考：https://threejs.org/"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-10T14:15:12.000Z"}],["meta",{"property":"article:published_time","content":"2022-02-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-10T14:15:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ThreeJS中的曲线应用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-10T14:15:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"git":{"createdTime":1675953479000,"updatedTime":1731248112000,"contributors":[{"name":"luxiag","username":"luxiag","email":"luxiag@qq.com","commits":13,"url":"https://github.com/luxiag"},{"name":"卢祥","username":"卢祥","email":"example@qq.com","commits":4,"url":"https://github.com/卢祥"}]},"readingTime":{"minutes":3.89,"words":1166},"filePathRelative":"threejs/threejs-curve.md","localizedDate":"February 1, 2022","excerpt":"<h2>曲线运动</h2>\\n<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"background-color:#282A36;color:#F8F8F2\\"><pre class=\\"shiki dracula vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#6272A4\\">  // 从一系列的点创建一条平滑的三维样条曲线。</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  curve </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#FF79C6;font-weight:bold\\"> new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">CatmullRomCurve3</span><span style=\\"color:#F8F8F2\\">(</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    [</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6;font-weight:bold\\">      new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">Vector3</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#FF79C6\\">-</span><span style=\\"color:#BD93F9\\">10</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">0</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">10</span><span style=\\"color:#F8F8F2\\">),</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6;font-weight:bold\\">      new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">Vector3</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#FF79C6\\">-</span><span style=\\"color:#BD93F9\\">5</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">5</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">5</span><span style=\\"color:#F8F8F2\\">),</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6;font-weight:bold\\">      new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">Vector3</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#BD93F9\\">0</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">0</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">5</span><span style=\\"color:#F8F8F2\\">),</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6;font-weight:bold\\">      new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">Vector3</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#BD93F9\\">5</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#FF79C6\\">-</span><span style=\\"color:#BD93F9\\">5</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">5</span><span style=\\"color:#F8F8F2\\">),</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6;font-weight:bold\\">      new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">Vector3</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#BD93F9\\">10</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">0</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#BD93F9\\">10</span><span style=\\"color:#F8F8F2\\">),</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    ],</span></span>\\n<span class=\\"line\\"><span style=\\"color:#BD93F9\\">    true</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  );</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">  // 使用getPoint（t）返回一组divisions+1的点</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">  const</span><span style=\\"color:#F8F8F2\\"> points </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> curve.</span><span style=\\"color:#50FA7B\\">getPoints</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#BD93F9\\">500</span><span style=\\"color:#F8F8F2\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">  // 通过点队列设置该 BufferGeometry 的 attribute。</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">  const</span><span style=\\"color:#F8F8F2\\"> geometry </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#FF79C6;font-weight:bold\\"> new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">BufferGeometry</span><span style=\\"color:#F8F8F2\\">().</span><span style=\\"color:#50FA7B\\">setFromPoints</span><span style=\\"color:#F8F8F2\\">(points);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">  const</span><span style=\\"color:#F8F8F2\\"> material </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#FF79C6;font-weight:bold\\"> new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">LineBasicMaterial</span><span style=\\"color:#F8F8F2\\">({ color</span><span style=\\"color:#FF79C6\\">:</span><span style=\\"color:#BD93F9\\"> 0xff0000</span><span style=\\"color:#F8F8F2\\"> });</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">  const</span><span style=\\"color:#F8F8F2\\"> curveObject </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#FF79C6;font-weight:bold\\"> new</span><span style=\\"color:#BD93F9\\"> THREE</span><span style=\\"color:#F8F8F2\\">.</span><span style=\\"color:#50FA7B\\">Line</span><span style=\\"color:#F8F8F2\\">(geometry, material);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  scene.</span><span style=\\"color:#50FA7B\\">add</span><span style=\\"color:#F8F8F2\\">(curveObject);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">  function</span><span style=\\"color:#50FA7B\\"> animate</span><span style=\\"color:#F8F8F2\\">(){</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">      renderer.</span><span style=\\"color:#50FA7B\\">render</span><span style=\\"color:#F8F8F2\\">(scene, camera);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">      const</span><span style=\\"color:#F8F8F2\\"> elapsed </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> clock.</span><span style=\\"color:#50FA7B\\">getElapsedTime</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">      const</span><span style=\\"color:#F8F8F2\\"> time </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> elapsed</span><span style=\\"color:#FF79C6\\">/</span><span style=\\"color:#BD93F9\\">10</span><span style=\\"color:#FF79C6\\">%</span><span style=\\"color:#BD93F9\\">1</span><span style=\\"color:#F8F8F2\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">      const</span><span style=\\"color:#F8F8F2\\"> point </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> curve.</span><span style=\\"color:#50FA7B\\">getPoint</span><span style=\\"color:#F8F8F2\\">(time);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">      moon.position.</span><span style=\\"color:#50FA7B\\">copy</span><span style=\\"color:#F8F8F2\\">(point);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">      camera.position.</span><span style=\\"color:#50FA7B\\">copy</span><span style=\\"color:#F8F8F2\\">(point);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">      camera.</span><span style=\\"color:#50FA7B\\">lookAt</span><span style=\\"color:#F8F8F2\\">(earth.position)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#50FA7B\\">      requestAnimationFrame</span><span style=\\"color:#F8F8F2\\">(animate)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  }</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{Ge as comp,We as data};
