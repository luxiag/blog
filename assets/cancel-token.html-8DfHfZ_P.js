import{_ as n,c as l,a,o as e}from"./app-DS_HEYrV.js";const p={};function o(c,s){return e(),l("div",null,s[0]||(s[0]=[a(`<h1 id="abortcontroller" tabindex="-1"><a class="header-anchor" href="#abortcontroller"><span>AbortController</span></a></h1><p>Axios 支持以 fetch API 方式—— AbortController 取消请求：</p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> controller </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> AbortController</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> signal </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> controller.signal;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 执行可取消操作部分</span></span>
<span class="line"><span style="color:#6272A4;">// 获取 &quot;signal&quot; 对象，</span></span>
<span class="line"><span style="color:#6272A4;">// 并将监听器设置为在 controller.abort() 被调用时触发</span></span>
<span class="line"><span style="color:#F8F8F2;">signal.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">abort</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#50FA7B;"> alert</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">abort!</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 另一部分，取消（在之后的任何时候）：</span></span>
<span class="line"><span style="color:#F8F8F2;">controller.</span><span style="color:#50FA7B;">abort</span><span style="color:#F8F8F2;">(); </span><span style="color:#6272A4;">// 中止！</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 事件触发，signal.aborted 变为 true</span></span>
<span class="line"><span style="color:#50FA7B;">alert</span><span style="color:#F8F8F2;">(signal.aborted); </span><span style="color:#6272A4;">// true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>fetch使用</p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// 1 秒后中止</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> controller </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> AbortController</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#50FA7B;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> controller.</span><span style="color:#50FA7B;">abort</span><span style="color:#F8F8F2;">(), </span><span style="color:#BD93F9;">1000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">try</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  let</span><span style="color:#F8F8F2;"> response </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> await</span><span style="color:#50FA7B;"> fetch</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/article/fetch-abort/demo/hang</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">    signal</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> controller.signal</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#F8F8F2;">} </span><span style="color:#FF79C6;">catch</span><span style="color:#F8F8F2;">(err) {</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (err.name </span><span style="color:#FF79C6;">==</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">AbortError</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) { </span><span style="color:#6272A4;">// handle abort()</span></span>
<span class="line"><span style="color:#50FA7B;">    alert</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Aborted!</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    throw</span><span style="color:#F8F8F2;"> err;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>axios使用</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> controller </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> AbortController</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">axios.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/foo/bar</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">   signal</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> controller.signal</span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#50FA7B;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">response</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">   //...</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#6272A4;">// 取消请求</span></span>
<span class="line"><span style="color:#F8F8F2;">controller.</span><span style="color:#50FA7B;">abort</span><span style="color:#F8F8F2;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="cancel-token" tabindex="-1"><a class="header-anchor" href="#cancel-token"><span>Cancel Token</span></a></h1><p><strong>单个请求</strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> CancelToken </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> axios.CancelToken; </span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> cancel; </span></span>
<span class="line"><span style="color:#F8F8F2;">axios.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/user/12345</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, {   </span></span>
<span class="line"><span style="color:#F8F8F2;">    cancelToken</span><span style="color:#FF79C6;">:</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> CancelToken</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> executor</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">c</span><span style="color:#F8F8F2;">) {     </span></span>
<span class="line"><span style="color:#6272A4;">    // executor 函数接收一个 cancel 函数作为参数     </span></span>
<span class="line"><span style="color:#F8F8F2;">    cancel </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> c;   </span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">});  </span></span>
<span class="line"><span style="color:#50FA7B;">cancel</span><span style="color:#F8F8F2;">();</span><span style="color:#6272A4;">//取消</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>多个请求</strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> CancelToken </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> axios.CancelToken; </span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> source </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> CancelToken.</span><span style="color:#50FA7B;">source</span><span style="color:#F8F8F2;">();  </span></span>
<span class="line"><span style="color:#F8F8F2;">axios.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/user/12345</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, {   </span></span>
<span class="line"><span style="color:#F8F8F2;">    cancelToken</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> source.token </span></span>
<span class="line"><span style="color:#F8F8F2;">}).</span><span style="color:#50FA7B;">catch</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">thrown</span><span style="color:#F8F8F2;">) {   </span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (axios.</span><span style="color:#50FA7B;">isCancel</span><span style="color:#F8F8F2;">(thrown)) {     </span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Request canceled</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, thrown.message);   </span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {     </span></span>
<span class="line"><span style="color:#6272A4;">      // 处理错误  </span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F8F8F2;">axios.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/user/123456</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, {   </span></span>
<span class="line"><span style="color:#F8F8F2;">    cancelToken</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> source.token </span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">axios.</span><span style="color:#50FA7B;">post</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/user/12345</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, {   </span></span>
<span class="line"><span style="color:#F8F8F2;"> name</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">new name</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#F8F8F2;">}, {   </span></span>
<span class="line"><span style="color:#F8F8F2;"> cancelToken</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> source.token </span></span>
<span class="line"><span style="color:#F8F8F2;">})  </span></span>
<span class="line"><span style="color:#6272A4;"> // 取消请求（message 参数是可选的） </span></span>
<span class="line"><span style="color:#F8F8F2;">source.</span><span style="color:#50FA7B;">cancel</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Operation canceled by the user.</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h2><p>::: detail CancelToken</p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">class</span><span style="color:#8BE9FD;"> CancelToken</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">executor</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> executor </span><span style="color:#FF79C6;">!==</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">function</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      throw</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> TypeError</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">executor must be a function.</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> resolvePromise;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.promise </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#8BE9FD;font-style:italic;"> Promise</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> promiseExecutor</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">resolve</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      resolvePromise </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> resolve;</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> token </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // eslint-disable-next-line func-names</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.promise.</span><span style="color:#50FA7B;">then</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">cancel</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">token._listeners) </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">      let</span><span style="color:#F8F8F2;"> i </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> token._listeners.length;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">      while</span><span style="color:#F8F8F2;"> (i</span><span style="color:#FF79C6;">--</span><span style="color:#FF79C6;"> &gt;</span><span style="color:#BD93F9;"> 0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        token._listeners[i](cancel);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">      token._listeners </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // eslint-disable-next-line func-names</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.promise.</span><span style="color:#50FA7B;">then</span><span style="color:#FF79C6;"> =</span><span style="color:#FFB86C;font-style:italic;"> onfulfilled</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">      let</span><span style="color:#F8F8F2;"> _resolve;</span></span>
<span class="line"><span style="color:#6272A4;">      // eslint-disable-next-line func-names</span></span>
<span class="line"><span style="color:#FF79C6;">      const</span><span style="color:#F8F8F2;"> promise </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#8BE9FD;font-style:italic;"> Promise</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">resolve</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        token.</span><span style="color:#50FA7B;">subscribe</span><span style="color:#F8F8F2;">(resolve);</span></span>
<span class="line"><span style="color:#F8F8F2;">        _resolve </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> resolve;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }).</span><span style="color:#50FA7B;">then</span><span style="color:#F8F8F2;">(onfulfilled);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">      promise.</span><span style="color:#50FA7B;">cancel</span><span style="color:#FF79C6;"> =</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> reject</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">        token.</span><span style="color:#50FA7B;">unsubscribe</span><span style="color:#F8F8F2;">(_resolve);</span></span>
<span class="line"><span style="color:#F8F8F2;">      };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#F8F8F2;"> promise;</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">    executor</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> cancel</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">message</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">config</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">request</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (token.reason) {</span></span>
<span class="line"><span style="color:#6272A4;">        // Cancellation has already been requested</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">      token.reason </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> CanceledError</span><span style="color:#F8F8F2;">(message, config, request);</span></span>
<span class="line"><span style="color:#50FA7B;">      resolvePromise</span><span style="color:#F8F8F2;">(token.reason);</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  /**</span></span>
<span class="line"><span style="color:#6272A4;">   * Throws a \`CanceledError\` if cancellation has been requested.</span></span>
<span class="line"><span style="color:#6272A4;">   */</span></span>
<span class="line"><span style="color:#50FA7B;">  throwIfRequested</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.reason) {</span></span>
<span class="line"><span style="color:#FF79C6;">      throw</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.reason;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  /**</span></span>
<span class="line"><span style="color:#6272A4;">   * Subscribe to the cancel signal</span></span>
<span class="line"><span style="color:#6272A4;">   */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">  subscribe</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">listener</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.reason) {</span></span>
<span class="line"><span style="color:#50FA7B;">      listener</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.reason);</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">._listeners) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">._listeners.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(listener);</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">._listeners </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [listener];</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  /**</span></span>
<span class="line"><span style="color:#6272A4;">   * Unsubscribe from the cancel signal</span></span>
<span class="line"><span style="color:#6272A4;">   */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">  unsubscribe</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">listener</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">._listeners) {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> index </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">._listeners.</span><span style="color:#50FA7B;">indexOf</span><span style="color:#F8F8F2;">(listener);</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (index </span><span style="color:#FF79C6;">!==</span><span style="color:#FF79C6;"> -</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">      this</span><span style="color:#F8F8F2;">._listeners.</span><span style="color:#50FA7B;">splice</span><span style="color:#F8F8F2;">(index, </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">  toAbortSignal</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> controller </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> AbortController</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#50FA7B;"> abort</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">err</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      controller.</span><span style="color:#50FA7B;">abort</span><span style="color:#F8F8F2;">(err);</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">subscribe</span><span style="color:#F8F8F2;">(abort);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    controller.signal.</span><span style="color:#50FA7B;">unsubscribe</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">unsubscribe</span><span style="color:#F8F8F2;">(abort);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#F8F8F2;"> controller.signal;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">  /**</span></span>
<span class="line"><span style="color:#6272A4;">   * Returns an object that contains a new \`CancelToken\` and a function that, when called,</span></span>
<span class="line"><span style="color:#6272A4;">   * cancels the \`CancelToken\`.</span></span>
<span class="line"><span style="color:#6272A4;">   */</span></span>
<span class="line"><span style="color:#FF79C6;">  static</span><span style="color:#50FA7B;"> source</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> cancel;</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> token </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> CancelToken</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> executor</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">c</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      cancel </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> c;</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      token,</span></span>
<span class="line"><span style="color:#F8F8F2;">      cancel</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><h3 id="canceltoken-source" tabindex="-1"><a class="header-anchor" href="#canceltoken-source"><span><code>CancelToken.source</code></span></a></h3><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">CancelToken.</span><span style="color:#50FA7B;">source</span><span style="color:#FF79C6;"> =</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> source</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">  var</span><span style="color:#F8F8F2;"> cancel;</span></span>
<span class="line"><span style="color:#FF79C6;">  var</span><span style="color:#F8F8F2;"> token </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> CancelToken</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> executor</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">c</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    cancel </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> c;</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    token</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> token,</span></span>
<span class="line"><span style="color:#F8F8F2;">    cancel</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> cancel</span></span>
<span class="line"><span style="color:#F8F8F2;">  };</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cancel = c = function cancel(){}</code></p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">class</span><span style="color:#8BE9FD;"> CancelToken</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">executor</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">    // 将 promise的内部方法resolve赋值给resolvePromise</span></span>
<span class="line"><span style="color:#6272A4;">    // 在外部更改状态</span></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> resolvePromise;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.promise </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#8BE9FD;font-style:italic;"> Promise</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> promiseExecutor</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">resolve</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      resolvePromise </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> resolve;</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#50FA7B;">    executor</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> cancel</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">message</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">config</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">request</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (token.reason) {</span></span>
<span class="line"><span style="color:#6272A4;">        // Cancellation has already been requested</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">      token.reason </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> CanceledError</span><span style="color:#F8F8F2;">(message, config, request);</span></span>
<span class="line"><span style="color:#50FA7B;">      resolvePromise</span><span style="color:#F8F8F2;">(token.reason);</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="xhradapter" tabindex="-1"><a class="header-anchor" href="#xhradapter"><span>XHRAdapter</span></a></h3><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (_config.cancelToken </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> _config.signal) {</span></span>
<span class="line"><span style="color:#6272A4;">  // Handle cancellation</span></span>
<span class="line"><span style="color:#6272A4;">  // eslint-disable-next-line func-names</span></span>
<span class="line"><span style="color:#50FA7B;">  onCanceled</span><span style="color:#FF79C6;"> =</span><span style="color:#FFB86C;font-style:italic;"> cancel</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">request) {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#50FA7B;">    reject</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">cancel </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> cancel.type </span><span style="color:#FF79C6;">?</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> CanceledError</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">, config, request) </span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> cancel);</span></span>
<span class="line"><span style="color:#F8F8F2;">    request.</span><span style="color:#50FA7B;">abort</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    request </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  _config.cancelToken </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> _config.cancelToken.</span><span style="color:#50FA7B;">subscribe</span><span style="color:#F8F8F2;">(onCanceled);</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (_config.signal) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    _config.signal.aborted </span><span style="color:#FF79C6;">?</span><span style="color:#50FA7B;"> onCanceled</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> _config.signal.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">abort</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, onCanceled);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="中断请求" tabindex="-1"><a class="header-anchor" href="#中断请求"><span>中断请求</span></a></h3><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> source </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> CancelToken.</span><span style="color:#50FA7B;">source</span><span style="color:#F8F8F2;">();  </span></span>
<span class="line"><span style="color:#6272A4;"> // 取消请求（message 参数是可选的） </span></span>
<span class="line"><span style="color:#F8F8F2;">source.</span><span style="color:#50FA7B;">cancel</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Operation canceled by the user.</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// source.cancel </span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> cancel</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">message</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">config</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">request</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (token.reason) {</span></span>
<span class="line"><span style="color:#6272A4;">    // Cancellation has already been requested</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  token.reason </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> CanceledError</span><span style="color:#F8F8F2;">(message, config, request);</span></span>
<span class="line"><span style="color:#50FA7B;">  resolvePromise</span><span style="color:#F8F8F2;">(token.reason);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="resolvepromise" tabindex="-1"><a class="header-anchor" href="#resolvepromise"><span>resolvePromise</span></a></h3><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.promise </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#8BE9FD;font-style:italic;"> Promise</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> promiseExecutor</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">resolve</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  resolvePromise </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> resolve;</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.promise.</span><span style="color:#50FA7B;">then</span><span style="color:#FF79C6;"> =</span><span style="color:#FFB86C;font-style:italic;"> onfulfilled</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  let</span><span style="color:#F8F8F2;"> _resolve;</span></span>
<span class="line"><span style="color:#6272A4;">  // eslint-disable-next-line func-names</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> promise </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#8BE9FD;font-style:italic;"> Promise</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">resolve</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    token.</span><span style="color:#50FA7B;">subscribe</span><span style="color:#F8F8F2;">(resolve);</span></span>
<span class="line"><span style="color:#F8F8F2;">    _resolve </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> resolve;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }).</span><span style="color:#50FA7B;">then</span><span style="color:#F8F8F2;">(onfulfilled)</span></span>
<span class="line"><span style="color:#F8F8F2;">  promise.</span><span style="color:#50FA7B;">cancel</span><span style="color:#FF79C6;"> =</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> reject</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    token.</span><span style="color:#50FA7B;">unsubscribe</span><span style="color:#F8F8F2;">(_resolve);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> promise;</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>暴露 promise中的resolve,调用中断执行resolve=&gt; 执行<code>.then</code> =&gt; 执行<code>xhr.abort()</code></p><p>通过发布订阅模式实现的,将axios.CancelToken构造器的实例通过cancelToken传入,就会调用实例上的subscribe方法订阅取消消息,再根据需求执行cancel方法触发订阅器取消请求。</p><h3 id="fetchadapter" tabindex="-1"><a class="header-anchor" href="#fetchadapter"><span>FetchAdapter</span></a></h3><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> composedSignal </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> composeSignals</span><span style="color:#F8F8F2;">([signal, cancelToken </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> cancelToken.</span><span style="color:#50FA7B;">toAbortSignal</span><span style="color:#F8F8F2;">()], timeout);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#50FA7B;"> Request</span><span style="color:#F8F8F2;">(url,{</span></span>
<span class="line"><span style="color:#F8F8F2;">  signal</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> composedSignal,</span></span>
<span class="line"><span style="color:#6272A4;">  // ...</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// ...</span></span>
<span class="line"><span style="color:#50FA7B;">  toAbortSignal</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> controller </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> AbortController</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#50FA7B;"> abort</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">err</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      controller.</span><span style="color:#50FA7B;">abort</span><span style="color:#F8F8F2;">(err);</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">    this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">subscribe</span><span style="color:#F8F8F2;">(abort);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    controller.signal.</span><span style="color:#50FA7B;">unsubscribe</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">unsubscribe</span><span style="color:#F8F8F2;">(abort);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#F8F8F2;"> controller.signal;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="composesignals" tabindex="-1"><a class="header-anchor" href="#composesignals"><span>composeSignals</span></a></h3><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#50FA7B;"> composeSignals</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">signals</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">timeout</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> {length} </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> (signals </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> signals </span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> signals.</span><span style="color:#50FA7B;">filter</span><span style="color:#F8F8F2;">(Boolean) </span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> []);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (timeout </span><span style="color:#FF79C6;">||</span><span style="color:#F8F8F2;"> length) {</span></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> controller </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> AbortController</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> aborted;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#50FA7B;"> onabort</span><span style="color:#FF79C6;"> =</span><span style="color:#FF79C6;"> function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">reason</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">aborted) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        aborted </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#50FA7B;">        unsubscribe</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#FF79C6;">        const</span><span style="color:#F8F8F2;"> err </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> reason </span><span style="color:#FF79C6;">instanceof</span><span style="color:#8BE9FD;font-style:italic;"> Error</span><span style="color:#FF79C6;"> ?</span><span style="color:#F8F8F2;"> reason </span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.reason;</span></span>
<span class="line"><span style="color:#F8F8F2;">        controller.</span><span style="color:#50FA7B;">abort</span><span style="color:#F8F8F2;">(err </span><span style="color:#FF79C6;">instanceof</span><span style="color:#8BE9FD;font-style:italic;"> AxiosError</span><span style="color:#FF79C6;"> ?</span><span style="color:#F8F8F2;"> err </span><span style="color:#FF79C6;">:</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> CanceledError</span><span style="color:#F8F8F2;">(err </span><span style="color:#FF79C6;">instanceof</span><span style="color:#8BE9FD;font-style:italic;"> Error</span><span style="color:#FF79C6;"> ?</span><span style="color:#F8F8F2;"> err.message </span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> err));</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> timer </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> timeout </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#50FA7B;"> setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      timer </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#50FA7B;">      onabort</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#50FA7B;"> AxiosError</span><span style="color:#F8F8F2;">(</span><span style="color:#F1FA8C;">\`timeout </span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">timeout</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;"> of ms exceeded\`</span><span style="color:#F8F8F2;">, AxiosError.</span><span style="color:#BD93F9;">ETIMEDOUT</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">    }, timeout)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#50FA7B;"> unsubscribe</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (signals) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        timer </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#50FA7B;"> clearTimeout</span><span style="color:#F8F8F2;">(timer);</span></span>
<span class="line"><span style="color:#F8F8F2;">        timer </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        signals.</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">signal</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          signal.unsubscribe </span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> signal.</span><span style="color:#50FA7B;">unsubscribe</span><span style="color:#F8F8F2;">(onabort) </span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> signal.</span><span style="color:#50FA7B;">removeEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">abort</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, onabort);</span></span>
<span class="line"><span style="color:#F8F8F2;">        });</span></span>
<span class="line"><span style="color:#F8F8F2;">        signals </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    signals.</span><span style="color:#50FA7B;">forEach</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">signal</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> signal.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">abort</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, onabort));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> {signal} </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> controller;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    signal.</span><span style="color:#50FA7B;">unsubscribe</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> utils.</span><span style="color:#50FA7B;">asap</span><span style="color:#F8F8F2;">(unsubscribe);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#F8F8F2;"> signal;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32)]))}const r=n(p,[["render",o],["__file","cancel-token.html.vue"]]),i=JSON.parse(`{"path":"/network/cancel-token.html","title":"Axios取消请求","lang":"en-US","frontmatter":{"title":"Axios取消请求","category":["NetWork"],"tag":["Axios"],"date":"2025-01-30T00:00:00.000Z","description":"AbortController Axios 支持以 fetch API 方式—— AbortController 取消请求： fetch使用 axios使用 Cancel Token 单个请求 多个请求 原理 ::: detail CancelToken ::: CancelToken.source cancel = c = function canc...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/network/cancel-token.html"}],["meta",{"property":"og:title","content":"Axios取消请求"}],["meta",{"property":"og:description","content":"AbortController Axios 支持以 fetch API 方式—— AbortController 取消请求： fetch使用 axios使用 Cancel Token 单个请求 多个请求 原理 ::: detail CancelToken ::: CancelToken.source cancel = c = function canc..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-12T13:51:52.000Z"}],["meta",{"property":"article:tag","content":"Axios"}],["meta",{"property":"article:published_time","content":"2025-01-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-12T13:51:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Axios取消请求\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-30T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-12T13:51:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[{"level":3,"title":"CancelToken.source","slug":"canceltoken-source","link":"#canceltoken-source","children":[]},{"level":3,"title":"XHRAdapter","slug":"xhradapter","link":"#xhradapter","children":[]},{"level":3,"title":"中断请求","slug":"中断请求","link":"#中断请求","children":[]},{"level":3,"title":"resolvePromise","slug":"resolvepromise","link":"#resolvepromise","children":[]},{"level":3,"title":"FetchAdapter","slug":"fetchadapter","link":"#fetchadapter","children":[]},{"level":3,"title":"composeSignals","slug":"composesignals","link":"#composesignals","children":[]}]}],"git":{"createdTime":1739352537000,"updatedTime":1739368312000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":2}]},"readingTime":{"minutes":3.07,"words":920},"filePathRelative":"network/cancel-token.md","localizedDate":"January 30, 2025","excerpt":"\\n<p>Axios 支持以 fetch API 方式—— AbortController 取消请求：</p>\\n<div class=\\"language-ts line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"ts\\" data-title=\\"ts\\" style=\\"background-color:#282A36;color:#F8F8F2\\"><pre class=\\"shiki dracula vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#FF79C6\\">let</span><span style=\\"color:#F8F8F2\\"> controller </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#FF79C6;font-weight:bold\\"> new</span><span style=\\"color:#50FA7B\\"> AbortController</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">let</span><span style=\\"color:#F8F8F2\\"> signal </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> controller.signal;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">// 执行可取消操作部分</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">// 获取 \\"signal\\" 对象，</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">// 并将监听器设置为在 controller.abort() 被调用时触发</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">signal.</span><span style=\\"color:#50FA7B\\">addEventListener</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E9F284\\">'</span><span style=\\"color:#F1FA8C\\">abort</span><span style=\\"color:#E9F284\\">'</span><span style=\\"color:#F8F8F2\\">, () </span><span style=\\"color:#FF79C6\\">=&gt;</span><span style=\\"color:#50FA7B\\"> alert</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F1FA8C\\">abort!</span><span style=\\"color:#E9F284\\">\\"</span><span style=\\"color:#F8F8F2\\">));</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">// 另一部分，取消（在之后的任何时候）：</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">controller.</span><span style=\\"color:#50FA7B\\">abort</span><span style=\\"color:#F8F8F2\\">(); </span><span style=\\"color:#6272A4\\">// 中止！</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">// 事件触发，signal.aborted 变为 true</span></span>\\n<span class=\\"line\\"><span style=\\"color:#50FA7B\\">alert</span><span style=\\"color:#F8F8F2\\">(signal.aborted); </span><span style=\\"color:#6272A4\\">// true</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{r as comp,i as data};
