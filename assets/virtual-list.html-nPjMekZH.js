import{_ as O,e as r,g as o,f as _,y as B,F as L,u as M,r as y,n as A,i as P,z as w,o as u,v as I}from"./app-Bd-A8UqK.js";const j={__name:"virtual-list.html",setup(k,{expose:p}){p();const D=y(null),d=new Array(1e4).fill(0).map((t,e)=>({id:e,name:`第${e}个元素`})),i=A({list:[],height:20,startOffset:0}),C=t=>{const e=t.target.scrollTop||0,s=Math.floor(e/i.height),v=s+20;i.list=d.slice(s,v),i.startOffset=e-e%i.height};P(()=>{C({target:{scrollTop:0}})});const F=y(),m=y(),R=y(null),a=A({list:[],cachedPositions:[],height:20,startOffset:0,startIndex:0,originStartIndex:0,phantomHeight:0}),g=new Array(1e4).fill(0).map((t,e)=>({id:e,name:"123".repeat(Math.random()*100),bottom:e*a.height})),E=()=>{const t=[];for(let e=0;e<g.length;e++)t[e]={index:e,name:g[e].name,height:a.height,top:e*a.height,bottom:(e+1)*a.height,dValue:0};a.list=t.slice(0,20),a.cachedPositions=t},f=()=>{const t=m.value.childNodes;let e=null;t.forEach(n=>{if(!n||n.nodeType!==1)return;e||(e=n);const b=n.getBoundingClientRect(),{height:q}=b,h=n.dataset.index,x=a.cachedPositions[h].height-q;x&&(a.cachedPositions[h].height=q,a.cachedPositions[h].bottom-=x,a.cachedPositions[h].dValue=x)});let s=0;e&&(s=Number(e.dataset.index));const v=a.cachedPositions.length;let l=a.cachedPositions[s].dValue;a.cachedPositions[s].dValue=0;for(let n=s+1;n<v;n++){const b=a.cachedPositions[n];a.cachedPositions[n].top-=a.cachedPositions[n-1].bottom,a.cachedPositions[n].bottom=a.cachedPositions[n].bottom-l,b.dValue!==0&&(l+=b.dValue,b.dValue=0)}const c=a.cachedPositions[v-1].bottom;console.log(c,"height"),a.phantomHeight=c},H=t=>{const e=t.target.scrollTop||0,s=V(e);if(s===a.originStartIndex)return;a.originStartIndex=s,a.startIndex=s;const v=Math.min(s+20,a.cachedPositions.length+1),l=Math.max(s-5,0);a.list=a.cachedPositions.slice(l,v),a.startOffset=l>1?a.cachedPositions[l-1].bottom:0},V=t=>{const e=a.cachedPositions;let s=0,v=e.length-1,l=-1;for(;s<v;){l=Math.floor((s+v)/2);const n=e[l].bottom;if(n==t)return l;n<t?s=l+1:n>t&&(v=l-1)}const c=e[l];return c&&c.bottom<t&&(l+=1),l};w(()=>{f()});const S=()=>{E()};S(),P(()=>{f()});const T={fixedListRef:D,allList:d,fixedModel:i,fixedScrollEvent:C,phantomRef:F,waterListContainerRef:m,waterListRef:R,waterModel:a,allPhantomList:g,initCachedPositions:E,updateCachedPositions:f,waterScrollEvent:H,getStartIndex:V,initSetup:S,reactive:A,ref:y,onMounted:P,onUpdated:w};return Object.defineProperty(T,"__isScriptSetup",{enumerable:!1,value:!0}),T}},N=["data-index"];function Z(k,p,D,d,i,C){return u(),r("div",null,[p[1]||(p[1]=o("h1",{id:"固定列表",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#固定列表"},[o("span",null,"固定列表")])],-1)),o("div",{class:"list",ref:"fixedListRef",onScroll:d.fixedScrollEvent},[o("div",{class:"list-containter",style:B({transform:`translate3d(0,${d.fixedModel.startOffset}px,0)`})},[(u(!0),r(L,null,M(d.fixedModel.list,F=>(u(),r("div",{class:"fixed-list-item",key:F.id},I(F.name),1))),128))],4),p[0]||(p[0]=o("div",{class:"list-place"},null,-1))],544),p[2]||(p[2]=_(`<ul data-v-2ea0e4b8><li data-v-2ea0e4b8>设置2个子元素，一个子元素是列表，一个子元素是占位元素</li><li data-v-2ea0e4b8>占位元素的高度是所有列表元素的总高度</li><li data-v-2ea0e4b8>列表元素的高度是固定的，所以列表元素的总高度也是固定的</li><li data-v-2ea0e4b8>当滚动时，根据滚动条的位置，计算出当前应该显示的列表元素的起始索引和结束索引</li></ul><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#282A36;color:#F8F8F2;" data-v-2ea0e4b8><pre class="shiki dracula vp-code" data-v-2ea0e4b8><code data-v-2ea0e4b8><span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>&lt;</span><span style="color:#FF79C6;" data-v-2ea0e4b8>div</span><span style="color:#50FA7B;font-style:italic;" data-v-2ea0e4b8> class</span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#F1FA8C;" data-v-2ea0e4b8>list</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-2ea0e4b8> ref</span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#F1FA8C;" data-v-2ea0e4b8>fixedListRef</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-2ea0e4b8> @scroll</span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#F1FA8C;" data-v-2ea0e4b8>fixedScrollEvent</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>&gt;</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>  &lt;!-- 列表 --&gt;</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  &lt;</span><span style="color:#FF79C6;" data-v-2ea0e4b8>div</span><span style="color:#50FA7B;font-style:italic;" data-v-2ea0e4b8> class</span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#F1FA8C;" data-v-2ea0e4b8>list-containter</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-2ea0e4b8> :style</span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#F1FA8C;" data-v-2ea0e4b8>{transform: \`translate3d(0,\${startOffset}px,0)\`}</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>&gt;</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    &lt;</span><span style="color:#FF79C6;" data-v-2ea0e4b8>div</span><span style="color:#50FA7B;font-style:italic;" data-v-2ea0e4b8> class</span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#F1FA8C;" data-v-2ea0e4b8>fixed-list-item</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-2ea0e4b8> v-for</span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#F1FA8C;" data-v-2ea0e4b8>ite in list</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-2ea0e4b8> :key</span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#F1FA8C;" data-v-2ea0e4b8>ite.id</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>&gt;</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>     {{ite.name}}</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    &lt;/</span><span style="color:#FF79C6;" data-v-2ea0e4b8>div</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>&gt;</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  &lt;/</span><span style="color:#FF79C6;" data-v-2ea0e4b8>div</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>&gt;</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>  &lt;!-- 占位元素 计算整体高度 赋值 --&gt;</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  &lt;</span><span style="color:#FF79C6;" data-v-2ea0e4b8>div</span><span style="color:#50FA7B;font-style:italic;" data-v-2ea0e4b8> class</span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#F1FA8C;" data-v-2ea0e4b8>list-place</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#50FA7B;font-style:italic;" data-v-2ea0e4b8> :height</span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#F1FA8C;" data-v-2ea0e4b8>allHeight</span><span style="color:#E9F284;" data-v-2ea0e4b8>&quot;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>&gt;&lt;/</span><span style="color:#FF79C6;" data-v-2ea0e4b8>div</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>&gt;</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>&lt;/</span><span style="color:#FF79C6;" data-v-2ea0e4b8>div</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-2ea0e4b8><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div></div></div><p data-v-2ea0e4b8>监听滚动事件，获取滚动高度和列表元素</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-2ea0e4b8><pre class="shiki dracula vp-code" data-v-2ea0e4b8><code data-v-2ea0e4b8><span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>const</span><span style="color:#50FA7B;" data-v-2ea0e4b8> scroll</span><span style="color:#FF79C6;" data-v-2ea0e4b8> =</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (</span><span style="color:#FFB86C;font-style:italic;" data-v-2ea0e4b8>e</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>) </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=&gt;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> scrollTop </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> e.target.scrollTop </span><span style="color:#FF79C6;" data-v-2ea0e4b8>||</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 0</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>  // 滚动高度 / 列表元素高度 = 起始索引</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> startIndex </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> Math.</span><span style="color:#50FA7B;" data-v-2ea0e4b8>floor</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>(scrollTop </span><span style="color:#FF79C6;" data-v-2ea0e4b8>/</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> height)</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> endIndex </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> startIndex </span><span style="color:#FF79C6;" data-v-2ea0e4b8>+</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 20</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> list </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> allList.</span><span style="color:#50FA7B;" data-v-2ea0e4b8>slice</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>(startIndex, endIndex)</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>  // 计算起始偏移量 = 滚动高度 - 滚动位置相对于当前列表项高度的偏移量</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> startOffset </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> scrollTop </span><span style="color:#FF79C6;" data-v-2ea0e4b8>-</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (scrollTop </span><span style="color:#FF79C6;" data-v-2ea0e4b8>%</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> height)</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-2ea0e4b8><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div></div></div><h1 id="不固定列表" tabindex="-1" data-v-2ea0e4b8><a class="header-anchor" href="#不固定列表" data-v-2ea0e4b8><span data-v-2ea0e4b8>不固定列表</span></a></h1>`,5)),o("div",{class:"water-list",ref:"waterListRef",onScroll:d.waterScrollEvent},[o("div",{class:"phantomContainer",ref:"phantomRef",style:B({position:"relative",height:d.waterModel.phantomHeight+"px"})},null,4),o("div",{ref:"waterListContainerRef",style:B({transform:`translate3d(0,${d.waterModel.startOffset}px,0)`}),class:"water-list-items"},[(u(!0),r(L,null,M(d.waterModel.list,(F,m)=>(u(),r("div",{key:F.id,"data-index":m,class:"water-list-item"},[o("p",null," No. "+I(F.index),1),o("p",null,I(F.name),1)],8,N))),128))],4)],544),p[3]||(p[3]=_(`<ul data-v-2ea0e4b8><li data-v-2ea0e4b8>先假设每个元素的高度都是固定的，然后计算出所有元素的总高度</li><li data-v-2ea0e4b8>当元素渲染到dom时，获取到每个元素的真实高度，记录并重新计算元素的总高度</li><li data-v-2ea0e4b8>滚动时获取滚动高度，从记录的元素高度中找到当前应该显示的元素，计算出起始索引和结束索引</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-2ea0e4b8><pre class="shiki dracula vp-code" data-v-2ea0e4b8><code data-v-2ea0e4b8><span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>const</span><span style="color:#50FA7B;" data-v-2ea0e4b8> initCachedPositions</span><span style="color:#FF79C6;" data-v-2ea0e4b8> =</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> () </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=&gt;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cachedPositions </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> []</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>  // 假设每个元素的高度都是固定的</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> height </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 20</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  for</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (</span><span style="color:#FF79C6;" data-v-2ea0e4b8>let</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> i </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 0</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>; i </span><span style="color:#FF79C6;" data-v-2ea0e4b8>&lt;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> allPhantomList.length; i</span><span style="color:#FF79C6;" data-v-2ea0e4b8>++</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>) {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    cachedPositions[i] </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>      index</span><span style="color:#FF79C6;" data-v-2ea0e4b8>:</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> i,</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>      height</span><span style="color:#FF79C6;" data-v-2ea0e4b8>:</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> height,</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>      top</span><span style="color:#FF79C6;" data-v-2ea0e4b8>:</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> i </span><span style="color:#FF79C6;" data-v-2ea0e4b8>*</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> height,</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>      bottom</span><span style="color:#FF79C6;" data-v-2ea0e4b8>:</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (i </span><span style="color:#FF79C6;" data-v-2ea0e4b8>+</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 1</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>) </span><span style="color:#FF79C6;" data-v-2ea0e4b8>*</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> height,</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>      // 偏移量</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>      dValue</span><span style="color:#FF79C6;" data-v-2ea0e4b8>:</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 0</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    }</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  }</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  list </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cachedPositions.</span><span style="color:#50FA7B;" data-v-2ea0e4b8>slice</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>(</span><span style="color:#BD93F9;" data-v-2ea0e4b8>0</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>, </span><span style="color:#BD93F9;" data-v-2ea0e4b8>20</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>)</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>}</span></span>
<span class="line" data-v-2ea0e4b8></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>const</span><span style="color:#50FA7B;" data-v-2ea0e4b8> updateCachedPositions</span><span style="color:#FF79C6;" data-v-2ea0e4b8> =</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> () </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=&gt;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>  // 元素列表中的循环元素</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>  // 获取真实高度</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> nodes </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> waterListContainerRef.value.childNodes</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  let</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> start </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#BD93F9;" data-v-2ea0e4b8> null</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  nodes.</span><span style="color:#50FA7B;" data-v-2ea0e4b8>forEach</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>(</span><span style="color:#FFB86C;font-style:italic;" data-v-2ea0e4b8>node</span><span style="color:#FF79C6;" data-v-2ea0e4b8> =&gt;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>    // nodeType = 1  为元素，反正获取空白等文本类型</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>    if</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (</span><span style="color:#FF79C6;" data-v-2ea0e4b8>!</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>node </span><span style="color:#FF79C6;" data-v-2ea0e4b8>||</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> node.nodeType </span><span style="color:#FF79C6;" data-v-2ea0e4b8>!==</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 1</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>) {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>      return</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    }</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>    if</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (</span><span style="color:#FF79C6;" data-v-2ea0e4b8>!</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>start) {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>      start </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> node</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    }</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>    const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> rect </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> node.</span><span style="color:#50FA7B;" data-v-2ea0e4b8>getBoundingClientRect</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>()</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>    const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> { height } </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> rect</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>    const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> index </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> node.dataset.index</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>    // 原来旧的固定高度</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>    const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> oldHeight </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cachedPositions[index].height</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>    // 和正式高度的偏移量</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>    const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> dValue </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> oldHeight </span><span style="color:#FF79C6;" data-v-2ea0e4b8>-</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> height;</span></span>
<span class="line" data-v-2ea0e4b8></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>    // 存在偏移量 更新数据</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>    if</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (dValue) {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>      cachedPositions[index].height </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> height</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>      cachedPositions[index].bottom </span><span style="color:#FF79C6;" data-v-2ea0e4b8>-=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> dValue</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>      cachedPositions[index].dValue </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> dValue</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    }</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  })</span></span>
<span class="line" data-v-2ea0e4b8></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>  // 重新计算总高度</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  let</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> startIndex </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 0</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  if</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (start) {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>    // 当前列表的渲染元素的起始索引</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    startIndex </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#50FA7B;" data-v-2ea0e4b8> Number</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>(start.dataset.index)</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  }</span></span>
<span class="line" data-v-2ea0e4b8></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cachedPositionsLen </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cachedPositions.length</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>  // 获取偏移量</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  let</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cumulativeDiffHeight </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cachedPositions[startIndex].dValue</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  cachedPositions[startIndex].dValue </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 0</span></span>
<span class="line" data-v-2ea0e4b8></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  for</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (</span><span style="color:#FF79C6;" data-v-2ea0e4b8>let</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> i </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> startIndex </span><span style="color:#FF79C6;" data-v-2ea0e4b8>+</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 1</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>; i </span><span style="color:#FF79C6;" data-v-2ea0e4b8>&lt;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cachedPositionsLen; i</span><span style="color:#FF79C6;" data-v-2ea0e4b8>++</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>) {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>    const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> item </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cachedPositions[i]</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    cachedPositions[i].top </span><span style="color:#FF79C6;" data-v-2ea0e4b8>-=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cachedPositions[i </span><span style="color:#FF79C6;" data-v-2ea0e4b8>-</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 1</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>].bottom</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    cachedPositions[i].bottom </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cachedPositions[i].bottom </span><span style="color:#FF79C6;" data-v-2ea0e4b8>-</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cumulativeDiffHeight</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>    if</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (item.dValue </span><span style="color:#FF79C6;" data-v-2ea0e4b8>!==</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 0</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>) {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>      // 偏移量下面的元素计算要累计上面的偏移量 才是正确的偏移量</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>      cumulativeDiffHeight </span><span style="color:#FF79C6;" data-v-2ea0e4b8>+=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> item.dValue</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>      item.dValue </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 0</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    }</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  }</span></span>
<span class="line" data-v-2ea0e4b8></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> height </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cachedPositions[cachedPositionsLen </span><span style="color:#FF79C6;" data-v-2ea0e4b8>-</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 1</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>].bottom</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>  // 更新占位高度</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  phantomHeight </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> height</span></span>
<span class="line" data-v-2ea0e4b8></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>}</span></span>
<span class="line" data-v-2ea0e4b8></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>const</span><span style="color:#50FA7B;" data-v-2ea0e4b8> scroll</span><span style="color:#FF79C6;" data-v-2ea0e4b8> =</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (</span><span style="color:#FFB86C;font-style:italic;" data-v-2ea0e4b8>e</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>) </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=&gt;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> scrollTop </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> e.target.scrollTop </span><span style="color:#FF79C6;" data-v-2ea0e4b8>||</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 0</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>  // 根据滚动高度获取对应的起始索引</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> startIndex </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#50FA7B;" data-v-2ea0e4b8> getStartIndex</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>(scrollTop)</span></span>
<span class="line" data-v-2ea0e4b8></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  if</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>(startIndex </span><span style="color:#FF79C6;" data-v-2ea0e4b8>===</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> originStartIndex) </span><span style="color:#FF79C6;" data-v-2ea0e4b8>return</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  originStartIndex </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> startIndex</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  startIndex </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> startIndex</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> endIndex </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> Math.</span><span style="color:#50FA7B;" data-v-2ea0e4b8>min</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>(startIndex </span><span style="color:#FF79C6;" data-v-2ea0e4b8>+</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 20</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>, cachedPositions.length </span><span style="color:#FF79C6;" data-v-2ea0e4b8>+</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 1</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>)</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#6272A4;" data-v-2ea0e4b8>  // startIndex -5 必须 不如滚动到最下面的时候，会造成滚动抖动</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> index </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> Math.</span><span style="color:#50FA7B;" data-v-2ea0e4b8>max</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>(startIndex </span><span style="color:#FF79C6;" data-v-2ea0e4b8>-</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 5</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>,</span><span style="color:#BD93F9;" data-v-2ea0e4b8>0</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>)</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  list </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cachedPositions.</span><span style="color:#50FA7B;" data-v-2ea0e4b8>slice</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>(index, endIndex)</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  startOffset </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> index </span><span style="color:#FF79C6;" data-v-2ea0e4b8>&gt;</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 1</span><span style="color:#FF79C6;" data-v-2ea0e4b8> ?</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cachedPositions[index </span><span style="color:#FF79C6;" data-v-2ea0e4b8>-</span><span style="color:#BD93F9;" data-v-2ea0e4b8>1</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>].bottom </span><span style="color:#FF79C6;" data-v-2ea0e4b8>:</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 0</span></span>
<span class="line" data-v-2ea0e4b8></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>}</span></span>
<span class="line" data-v-2ea0e4b8></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>const</span><span style="color:#50FA7B;" data-v-2ea0e4b8> getStartIndex</span><span style="color:#FF79C6;" data-v-2ea0e4b8> =</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (</span><span style="color:#FFB86C;font-style:italic;" data-v-2ea0e4b8>value</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>) </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=&gt;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> list </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> cachedPositions</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  let</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> left </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 0</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>, right </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> list.length </span><span style="color:#FF79C6;" data-v-2ea0e4b8>-</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 1</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>, mid </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#FF79C6;" data-v-2ea0e4b8> -</span><span style="color:#BD93F9;" data-v-2ea0e4b8>1</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  while</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (left </span><span style="color:#FF79C6;" data-v-2ea0e4b8>&lt;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> right) {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    mid </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> Math.</span><span style="color:#50FA7B;" data-v-2ea0e4b8>floor</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>((left </span><span style="color:#FF79C6;" data-v-2ea0e4b8>+</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> right) </span><span style="color:#FF79C6;" data-v-2ea0e4b8>/</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 2</span><span style="color:#F8F8F2;" data-v-2ea0e4b8>)</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>    const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> midValue </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> list[mid].bottom</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>    if</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (midValue </span><span style="color:#FF79C6;" data-v-2ea0e4b8>==</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> value) {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>      return</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> mid</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    } </span><span style="color:#FF79C6;" data-v-2ea0e4b8>else</span><span style="color:#FF79C6;" data-v-2ea0e4b8> if</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (midValue </span><span style="color:#FF79C6;" data-v-2ea0e4b8>&lt;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> value) {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>      left </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> mid </span><span style="color:#FF79C6;" data-v-2ea0e4b8>+</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 1</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    } </span><span style="color:#FF79C6;" data-v-2ea0e4b8>else</span><span style="color:#FF79C6;" data-v-2ea0e4b8> if</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (midValue </span><span style="color:#FF79C6;" data-v-2ea0e4b8>&gt;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> value) {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>      right </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> mid </span><span style="color:#FF79C6;" data-v-2ea0e4b8>-</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 1</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    }</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  }</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  const</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> targetItem </span><span style="color:#FF79C6;" data-v-2ea0e4b8>=</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> list[mid]</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  if</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> (targetItem </span><span style="color:#FF79C6;" data-v-2ea0e4b8>&amp;&amp;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> targetItem.bottom </span><span style="color:#FF79C6;" data-v-2ea0e4b8>&lt;</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> value) {</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>    mid </span><span style="color:#FF79C6;" data-v-2ea0e4b8>+=</span><span style="color:#BD93F9;" data-v-2ea0e4b8> 1</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>  }</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#FF79C6;" data-v-2ea0e4b8>  return</span><span style="color:#F8F8F2;" data-v-2ea0e4b8> mid</span></span>
<span class="line" data-v-2ea0e4b8><span style="color:#F8F8F2;" data-v-2ea0e4b8>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-2ea0e4b8><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div><div class="line-number" data-v-2ea0e4b8></div></div></div><h1 id="参考" tabindex="-1" data-v-2ea0e4b8><a class="header-anchor" href="#参考" data-v-2ea0e4b8><span data-v-2ea0e4b8>参考</span></a></h1><p data-v-2ea0e4b8>https://codesandbox.io/p/sandbox/a-v-list-has-dynamic-inner-height-yh0r7?file=%2Fsrc%2FVList.tsx%3A129%2C31</p>`,4))])}const J=O(j,[["render",Z],["__scopeId","data-v-2ea0e4b8"],["__file","virtual-list.html.vue"]]),$=JSON.parse('{"path":"/javascript/virtual-list.html","title":"虚拟列表","lang":"en-US","frontmatter":{"title":"虚拟列表","date":"2025-02-20T00:00:00.000Z","category":["JavaScript"],"description":"固定列表 {{ite.name}} 设置2个子元素，一个子元素是列表，一个子元素是占位元素 占位元素的高度是所有列表元素的总高度 列表元素的高度是固定的，所以列表元素的总高度也是固定的 当滚动时，根据滚动条的位置，计算出当前应该显示的列表元素的起始索引和结束索引 监听滚动事件，获取滚动高度和列表元素 不固定列表 No. {{ ite.index }} ...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/javascript/virtual-list.html"}],["meta",{"property":"og:title","content":"虚拟列表"}],["meta",{"property":"og:description","content":"固定列表 {{ite.name}} 设置2个子元素，一个子元素是列表，一个子元素是占位元素 占位元素的高度是所有列表元素的总高度 列表元素的高度是固定的，所以列表元素的总高度也是固定的 当滚动时，根据滚动条的位置，计算出当前应该显示的列表元素的起始索引和结束索引 监听滚动事件，获取滚动高度和列表元素 不固定列表 No. {{ ite.index }} ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-03-18T07:47:33.000Z"}],["meta",{"property":"article:published_time","content":"2025-02-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-18T07:47:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"虚拟列表\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-18T07:47:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"git":{"createdTime":1740723109000,"updatedTime":1742284053000,"contributors":[{"name":"luxiag","username":"luxiag","email":"luxiag@qq.com","commits":3,"url":"https://github.com/luxiag"}]},"readingTime":{"minutes":4.71,"words":1413},"filePathRelative":"javascript/virtual-list.md","localizedDate":"February 20, 2025","excerpt":"\\n<div class=\\"list\\" ref=\\"fixedListRef\\" @scroll=\\"fixedScrollEvent\\">\\n  <div class=\\"list-containter\\" :style=\\"{transform: `translate3d(0,${fixedModel.startOffset}px,0)`}\\">\\n    <div class=\\"fixed-list-item\\" v-for=\\"ite in fixedModel.list\\" :key=\\"ite.id\\">\\n     {{ite.name}}\\n    </div>\\n  </div>\\n  <div class=\\"list-place\\"></div>\\n</div>","autoDesc":true}');export{J as comp,$ as data};
