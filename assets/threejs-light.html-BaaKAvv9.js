import{_ as V,i as x,l as G,q as K,c as Y,a as L,d as P,o as Q}from"./app-CbGq5X0e.js";import{S,P as _,aC as I,W as T,aD as J,a as X,D as N,A as aa,aK as sa,az as O,a_ as ea,M as R,v as na,T as ta,Y as la,aN as Z,u as oa,a$ as pa,aj as da,a5 as $,C as va}from"./three.module-DElcEsb7.js";import{O as E}from"./OrbitControls-COOjmuLA.js";import{g as j}from"./index-DjKJqAo0.js";import{R as z}from"./RGBELoader-CbWxVjwZ.js";import{G as W}from"./GLTFLoader-Def6ni-K.js";import{W as ia}from"./Water2-Ek810xfd.js";const ra={__name:"threejs-light.html",setup(U,{expose:r}){r();let y;const c=x(),D=async()=>{const e=new S,p=new _(45,2,.25,20);p.position.set(-2,1.5,3);const t=await new z().loadAsync("/threejs/textures/equirectangular/moonless_golf_1k.hdr ");t.mapping=I,e.background=t,e.environment=t;const m=await new W().loadAsync("/threejs/models/gltf/LightsPunctualLamp.glb");e.add(m.scene);const d=new y.GUI;c.value.appendChild(d.domElement),d.domElement.style.position="absolute",d.domElement.style.top="0px",d.domElement.style.right="0px";const l={punctualLightsEnabled:!0};d.add(l,"punctualLightsEnabled").onChange(f),d.open();const s=new T({antialias:!0});s.setSize(c.value.offsetWidth,c.value.offsetWidth/2),s.toneMapping=J,s.toneMappingExposure=1,s.outputEncoding=void 0,s.useLegacyLights=!1,c.value.appendChild(s.domElement);const v=new E(p,s.domElement);v.addEventListener("change",o),v.minDistance=2,v.maxDistance=10,v.target.set(0,1,0),v.update(),window.addEventListener("resize",i);function i(){s.setSize(c.value.offsetWidth,c.value.offsetWidth/2),o()}function f(u){e.traverse(function(a){a.isLight&&(a.visible=u)}),o()}function o(){s.render(e,p)}o()},b=x(),k=()=>{const e=new S,p=new _(90,2,.1,1e3);p.position.y=5,new z().loadAsync("/assets/textures/2k.hdr").then(i=>{i.mapping=I,e.background=i,e.environment=i});const t=new X({vertexShader:`
            precision lowp float;
            varying vec4 vPosition;
            varying vec4 gPosition;
            void main(){
                vec4 modelPosition = modelMatrix * vec4( position, 1.0 );

                vPosition = modelPosition;
                gPosition = vec4( position, 1.0 );
                gl_Position =  projectionMatrix * viewMatrix * modelPosition;
            }
        `,fragmentShader:`
            precision lowp float;
            varying vec4 vPosition;
            varying vec4 gPosition;

            void main(){
                vec4 redColor = vec4(1,0,0,1);
                vec4 yellowColor = vec4(1,1,0.5,1);
                vec4 mixColor = mix(yellowColor,redColor,gPosition.y/3.0);

                if(gl_FrontFacing){
                    gl_FragColor = vec4(mixColor.xyz-(vPosition.y-20.0)/80.0-0.1,1);
                    // gl_FragColor = vec4(1,1,1,1);
                }else{
                    gl_FragColor = vec4(mixColor.xyz,1);
                }
            }  
        `,uniforms:{},side:N}),n=new T;n.outputEncoding=void 0,n.toneMapping=J,n.toneMappingExposure=.2;const m=new W;let d=null;m.load("/assets/model/flyLight.glb",i=>{d=i.scene.children[1],d.material=t;for(let f=0;f<150;f++){let o=i.scene.clone(!0),u=(Math.random()-.5)*300,a=(Math.random()-.5)*300,h=Math.random()*60+25;o.position.set(u,h,a),j.to(o.rotation,{y:2*Math.PI,duration:10+Math.random()*30,repeat:-1}),j.to(o.position,{x:"+="+Math.random()*5,y:"+="+Math.random()*20,yoyo:!0,duration:5+Math.random()*10,repeat:-1}),e.add(o)}}),n.setSize(b.value.offsetWidth,b.value.offsetWidth/2),window.addEventListener("resize",()=>{n.setSize(b.value.offsetWidth,b.value.offsetWidth/2),n.setPixelRatio(window.devicePixelRatio)}),b.value.appendChild(n.domElement);const l=new E(p,n.domElement);l.enableDamping=!0,l.update(),l.autoRotate=!0,l.autoRotateSpeed=.1,l.maxPolarAngle=Math.PI/3*2,l.minPolarAngle=Math.PI/3*2;const s=new va;function v(i){s.getElapsedTime(),requestAnimationFrame(v),n.render(e,p)}v()},F=x(),H=()=>{const e=new S,p=new _(45,2,1,2e3);p.position.z=20,e.add(new aa(1118498));function B(a){const g=new la(a,2,20);g.castShadow=!0,g.shadow.bias=-.005;let M=new Z(.3,12,6),w=new oa({color:a});w.color.multiplyScalar(2);let C=new R(M,w);g.add(C);const A=new pa(f());return A.magFilter=da,A.wrapT=$,A.wrapS=$,A.repeat.set(1,4.5),M=new Z(2,32,8),w=new O({side:N,alphaMap:A,alphaTest:.5}),C=new R(M,w),C.castShadow=!0,C.receiveShadow=!0,g.add(C),g}const t=B(35071);e.add(t);const n=B(16746632);e.add(n);const m=new sa(30,30,30),d=new O({color:10530223,shininess:10,specular:1118481,side:ea}),l=new R(m,d);l.position.y=10,l.receiveShadow=!0,e.add(l);const s=new T({antialias:!0});s.setPixelRatio(window.devicePixelRatio),s.setSize(F.value.offsetWidth,F.value.offsetWidth/2),s.shadowMap.enabled=!0,s.shadowMap.type=na,F.value.appendChild(s.domElement);const v=new E(p,s.domElement);v.target.set(0,10,0),v.update(),window.addEventListener("resize",i);function i(){s.setSize(F.value.offsetWidth,F.value.offsetWidth/2)}function f(){const a=document.createElement("canvas");a.width=2,a.height=2;const h=a.getContext("2d");return h.fillStyle="white",h.fillRect(0,1,2,1),a}function o(){requestAnimationFrame(o),u()}function u(){let a=performance.now()*.001;t.position.x=Math.sin(a*.6)*9,t.position.y=Math.sin(a*.7)*9+6,t.position.z=Math.sin(a*.8)*9,t.rotation.x=a,t.rotation.z=a,a+=1e4,n.position.x=Math.sin(a*.6)*9,n.position.y=Math.sin(a*.7)*9+6,n.position.z=Math.sin(a*.8)*9,n.rotation.x=a,n.rotation.z=a,s.render(e,p)}o()};G(async()=>{y=await K(()=>import("./dat.gui.module-DNo137I2.js"),[]),k(),D(),H()});const q={get dat(){return y},set dat(e){y=e},lightRef:c,initLights:D,lanternRef:b,initLantern:k,pointLightRef:F,initPointLight:H,ref:x,onMounted:G,get THREE(){return ta},get OrbitControls(){return E},get gsap(){return j},get RGBELoader(){return z},get GLTFLoader(){return W},get Water(){return ia}};return Object.defineProperty(q,"__isScriptSetup",{enumerable:!1,value:!0}),q}},ca={ref:"lightRef",class:"light"},ba={ref:"lanternRef"},Fa={ref:"pointLightRef"};function fa(U,r,y,c,D,b){return Q(),Y("div",null,[r[0]||(r[0]=L(`<p data-v-608e1f9b>参考：<a href="https://threejs.org/" target="_blank" rel="noopener noreferrer" data-v-608e1f9b>https://threejs.org/</a></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-608e1f9b><pre class="shiki dracula vp-code" data-v-608e1f9b><code data-v-608e1f9b><span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>//遍历场景中的所有对象，然后判断当前对象是否是光源对象</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>function</span><span style="color:#50FA7B;" data-v-608e1f9b> toggleLights</span><span style="color:#F8F8F2;" data-v-608e1f9b>( </span><span style="color:#FFB86C;font-style:italic;" data-v-608e1f9b>visible</span><span style="color:#F8F8F2;" data-v-608e1f9b> ) {</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b> scene.</span><span style="color:#50FA7B;" data-v-608e1f9b>traverse</span><span style="color:#F8F8F2;" data-v-608e1f9b>( </span><span style="color:#FF79C6;" data-v-608e1f9b>function</span><span style="color:#F8F8F2;" data-v-608e1f9b> ( </span><span style="color:#FFB86C;font-style:italic;" data-v-608e1f9b>object</span><span style="color:#F8F8F2;" data-v-608e1f9b> ) {</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>  if</span><span style="color:#F8F8F2;" data-v-608e1f9b> ( object.isLight ) {</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>   object.visible </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#F8F8F2;" data-v-608e1f9b> visible;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  }</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b> } );</span></span>
<span class="line" data-v-608e1f9b><span style="color:#50FA7B;" data-v-608e1f9b> render</span><span style="color:#F8F8F2;" data-v-608e1f9b>();</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-608e1f9b><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div></div></div>`,2)),P("div",ca,null,512),r[1]||(r[1]=L(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-608e1f9b><pre class="shiki dracula vp-code" data-v-608e1f9b><code data-v-608e1f9b><span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>    const</span><span style="color:#F8F8F2;" data-v-608e1f9b> shaderMaterial </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-608e1f9b> new</span><span style="color:#BD93F9;" data-v-608e1f9b> THREE</span><span style="color:#F8F8F2;" data-v-608e1f9b>.</span><span style="color:#50FA7B;" data-v-608e1f9b>ShaderMaterial</span><span style="color:#F8F8F2;" data-v-608e1f9b>({</span></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>        // 定义顶点着色器，用于处理顶点属性</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>        vertexShader</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#F1FA8C;" data-v-608e1f9b> \`</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>            precision lowp float;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>            // 传递顶点位置信息到片元着色器</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>            varying vec4 vPosition;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>            // 传递变换后的顶点位置信息到片元着色器</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>            varying vec4 gPosition;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>            void main(){</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                // 将顶点坐标从模型空间变换到世界空间</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                vec4 modelPosition = modelMatrix * vec4( position, 1.0 );</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                // 将变换后的顶点坐标从世界空间变换到相机空间</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                // 并传递给 varying vPosition</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                vPosition = modelPosition;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                // 将顶点坐标从模型空间变换到世界空间</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                // 并传递给 varying gPosition</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                gPosition = vec4( position, 1.0 );</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                // 将顶点坐标从模型空间变换到相机空间和投影空间</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                gl_Position =  projectionMatrix * viewMatrix * modelPosition;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>            }</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>        \`</span><span style="color:#F8F8F2;" data-v-608e1f9b>,</span></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>        // 定义片元着色器，用于处理像素颜色</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>        fragmentShader</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#F1FA8C;" data-v-608e1f9b>\`</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>            precision lowp float;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>            // 接收来自顶点着色器的变量</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>            varying vec4 vPosition;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>            varying vec4 gPosition;</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>            void main(){</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                // 定义红色和黄色的颜色值</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                vec4 redColor = vec4(1,0,0,1);</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                vec4 yellowColor = vec4(1,1,0.5,1);</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                // 计算需要混合的颜色值，并传递给 gl_FragColor</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                vec4 mixColor = mix(yellowColor,redColor,gPosition.y/3.0);</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                if(gl_FrontFacing){</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                    // 对于正面的面，计算并设置像素颜色</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                    gl_FragColor = vec4(mixColor.xyz-(vPosition.y-20.0)/80.0-0.1,1);</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                }else{</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                    // 对于背面的面，直接设置像素颜色</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                    gl_FragColor = vec4(mixColor.xyz,1);</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>                }</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>            }  </span></span>
<span class="line" data-v-608e1f9b><span style="color:#F1FA8C;" data-v-608e1f9b>        \`</span><span style="color:#F8F8F2;" data-v-608e1f9b>,</span></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>        // 传递给着色器的变量，这里为空对象</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>        uniforms</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#F8F8F2;" data-v-608e1f9b>{},</span></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>        // 设置物体的两面都需要渲染</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>        side</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#BD93F9;" data-v-608e1f9b>THREE</span><span style="color:#F8F8F2;" data-v-608e1f9b>.DoubleSide</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>    })</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>    const</span><span style="color:#F8F8F2;" data-v-608e1f9b> gltfLoader </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-608e1f9b> new</span><span style="color:#50FA7B;" data-v-608e1f9b> GLTFLoader</span><span style="color:#F8F8F2;" data-v-608e1f9b>()</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>    let</span><span style="color:#F8F8F2;" data-v-608e1f9b> LightBox </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#BD93F9;" data-v-608e1f9b> null</span><span style="color:#F8F8F2;" data-v-608e1f9b> </span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>    gltfLoader.</span><span style="color:#50FA7B;" data-v-608e1f9b>load</span><span style="color:#F8F8F2;" data-v-608e1f9b>(</span><span style="color:#E9F284;" data-v-608e1f9b>&quot;</span><span style="color:#F1FA8C;" data-v-608e1f9b>/assets/model/flyLight.glb</span><span style="color:#E9F284;" data-v-608e1f9b>&quot;</span><span style="color:#F8F8F2;" data-v-608e1f9b>,(</span><span style="color:#FFB86C;font-style:italic;" data-v-608e1f9b>gltf</span><span style="color:#F8F8F2;" data-v-608e1f9b>) </span><span style="color:#FF79C6;" data-v-608e1f9b>=&gt;</span><span style="color:#F8F8F2;" data-v-608e1f9b> {</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>        LightBox </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#F8F8F2;" data-v-608e1f9b> gltf.scene.children[</span><span style="color:#BD93F9;" data-v-608e1f9b>1</span><span style="color:#F8F8F2;" data-v-608e1f9b>]</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>        LightBox.material </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#F8F8F2;" data-v-608e1f9b> shaderMaterial;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>        </span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>        for</span><span style="color:#F8F8F2;" data-v-608e1f9b> (</span><span style="color:#FF79C6;" data-v-608e1f9b>let</span><span style="color:#F8F8F2;" data-v-608e1f9b> i </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#BD93F9;" data-v-608e1f9b> 0</span><span style="color:#F8F8F2;" data-v-608e1f9b>; i </span><span style="color:#FF79C6;" data-v-608e1f9b>&lt;</span><span style="color:#BD93F9;" data-v-608e1f9b> 150</span><span style="color:#F8F8F2;" data-v-608e1f9b>; i</span><span style="color:#FF79C6;" data-v-608e1f9b>++</span><span style="color:#F8F8F2;" data-v-608e1f9b>) {</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>          let</span><span style="color:#F8F8F2;" data-v-608e1f9b> flyLight </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#F8F8F2;" data-v-608e1f9b> gltf.scene.</span><span style="color:#50FA7B;" data-v-608e1f9b>clone</span><span style="color:#F8F8F2;" data-v-608e1f9b>(</span><span style="color:#BD93F9;" data-v-608e1f9b>true</span><span style="color:#F8F8F2;" data-v-608e1f9b>);</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>          let</span><span style="color:#F8F8F2;" data-v-608e1f9b> x </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#F8F8F2;" data-v-608e1f9b> (Math.</span><span style="color:#50FA7B;" data-v-608e1f9b>random</span><span style="color:#F8F8F2;" data-v-608e1f9b>() </span><span style="color:#FF79C6;" data-v-608e1f9b>-</span><span style="color:#BD93F9;" data-v-608e1f9b> 0.5</span><span style="color:#F8F8F2;" data-v-608e1f9b>) </span><span style="color:#FF79C6;" data-v-608e1f9b>*</span><span style="color:#BD93F9;" data-v-608e1f9b> 300</span><span style="color:#F8F8F2;" data-v-608e1f9b>;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>          let</span><span style="color:#F8F8F2;" data-v-608e1f9b> z </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#F8F8F2;" data-v-608e1f9b> (Math.</span><span style="color:#50FA7B;" data-v-608e1f9b>random</span><span style="color:#F8F8F2;" data-v-608e1f9b>() </span><span style="color:#FF79C6;" data-v-608e1f9b>-</span><span style="color:#BD93F9;" data-v-608e1f9b> 0.5</span><span style="color:#F8F8F2;" data-v-608e1f9b>) </span><span style="color:#FF79C6;" data-v-608e1f9b>*</span><span style="color:#BD93F9;" data-v-608e1f9b> 300</span><span style="color:#F8F8F2;" data-v-608e1f9b>;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>          let</span><span style="color:#F8F8F2;" data-v-608e1f9b> y </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#F8F8F2;" data-v-608e1f9b> Math.</span><span style="color:#50FA7B;" data-v-608e1f9b>random</span><span style="color:#F8F8F2;" data-v-608e1f9b>() </span><span style="color:#FF79C6;" data-v-608e1f9b>*</span><span style="color:#BD93F9;" data-v-608e1f9b> 60</span><span style="color:#FF79C6;" data-v-608e1f9b> +</span><span style="color:#BD93F9;" data-v-608e1f9b> 25</span><span style="color:#F8F8F2;" data-v-608e1f9b>;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>          flyLight.position.</span><span style="color:#50FA7B;" data-v-608e1f9b>set</span><span style="color:#F8F8F2;" data-v-608e1f9b>(x, y, z);</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>          gsap.</span><span style="color:#50FA7B;" data-v-608e1f9b>to</span><span style="color:#F8F8F2;" data-v-608e1f9b>(flyLight.rotation, {</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>            y</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#BD93F9;" data-v-608e1f9b> 2</span><span style="color:#FF79C6;" data-v-608e1f9b> *</span><span style="color:#F8F8F2;" data-v-608e1f9b> Math.</span><span style="color:#BD93F9;" data-v-608e1f9b>PI</span><span style="color:#F8F8F2;" data-v-608e1f9b>,</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>            duration</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#BD93F9;" data-v-608e1f9b> 10</span><span style="color:#FF79C6;" data-v-608e1f9b> +</span><span style="color:#F8F8F2;" data-v-608e1f9b> Math.</span><span style="color:#50FA7B;" data-v-608e1f9b>random</span><span style="color:#F8F8F2;" data-v-608e1f9b>() </span><span style="color:#FF79C6;" data-v-608e1f9b>*</span><span style="color:#BD93F9;" data-v-608e1f9b> 30</span><span style="color:#F8F8F2;" data-v-608e1f9b>,</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>            repeat</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#FF79C6;" data-v-608e1f9b> -</span><span style="color:#BD93F9;" data-v-608e1f9b>1</span><span style="color:#F8F8F2;" data-v-608e1f9b>,</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>          });</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>          gsap.</span><span style="color:#50FA7B;" data-v-608e1f9b>to</span><span style="color:#F8F8F2;" data-v-608e1f9b>(flyLight.position, {</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>            x</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#E9F284;" data-v-608e1f9b> &quot;</span><span style="color:#F1FA8C;" data-v-608e1f9b>+=</span><span style="color:#E9F284;" data-v-608e1f9b>&quot;</span><span style="color:#FF79C6;" data-v-608e1f9b> +</span><span style="color:#F8F8F2;" data-v-608e1f9b> Math.</span><span style="color:#50FA7B;" data-v-608e1f9b>random</span><span style="color:#F8F8F2;" data-v-608e1f9b>() </span><span style="color:#FF79C6;" data-v-608e1f9b>*</span><span style="color:#BD93F9;" data-v-608e1f9b> 5</span><span style="color:#F8F8F2;" data-v-608e1f9b>,</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>            y</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#E9F284;" data-v-608e1f9b> &quot;</span><span style="color:#F1FA8C;" data-v-608e1f9b>+=</span><span style="color:#E9F284;" data-v-608e1f9b>&quot;</span><span style="color:#FF79C6;" data-v-608e1f9b> +</span><span style="color:#F8F8F2;" data-v-608e1f9b> Math.</span><span style="color:#50FA7B;" data-v-608e1f9b>random</span><span style="color:#F8F8F2;" data-v-608e1f9b>() </span><span style="color:#FF79C6;" data-v-608e1f9b>*</span><span style="color:#BD93F9;" data-v-608e1f9b> 20</span><span style="color:#F8F8F2;" data-v-608e1f9b>,</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>            yoyo</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#BD93F9;" data-v-608e1f9b> true</span><span style="color:#F8F8F2;" data-v-608e1f9b>,</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>            duration</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#BD93F9;" data-v-608e1f9b> 5</span><span style="color:#FF79C6;" data-v-608e1f9b> +</span><span style="color:#F8F8F2;" data-v-608e1f9b> Math.</span><span style="color:#50FA7B;" data-v-608e1f9b>random</span><span style="color:#F8F8F2;" data-v-608e1f9b>() </span><span style="color:#FF79C6;" data-v-608e1f9b>*</span><span style="color:#BD93F9;" data-v-608e1f9b> 10</span><span style="color:#F8F8F2;" data-v-608e1f9b>,</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>            repeat</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#FF79C6;" data-v-608e1f9b> -</span><span style="color:#BD93F9;" data-v-608e1f9b>1</span><span style="color:#F8F8F2;" data-v-608e1f9b>,</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>          });</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>          scene.</span><span style="color:#50FA7B;" data-v-608e1f9b>add</span><span style="color:#F8F8F2;" data-v-608e1f9b>(flyLight);</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>        }</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>    })</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-608e1f9b><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div></div></div>`,1)),P("div",ba,null,512),r[2]||(r[2]=L(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-608e1f9b><pre class="shiki dracula vp-code" data-v-608e1f9b><code data-v-608e1f9b><span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>function</span><span style="color:#50FA7B;" data-v-608e1f9b> createLight</span><span style="color:#F8F8F2;" data-v-608e1f9b>(</span><span style="color:#FFB86C;font-style:italic;" data-v-608e1f9b>color</span><span style="color:#F8F8F2;" data-v-608e1f9b>) {</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 定义光源强度为2</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>  const</span><span style="color:#F8F8F2;" data-v-608e1f9b> intensity </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#BD93F9;" data-v-608e1f9b> 2</span><span style="color:#F8F8F2;" data-v-608e1f9b>;</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 创建一个点光源</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>  const</span><span style="color:#F8F8F2;" data-v-608e1f9b> light </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-608e1f9b> new</span><span style="color:#BD93F9;" data-v-608e1f9b> THREE</span><span style="color:#F8F8F2;" data-v-608e1f9b>.</span><span style="color:#50FA7B;" data-v-608e1f9b>PointLight</span><span style="color:#F8F8F2;" data-v-608e1f9b>(color, intensity, </span><span style="color:#BD93F9;" data-v-608e1f9b>20</span><span style="color:#F8F8F2;" data-v-608e1f9b>);</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 开启阴影</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  light.castShadow </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#BD93F9;" data-v-608e1f9b> true</span><span style="color:#F8F8F2;" data-v-608e1f9b>;</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 减少双面对象自身阴影</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  light.shadow.bias </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#FF79C6;" data-v-608e1f9b> -</span><span style="color:#BD93F9;" data-v-608e1f9b>0.005</span><span style="color:#F8F8F2;" data-v-608e1f9b>;</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 创建一个球体作为光源的可视化表示</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>  let</span><span style="color:#F8F8F2;" data-v-608e1f9b> geometry </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-608e1f9b> new</span><span style="color:#BD93F9;" data-v-608e1f9b> THREE</span><span style="color:#F8F8F2;" data-v-608e1f9b>.</span><span style="color:#50FA7B;" data-v-608e1f9b>SphereGeometry</span><span style="color:#F8F8F2;" data-v-608e1f9b>(</span><span style="color:#BD93F9;" data-v-608e1f9b>0.3</span><span style="color:#F8F8F2;" data-v-608e1f9b>, </span><span style="color:#BD93F9;" data-v-608e1f9b>12</span><span style="color:#F8F8F2;" data-v-608e1f9b>, </span><span style="color:#BD93F9;" data-v-608e1f9b>6</span><span style="color:#F8F8F2;" data-v-608e1f9b>);</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>  let</span><span style="color:#F8F8F2;" data-v-608e1f9b> material </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-608e1f9b> new</span><span style="color:#BD93F9;" data-v-608e1f9b> THREE</span><span style="color:#F8F8F2;" data-v-608e1f9b>.</span><span style="color:#50FA7B;" data-v-608e1f9b>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-608e1f9b>({</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>    color</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#F8F8F2;" data-v-608e1f9b> color</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  });</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 根据光源强度调整颜色</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  material.color.</span><span style="color:#50FA7B;" data-v-608e1f9b>multiplyScalar</span><span style="color:#F8F8F2;" data-v-608e1f9b>(intensity);</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>  let</span><span style="color:#F8F8F2;" data-v-608e1f9b> sphere </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-608e1f9b> new</span><span style="color:#BD93F9;" data-v-608e1f9b> THREE</span><span style="color:#F8F8F2;" data-v-608e1f9b>.</span><span style="color:#50FA7B;" data-v-608e1f9b>Mesh</span><span style="color:#F8F8F2;" data-v-608e1f9b>(geometry, material);</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 将球体添加到光源上</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  light.</span><span style="color:#50FA7B;" data-v-608e1f9b>add</span><span style="color:#F8F8F2;" data-v-608e1f9b>(sphere);</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 生成纹理</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>  const</span><span style="color:#F8F8F2;" data-v-608e1f9b> texture </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-608e1f9b> new</span><span style="color:#BD93F9;" data-v-608e1f9b> THREE</span><span style="color:#F8F8F2;" data-v-608e1f9b>.</span><span style="color:#50FA7B;" data-v-608e1f9b>CanvasTexture</span><span style="color:#F8F8F2;" data-v-608e1f9b>(</span><span style="color:#50FA7B;" data-v-608e1f9b>generateTexture</span><span style="color:#F8F8F2;" data-v-608e1f9b>());</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 设置纹理过滤器和重复方式</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  texture.magFilter </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#BD93F9;" data-v-608e1f9b> THREE</span><span style="color:#F8F8F2;" data-v-608e1f9b>.NearestFilter;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  texture.wrapT </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#BD93F9;" data-v-608e1f9b> THREE</span><span style="color:#F8F8F2;" data-v-608e1f9b>.RepeatWrapping;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  texture.wrapS </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#BD93F9;" data-v-608e1f9b> THREE</span><span style="color:#F8F8F2;" data-v-608e1f9b>.RepeatWrapping;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  texture.repeat.</span><span style="color:#50FA7B;" data-v-608e1f9b>set</span><span style="color:#F8F8F2;" data-v-608e1f9b>(</span><span style="color:#BD93F9;" data-v-608e1f9b>1</span><span style="color:#F8F8F2;" data-v-608e1f9b>, </span><span style="color:#BD93F9;" data-v-608e1f9b>4.5</span><span style="color:#F8F8F2;" data-v-608e1f9b>);</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 创建一个球体作为光源的光晕效果</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  geometry </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-608e1f9b> new</span><span style="color:#BD93F9;" data-v-608e1f9b> THREE</span><span style="color:#F8F8F2;" data-v-608e1f9b>.</span><span style="color:#50FA7B;" data-v-608e1f9b>SphereGeometry</span><span style="color:#F8F8F2;" data-v-608e1f9b>(</span><span style="color:#BD93F9;" data-v-608e1f9b>2</span><span style="color:#F8F8F2;" data-v-608e1f9b>, </span><span style="color:#BD93F9;" data-v-608e1f9b>32</span><span style="color:#F8F8F2;" data-v-608e1f9b>, </span><span style="color:#BD93F9;" data-v-608e1f9b>8</span><span style="color:#F8F8F2;" data-v-608e1f9b>);</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  material </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-608e1f9b> new</span><span style="color:#BD93F9;" data-v-608e1f9b> THREE</span><span style="color:#F8F8F2;" data-v-608e1f9b>.</span><span style="color:#50FA7B;" data-v-608e1f9b>MeshPhongMaterial</span><span style="color:#F8F8F2;" data-v-608e1f9b>({</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>    side</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#BD93F9;" data-v-608e1f9b> THREE</span><span style="color:#F8F8F2;" data-v-608e1f9b>.DoubleSide, </span><span style="color:#6272A4;" data-v-608e1f9b>// 双面显示</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>    alphaMap</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#F8F8F2;" data-v-608e1f9b> texture, </span><span style="color:#6272A4;" data-v-608e1f9b>// 设置透明度贴图</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>    alphaTest</span><span style="color:#FF79C6;" data-v-608e1f9b>:</span><span style="color:#BD93F9;" data-v-608e1f9b> 0.5</span><span style="color:#6272A4;" data-v-608e1f9b> // 设置透明度阈值</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  });</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  sphere </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-608e1f9b> new</span><span style="color:#BD93F9;" data-v-608e1f9b> THREE</span><span style="color:#F8F8F2;" data-v-608e1f9b>.</span><span style="color:#50FA7B;" data-v-608e1f9b>Mesh</span><span style="color:#F8F8F2;" data-v-608e1f9b>(geometry, material);</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 开启球体阴影和接收阴影</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  sphere.castShadow </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#BD93F9;" data-v-608e1f9b> true</span><span style="color:#F8F8F2;" data-v-608e1f9b>;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  sphere.receiveShadow </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#BD93F9;" data-v-608e1f9b> true</span><span style="color:#F8F8F2;" data-v-608e1f9b>;</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 将球体添加到光源上</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  light.</span><span style="color:#50FA7B;" data-v-608e1f9b>add</span><span style="color:#F8F8F2;" data-v-608e1f9b>(sphere);</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 返回创建的光源</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>  return</span><span style="color:#F8F8F2;" data-v-608e1f9b> light;</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>}</span></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>/**</span></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b> * 生成一个 2x2 的纯白色 canvas 纹理</span></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b> */</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>function</span><span style="color:#50FA7B;" data-v-608e1f9b> generateTexture</span><span style="color:#F8F8F2;" data-v-608e1f9b>() {</span></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 创建一个 canvas 元素，并设置它的宽高为 2</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>  const</span><span style="color:#F8F8F2;" data-v-608e1f9b> canvas </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#F8F8F2;" data-v-608e1f9b> document.</span><span style="color:#50FA7B;" data-v-608e1f9b>createElement</span><span style="color:#F8F8F2;" data-v-608e1f9b>( </span><span style="color:#E9F284;" data-v-608e1f9b>&#39;</span><span style="color:#F1FA8C;" data-v-608e1f9b>canvas</span><span style="color:#E9F284;" data-v-608e1f9b>&#39;</span><span style="color:#F8F8F2;" data-v-608e1f9b> );</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  canvas.width </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#BD93F9;" data-v-608e1f9b> 2</span><span style="color:#F8F8F2;" data-v-608e1f9b>;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  canvas.height </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#BD93F9;" data-v-608e1f9b> 2</span><span style="color:#F8F8F2;" data-v-608e1f9b>;</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 获取 canvas 的绘制上下文，并将其填充为白色</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>  const</span><span style="color:#F8F8F2;" data-v-608e1f9b> context </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#F8F8F2;" data-v-608e1f9b> canvas.</span><span style="color:#50FA7B;" data-v-608e1f9b>getContext</span><span style="color:#F8F8F2;" data-v-608e1f9b>( </span><span style="color:#E9F284;" data-v-608e1f9b>&#39;</span><span style="color:#F1FA8C;" data-v-608e1f9b>2d</span><span style="color:#E9F284;" data-v-608e1f9b>&#39;</span><span style="color:#F8F8F2;" data-v-608e1f9b> );</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  context.fillStyle </span><span style="color:#FF79C6;" data-v-608e1f9b>=</span><span style="color:#E9F284;" data-v-608e1f9b> &#39;</span><span style="color:#F1FA8C;" data-v-608e1f9b>white</span><span style="color:#E9F284;" data-v-608e1f9b>&#39;</span><span style="color:#F8F8F2;" data-v-608e1f9b>;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>  context.</span><span style="color:#50FA7B;" data-v-608e1f9b>fillRect</span><span style="color:#F8F8F2;" data-v-608e1f9b>( </span><span style="color:#BD93F9;" data-v-608e1f9b>0</span><span style="color:#F8F8F2;" data-v-608e1f9b>, </span><span style="color:#BD93F9;" data-v-608e1f9b>1</span><span style="color:#F8F8F2;" data-v-608e1f9b>, </span><span style="color:#BD93F9;" data-v-608e1f9b>2</span><span style="color:#F8F8F2;" data-v-608e1f9b>, </span><span style="color:#BD93F9;" data-v-608e1f9b>1</span><span style="color:#F8F8F2;" data-v-608e1f9b> );</span></span>
<span class="line" data-v-608e1f9b></span>
<span class="line" data-v-608e1f9b><span style="color:#6272A4;" data-v-608e1f9b>  // 返回生成的纹理</span></span>
<span class="line" data-v-608e1f9b><span style="color:#FF79C6;" data-v-608e1f9b>  return</span><span style="color:#F8F8F2;" data-v-608e1f9b> canvas;</span></span>
<span class="line" data-v-608e1f9b><span style="color:#F8F8F2;" data-v-608e1f9b>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-608e1f9b><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div><div class="line-number" data-v-608e1f9b></div></div></div>`,1)),P("div",Fa,null,512)])}const Ba=V(ra,[["render",fa],["__scopeId","data-v-608e1f9b"],["__file","threejs-light.html.vue"]]),wa=JSON.parse('{"path":"/threejs/threejs-light.html","title":"ThreeJS中的灯光","lang":"en-US","frontmatter":{"title":"ThreeJS中的灯光","category":["ThreeJS"],"date":"2022-03-07T00:00:00.000Z","description":"参考：https://threejs.org/","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/threejs/threejs-light.html"}],["meta",{"property":"og:title","content":"ThreeJS中的灯光"}],["meta",{"property":"og:description","content":"参考：https://threejs.org/"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-03T04:27:20.000Z"}],["meta",{"property":"article:published_time","content":"2022-03-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-03T04:27:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ThreeJS中的灯光\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-07T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-03T04:27:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[],"git":{"createdTime":1682066702000,"updatedTime":1730608040000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":4},{"name":"卢祥","email":"example@qq.com","commits":2}]},"readingTime":{"minutes":5.52,"words":1656},"filePathRelative":"threejs/threejs-light.md","localizedDate":"March 7, 2022","excerpt":"<p>参考：<a href=\\"https://threejs.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://threejs.org/</a></p>","autoDesc":true}');export{Ba as comp,wa as data};
