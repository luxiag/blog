import{_ as lt,e as ot,g as rt,f as ct,r as G,i as R,x as pt,o as ht}from"./app-BcLUFOMF.js";import{m as vt,l as bt,i as ut,aN as mt,aO as gt,A as Ft,p as yt,q as ft,aE as At,aP as wt,aQ as xt,W as _t,r as Et,s as Ct}from"./three.module-_5Kft3IB.js";import{G as Y}from"./GLTFLoader--m4klZzU.js";/**
 * lil-gui
 * https://lil-gui.georgealways.com
 * @version 0.17.0
 * @author George Michael Brower
 * @license MIT
 */class x{constructor(t,a,e,n,r="div"){this.parent=t,this.object=a,this.property=e,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement("div"),this.domElement.classList.add("controller"),this.domElement.classList.add(n),this.$name=document.createElement("div"),this.$name.classList.add("name"),x.nextNameID=x.nextNameID||0,this.$name.id="lil-gui-name-"+ ++x.nextNameID,this.$widget=document.createElement(r),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(e)}name(t){return this._name=t,this.$name.innerHTML=t,this}onChange(t){return this._onChange=t,this}_callOnChange(){this.parent._callOnChange(this),this._onChange!==void 0&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(t){return this._onFinishChange=t,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),this._onFinishChange!==void 0&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(t=!0){return this.disable(!t)}disable(t=!0){return t===this._disabled||(this._disabled=t,this.domElement.classList.toggle("disabled",t),this.$disable.toggleAttribute("disabled",t)),this}show(t=!0){return this._hidden=!t,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(t){const a=this.parent.add(this.object,this.property,t);return a.name(this._name),this.destroy(),a}min(t){return this}max(t){return this}step(t){return this}decimals(t){return this}listen(t=!0){return this._listening=t,this._listenCallbackID!==void 0&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const t=this.save();t!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=t}getValue(){return this.object[this.property]}setValue(t){return this.object[this.property]=t,this._callOnChange(),this.updateDisplay(),this}updateDisplay(){return this}load(t){return this.setValue(t),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class kt extends x{constructor(t,a,e){super(t,a,e,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",()=>{this.setValue(this.$input.checked),this._callOnFinishChange()}),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function z(l){let t,a;return(t=l.match(/(#|0x)?([a-f0-9]{6})/i))?a=t[2]:(t=l.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?a=parseInt(t[1]).toString(16).padStart(2,0)+parseInt(t[2]).toString(16).padStart(2,0)+parseInt(t[3]).toString(16).padStart(2,0):(t=l.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(a=t[1]+t[1]+t[2]+t[2]+t[3]+t[3]),!!a&&"#"+a}const $t={isPrimitive:!0,match:l=>typeof l=="string",fromHexString:z,toHexString:z},M={isPrimitive:!0,match:l=>typeof l=="number",fromHexString:l=>parseInt(l.substring(1),16),toHexString:l=>"#"+l.toString(16).padStart(6,0)},St={isPrimitive:!1,match:Array.isArray,fromHexString(l,t,a=1){const e=M.fromHexString(l);t[0]=(e>>16&255)/255*a,t[1]=(e>>8&255)/255*a,t[2]=(255&e)/255*a},toHexString:([l,t,a],e=1)=>M.toHexString(l*(e=255/e)<<16^t*e<<8^a*e<<0)},Bt={isPrimitive:!1,match:l=>Object(l)===l,fromHexString(l,t,a=1){const e=M.fromHexString(l);t.r=(e>>16&255)/255*a,t.g=(e>>8&255)/255*a,t.b=(255&e)/255*a},toHexString:({r:l,g:t,b:a},e=1)=>M.toHexString(l*(e=255/e)<<16^t*e<<8^a*e<<0)},Dt=[$t,M,St,Bt];class Lt extends x{constructor(t,a,e,n){var r;super(t,a,e,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=(r=this.initialValue,Dt.find(i=>i.match(r))),this._rgbScale=n,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",()=>{this._setValueFromHexString(this.$input.value)}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$text.addEventListener("input",()=>{const i=z(this.$text.value);i&&this._setValueFromHexString(i)}),this.$text.addEventListener("focus",()=>{this._textFocused=!0,this.$text.select()}),this.$text.addEventListener("blur",()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()}),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(t){if(this._format.isPrimitive){const a=this._format.fromHexString(t);this.setValue(a)}else this._format.fromHexString(t,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(t){return this._setValueFromHexString(t),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class O extends x{constructor(t,a,e){super(t,a,e,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",n=>{n.preventDefault(),this.getValue().call(this.object)}),this.$button.addEventListener("touchstart",()=>{},{passive:!0}),this.$disable=this.$button}}class Mt extends x{constructor(t,a,e,n,r,i){super(t,a,e,"number"),this._initInput(),this.min(n),this.max(r);const b=i!==void 0;this.step(b?i:this._getImplicitStep(),b),this.updateDisplay()}decimals(t){return this._decimals=t,this.updateDisplay(),this}min(t){return this._min=t,this._onUpdateMinMax(),this}max(t){return this._max=t,this._onUpdateMinMax(),this}step(t,a=!0){return this._step=t,this._stepExplicit=a,this}updateDisplay(){const t=this.getValue();if(this._hasSlider){let a=(t-this._min)/(this._max-this._min);a=Math.max(0,Math.min(a,1)),this.$fill.style.width=100*a+"%"}return this._inputFocused||(this.$input.value=this._decimals===void 0?t:t.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$disable=this.$input;const t=s=>{const m=parseFloat(this.$input.value);isNaN(m)||(this._snapClampSetValue(m+s),this.$input.value=this.getValue())};let a,e,n,r,i,b=!1;const h=s=>{if(b){const m=s.clientX-a,o=s.clientY-e;Math.abs(o)>5?(s.preventDefault(),this.$input.blur(),b=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(m)>5&&u()}if(!b){const m=s.clientY-n;i-=m*this._step*this._arrowKeyMultiplier(s),r+i>this._max?i=this._max-r:r+i<this._min&&(i=this._min-r),this._snapClampSetValue(r+i)}n=s.clientY},u=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",h),window.removeEventListener("mouseup",u)};this.$input.addEventListener("input",()=>{let s=parseFloat(this.$input.value);isNaN(s)||(this._stepExplicit&&(s=this._snap(s)),this.setValue(this._clamp(s)))}),this.$input.addEventListener("keydown",s=>{s.code==="Enter"&&this.$input.blur(),s.code==="ArrowUp"&&(s.preventDefault(),t(this._step*this._arrowKeyMultiplier(s))),s.code==="ArrowDown"&&(s.preventDefault(),t(this._step*this._arrowKeyMultiplier(s)*-1))}),this.$input.addEventListener("wheel",s=>{this._inputFocused&&(s.preventDefault(),t(this._step*this._normalizeMouseWheel(s)))},{passive:!1}),this.$input.addEventListener("mousedown",s=>{a=s.clientX,e=n=s.clientY,b=!0,r=this.getValue(),i=0,window.addEventListener("mousemove",h),window.addEventListener("mouseup",u)}),this.$input.addEventListener("focus",()=>{this._inputFocused=!0}),this.$input.addEventListener("blur",()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()})}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const t=o=>{const v=this.$slider.getBoundingClientRect();let g=(y=o,A=v.left,E=v.right,_=this._min,C=this._max,(y-A)/(E-A)*(C-_)+_);var y,A,E,_,C;this._snapClampSetValue(g)},a=o=>{t(o.clientX)},e=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",a),window.removeEventListener("mouseup",e)};let n,r,i=!1;const b=o=>{o.preventDefault(),this._setDraggingStyle(!0),t(o.touches[0].clientX),i=!1},h=o=>{if(i){const v=o.touches[0].clientX-n,g=o.touches[0].clientY-r;Math.abs(v)>Math.abs(g)?b(o):(window.removeEventListener("touchmove",h),window.removeEventListener("touchend",u))}else o.preventDefault(),t(o.touches[0].clientX)},u=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",h),window.removeEventListener("touchend",u)},s=this._callOnFinishChange.bind(this);let m;this.$slider.addEventListener("mousedown",o=>{this._setDraggingStyle(!0),t(o.clientX),window.addEventListener("mousemove",a),window.addEventListener("mouseup",e)}),this.$slider.addEventListener("touchstart",o=>{o.touches.length>1||(this._hasScrollBar?(n=o.touches[0].clientX,r=o.touches[0].clientY,i=!0):b(o),window.addEventListener("touchmove",h,{passive:!1}),window.addEventListener("touchend",u))},{passive:!1}),this.$slider.addEventListener("wheel",o=>{if(Math.abs(o.deltaX)<Math.abs(o.deltaY)&&this._hasScrollBar)return;o.preventDefault();const v=this._normalizeMouseWheel(o)*this._step;this._snapClampSetValue(this.getValue()+v),this.$input.value=this.getValue(),clearTimeout(m),m=setTimeout(s,400)},{passive:!1})}_setDraggingStyle(t,a="horizontal"){this.$slider&&this.$slider.classList.toggle("active",t),document.body.classList.toggle("lil-gui-dragging",t),document.body.classList.toggle("lil-gui-"+a,t)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(t){let{deltaX:a,deltaY:e}=t;return Math.floor(t.deltaY)!==t.deltaY&&t.wheelDelta&&(a=0,e=-t.wheelDelta/120,e*=this._stepExplicit?1:10),a+-e}_arrowKeyMultiplier(t){let a=this._stepExplicit?1:10;return t.shiftKey?a*=10:t.altKey&&(a/=10),a}_snap(t){const a=Math.round(t/this._step)*this._step;return parseFloat(a.toPrecision(15))}_clamp(t){return t<this._min&&(t=this._min),t>this._max&&(t=this._max),t}_snapClampSetValue(t){this.setValue(this._clamp(this._snap(t)))}get _hasScrollBar(){const t=this.parent.root.$children;return t.scrollHeight>t.clientHeight}get _hasMin(){return this._min!==void 0}get _hasMax(){return this._max!==void 0}}class jt extends x{constructor(t,a,e,n){super(t,a,e,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this._values=Array.isArray(n)?n:Object.values(n),this._names=Array.isArray(n)?n:Object.keys(n),this._names.forEach(r=>{const i=document.createElement("option");i.innerHTML=r,this.$select.appendChild(i)}),this.$select.addEventListener("change",()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()}),this.$select.addEventListener("focus",()=>{this.$display.classList.add("focus")}),this.$select.addEventListener("blur",()=>{this.$display.classList.remove("focus")}),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.updateDisplay()}updateDisplay(){const t=this.getValue(),a=this._values.indexOf(t);return this.$select.selectedIndex=a,this.$display.innerHTML=a===-1?t:this._names[a],this}}class Tt extends x{constructor(t,a,e){super(t,a,e,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",()=>{this.setValue(this.$input.value)}),this.$input.addEventListener("keydown",n=>{n.code==="Enter"&&this.$input.blur()}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}let J=!1;class H{constructor({parent:t,autoPlace:a=t===void 0,container:e,width:n,title:r="Controls",injectStyles:i=!0,touchStyles:b=!0}={}){if(this.parent=t,this.root=t?t.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("div"),this.$title.classList.add("title"),this.$title.setAttribute("role","button"),this.$title.setAttribute("aria-expanded",!0),this.$title.setAttribute("tabindex",0),this.$title.addEventListener("click",()=>this.openAnimated(this._closed)),this.$title.addEventListener("keydown",h=>{h.code!=="Enter"&&h.code!=="Space"||(h.preventDefault(),this.$title.click())}),this.$title.addEventListener("touchstart",()=>{},{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(r),b&&this.domElement.classList.add("allow-touch-styles"),this.parent)return this.parent.children.push(this),this.parent.folders.push(this),void this.parent.$children.appendChild(this.domElement);this.domElement.classList.add("root"),!J&&i&&(function(h){const u=document.createElement("style");u.innerHTML=h;const s=document.querySelector("head link[rel=stylesheet], head style");s?document.head.insertBefore(u,s):document.head.appendChild(u)}('.lil-gui{--background-color:#1f1f1f;--text-color:#ebebeb;--title-background-color:#111;--title-text-color:#ebebeb;--widget-color:#424242;--hover-color:#4f4f4f;--focus-color:#595959;--number-color:#2cc9ff;--string-color:#a2db3c;--font-size:11px;--input-font-size:11px;--font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Arial,sans-serif;--font-family-mono:Menlo,Monaco,Consolas,"Droid Sans Mono",monospace;--padding:4px;--spacing:4px;--widget-height:20px;--name-width:45%;--slider-knob-width:2px;--slider-input-width:27%;--color-input-width:27%;--slider-input-min-width:45px;--color-input-min-width:45px;--folder-indent:7px;--widget-padding:0 0 0 3px;--widget-border-radius:2px;--checkbox-size:calc(var(--widget-height)*0.75);--scrollbar-width:5px;background-color:var(--background-color);color:var(--text-color);font-family:var(--font-family);font-size:var(--font-size);font-style:normal;font-weight:400;line-height:1;text-align:left;touch-action:manipulation;user-select:none;-webkit-user-select:none}.lil-gui,.lil-gui *{box-sizing:border-box;margin:0;padding:0}.lil-gui.root{display:flex;flex-direction:column;width:var(--width,245px)}.lil-gui.root>.title{background:var(--title-background-color);color:var(--title-text-color)}.lil-gui.root>.children{overflow-x:hidden;overflow-y:auto}.lil-gui.root>.children::-webkit-scrollbar{background:var(--background-color);height:var(--scrollbar-width);width:var(--scrollbar-width)}.lil-gui.root>.children::-webkit-scrollbar-thumb{background:var(--focus-color);border-radius:var(--scrollbar-width)}.lil-gui.force-touch-styles{--widget-height:28px;--padding:6px;--spacing:6px;--font-size:13px;--input-font-size:16px;--folder-indent:10px;--scrollbar-width:7px;--slider-input-min-width:50px;--color-input-min-width:65px}.lil-gui.autoPlace{max-height:100%;position:fixed;right:15px;top:0;z-index:1001}.lil-gui .controller{align-items:center;display:flex;margin:var(--spacing) 0;padding:0 var(--padding)}.lil-gui .controller.disabled{opacity:.5}.lil-gui .controller.disabled,.lil-gui .controller.disabled *{pointer-events:none!important}.lil-gui .controller>.name{flex-shrink:0;line-height:var(--widget-height);min-width:var(--name-width);padding-right:var(--spacing);white-space:pre}.lil-gui .controller .widget{align-items:center;display:flex;min-height:var(--widget-height);position:relative;width:100%}.lil-gui .controller.string input{color:var(--string-color)}.lil-gui .controller.boolean .widget{cursor:pointer}.lil-gui .controller.color .display{border-radius:var(--widget-border-radius);height:var(--widget-height);position:relative;width:100%}.lil-gui .controller.color input[type=color]{cursor:pointer;height:100%;opacity:0;width:100%}.lil-gui .controller.color input[type=text]{flex-shrink:0;font-family:var(--font-family-mono);margin-left:var(--spacing);min-width:var(--color-input-min-width);width:var(--color-input-width)}.lil-gui .controller.option select{max-width:100%;opacity:0;position:absolute;width:100%}.lil-gui .controller.option .display{background:var(--widget-color);border-radius:var(--widget-border-radius);height:var(--widget-height);line-height:var(--widget-height);max-width:100%;overflow:hidden;padding-left:.55em;padding-right:1.75em;pointer-events:none;position:relative;word-break:break-all}.lil-gui .controller.option .display.active{background:var(--focus-color)}.lil-gui .controller.option .display:after{bottom:0;content:"↕";font-family:lil-gui;padding-right:.375em;position:absolute;right:0;top:0}.lil-gui .controller.option .widget,.lil-gui .controller.option select{cursor:pointer}.lil-gui .controller.number input{color:var(--number-color)}.lil-gui .controller.number.hasSlider input{flex-shrink:0;margin-left:var(--spacing);min-width:var(--slider-input-min-width);width:var(--slider-input-width)}.lil-gui .controller.number .slider{background-color:var(--widget-color);border-radius:var(--widget-border-radius);cursor:ew-resize;height:var(--widget-height);overflow:hidden;padding-right:var(--slider-knob-width);touch-action:pan-y;width:100%}.lil-gui .controller.number .slider.active{background-color:var(--focus-color)}.lil-gui .controller.number .slider.active .fill{opacity:.95}.lil-gui .controller.number .fill{border-right:var(--slider-knob-width) solid var(--number-color);box-sizing:content-box;height:100%}.lil-gui-dragging .lil-gui{--hover-color:var(--widget-color)}.lil-gui-dragging *{cursor:ew-resize!important}.lil-gui-dragging.lil-gui-vertical *{cursor:ns-resize!important}.lil-gui .title{--title-height:calc(var(--widget-height) + var(--spacing)*1.25);-webkit-tap-highlight-color:transparent;text-decoration-skip:objects;cursor:pointer;font-weight:600;height:var(--title-height);line-height:calc(var(--title-height) - 4px);outline:none;padding:0 var(--padding)}.lil-gui .title:before{content:"▾";display:inline-block;font-family:lil-gui;padding-right:2px}.lil-gui .title:active{background:var(--title-background-color);opacity:.75}.lil-gui.root>.title:focus{text-decoration:none!important}.lil-gui.closed>.title:before{content:"▸"}.lil-gui.closed>.children{opacity:0;transform:translateY(-7px)}.lil-gui.closed:not(.transition)>.children{display:none}.lil-gui.transition>.children{overflow:hidden;pointer-events:none;transition-duration:.3s;transition-property:height,opacity,transform;transition-timing-function:cubic-bezier(.2,.6,.35,1)}.lil-gui .children:empty:before{content:"Empty";display:block;font-style:italic;height:var(--widget-height);line-height:var(--widget-height);margin:var(--spacing) 0;opacity:.5;padding:0 var(--padding)}.lil-gui.root>.children>.lil-gui>.title{border-width:0;border-bottom:1px solid var(--widget-color);border-left:0 solid var(--widget-color);border-right:0 solid var(--widget-color);border-top:1px solid var(--widget-color);transition:border-color .3s}.lil-gui.root>.children>.lil-gui.closed>.title{border-bottom-color:transparent}.lil-gui+.controller{border-top:1px solid var(--widget-color);margin-top:0;padding-top:var(--spacing)}.lil-gui .lil-gui .lil-gui>.title{border:none}.lil-gui .lil-gui .lil-gui>.children{border:none;border-left:2px solid var(--widget-color);margin-left:var(--folder-indent)}.lil-gui .lil-gui .controller{border:none}.lil-gui input{-webkit-tap-highlight-color:transparent;background:var(--widget-color);border:0;border-radius:var(--widget-border-radius);color:var(--text-color);font-family:var(--font-family);font-size:var(--input-font-size);height:var(--widget-height);outline:none;width:100%}.lil-gui input:disabled{opacity:1}.lil-gui input[type=number],.lil-gui input[type=text]{padding:var(--widget-padding)}.lil-gui input[type=number]:focus,.lil-gui input[type=text]:focus{background:var(--focus-color)}.lil-gui input::-webkit-inner-spin-button,.lil-gui input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.lil-gui input[type=number]{-moz-appearance:textfield}.lil-gui input[type=checkbox]{appearance:none;-webkit-appearance:none;border-radius:var(--widget-border-radius);cursor:pointer;height:var(--checkbox-size);text-align:center;width:var(--checkbox-size)}.lil-gui input[type=checkbox]:checked:before{content:"✓";font-family:lil-gui;font-size:var(--checkbox-size);line-height:var(--checkbox-size)}.lil-gui button{-webkit-tap-highlight-color:transparent;background:var(--widget-color);border:1px solid var(--widget-color);border-radius:var(--widget-border-radius);color:var(--text-color);cursor:pointer;font-family:var(--font-family);font-size:var(--font-size);height:var(--widget-height);line-height:calc(var(--widget-height) - 4px);outline:none;text-align:center;text-transform:none;width:100%}.lil-gui button:active{background:var(--focus-color)}@font-face{font-family:lil-gui;src:url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff")}@media (pointer:coarse){.lil-gui.allow-touch-styles{--widget-height:28px;--padding:6px;--spacing:6px;--font-size:13px;--input-font-size:16px;--folder-indent:10px;--scrollbar-width:7px;--slider-input-min-width:50px;--color-input-min-width:65px}}@media (hover:hover){.lil-gui .controller.color .display:hover:before{border:1px solid #fff9;border-radius:var(--widget-border-radius);bottom:0;content:" ";display:block;left:0;position:absolute;right:0;top:0}.lil-gui .controller.option .display.focus{background:var(--focus-color)}.lil-gui .controller.option .widget:hover .display{background:var(--hover-color)}.lil-gui .controller.number .slider:hover{background-color:var(--hover-color)}body:not(.lil-gui-dragging) .lil-gui .title:hover{background:var(--title-background-color);opacity:.85}.lil-gui .title:focus{text-decoration:underline var(--focus-color)}.lil-gui input:hover{background:var(--hover-color)}.lil-gui input:active{background:var(--focus-color)}.lil-gui input[type=checkbox]:focus{box-shadow:inset 0 0 0 1px var(--focus-color)}.lil-gui button:hover{background:var(--hover-color);border-color:var(--hover-color)}.lil-gui button:focus{border-color:var(--focus-color)}}'),J=!0),e?e.appendChild(this.domElement):a&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),n&&this.domElement.style.setProperty("--width",n+"px"),this.domElement.addEventListener("keydown",h=>h.stopPropagation()),this.domElement.addEventListener("keyup",h=>h.stopPropagation())}add(t,a,e,n,r){if(Object(e)===e)return new jt(this,t,a,e);const i=t[a];switch(typeof i){case"number":return new Mt(this,t,a,e,n,r);case"boolean":return new kt(this,t,a);case"string":return new Tt(this,t,a);case"function":return new O(this,t,a)}console.error(`gui.add failed
	property:`,a,`
	object:`,t,`
	value:`,i)}addColor(t,a,e=1){return new Lt(this,t,a,e)}addFolder(t){return new H({parent:this,title:t})}load(t,a=!0){return t.controllers&&this.controllers.forEach(e=>{e instanceof O||e._name in t.controllers&&e.load(t.controllers[e._name])}),a&&t.folders&&this.folders.forEach(e=>{e._title in t.folders&&e.load(t.folders[e._title])}),this}save(t=!0){const a={controllers:{},folders:{}};return this.controllers.forEach(e=>{if(!(e instanceof O)){if(e._name in a.controllers)throw new Error(`Cannot save GUI with duplicate property "${e._name}"`);a.controllers[e._name]=e.save()}}),t&&this.folders.forEach(e=>{if(e._title in a.folders)throw new Error(`Cannot save GUI with duplicate folder "${e._title}"`);a.folders[e._title]=e.save()}),a}open(t=!0){return this._closed=!t,this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}show(t=!0){return this._hidden=!t,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(t=!0){return this._closed=!t,this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame(()=>{const a=this.$children.clientHeight;this.$children.style.height=a+"px",this.domElement.classList.add("transition");const e=r=>{r.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",e))};this.$children.addEventListener("transitionend",e);const n=t?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!t),requestAnimationFrame(()=>{this.$children.style.height=n+"px"})}),this}title(t){return this._title=t,this.$title.innerHTML=t,this}reset(t=!0){return(t?this.controllersRecursive():this.controllers).forEach(a=>a.reset()),this}onChange(t){return this._onChange=t,this}_callOnChange(t){this.parent&&this.parent._callOnChange(t),this._onChange!==void 0&&this._onChange.call(this,{object:t.object,property:t.property,value:t.getValue(),controller:t})}onFinishChange(t){return this._onFinishChange=t,this}_callOnFinishChange(t){this.parent&&this.parent._callOnFinishChange(t),this._onFinishChange!==void 0&&this._onFinishChange.call(this,{object:t.object,property:t.property,value:t.getValue(),controller:t})}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach(t=>t.destroy())}controllersRecursive(){let t=Array.from(this.controllers);return this.folders.forEach(a=>{t=t.concat(a.controllersRecursive())}),t}foldersRecursive(){let t=Array.from(this.folders);return this.folders.forEach(a=>{t=t.concat(a.foldersRecursive())}),t}}const Ht={__name:"threejs-bone-animation.html",setup(l,{expose:t}){t();let a;const e=G(),n=()=>{let i,b,h,u,s,m,o;const v=[];let g,y,A,E,_,C,S,c,B=!1,V=0;N();function N(){h=new vt(45,2,1,1e3),h.position.set(1,2,-3),h.lookAt(0,1,0),o=new Ct,i=new bt,i.background=new ut(10526880),i.fog=new mt(10526880,10,50);const d=new gt(16777215,4473924);d.position.set(0,20,0),i.add(d);const p=new Ft(16777215);p.position.set(-3,10,-10),p.castShadow=!0,p.shadow.camera.top=2,p.shadow.camera.bottom=-2,p.shadow.camera.left=-2,p.shadow.camera.right=2,p.shadow.camera.near=.1,p.shadow.camera.far=40,i.add(p);const F=new yt(new ft(100,100),new At({color:10066329,depthWrite:!1}));F.rotation.x=-Math.PI/2,F.receiveShadow=!0,i.add(F),new Y().load("./assets/models/Soldier.glb",function(f){u=f.scene,i.add(u),u.traverse(function(D){D.isMesh&&(D.castShadow=!0)}),s=new wt(u),s.visible=!1,i.add(s),q();const k=f.animations;m=new xt(u),g=m.clipAction(k[0]),y=m.clipAction(k[3]),A=m.clipAction(k[1]),S=[g,y,A],P(),W()}),b=new _t({antialias:!0}),b.setPixelRatio(window.devicePixelRatio),b.setSize(e.value.offsetWidth,e.value.offsetWidth/2),b.outputEncoding=void 0,b.shadowMap.enabled=!0,e.value.appendChild(b.domElement),window.addEventListener("resize",nt)}function q(){const d=new H({width:310});e.value.appendChild(d.domElement),d.domElement.style.position="absolute",d.domElement.style.right=0,d.domElement.style.top=0,d.domElement.style.bottom=0;const p=d.addFolder("Visibility"),F=d.addFolder("Activation/Deactivation"),w=d.addFolder("Pausing/Stepping"),f=d.addFolder("Crossfading"),k=d.addFolder("Blend Weights"),D=d.addFolder("General Speed");c={"show model":!0,"show skeleton":!1,"deactivate all":Z,"activate all":P,"pause/continue":Q,"make single step":at,"modify step size":.05,"from walk to idle":function(){T(y,g,1)},"from idle to walk":function(){T(g,y,.5)},"from walk to run":function(){T(y,A,2.5)},"from run to walk":function(){T(A,y,5)},"use default duration":!0,"set custom duration":3.5,"modify idle weight":0,"modify walk weight":1,"modify run weight":0,"modify time scale":1},p.add(c,"show model").onChange(X),p.add(c,"show skeleton").onChange(K),F.add(c,"deactivate all"),F.add(c,"activate all"),w.add(c,"pause/continue"),w.add(c,"make single step"),w.add(c,"modify step size",.01,.1,.001),v.push(f.add(c,"from walk to idle")),v.push(f.add(c,"from idle to walk")),v.push(f.add(c,"from walk to run")),v.push(f.add(c,"from run to walk")),f.add(c,"use default duration"),f.add(c,"set custom duration",0,10,.01),k.add(c,"modify idle weight",0,1,.01).listen().onChange(function(L){$(g,L)}),k.add(c,"modify walk weight",0,1,.01).listen().onChange(function(L){$(y,L)}),k.add(c,"modify run weight",0,1,.01).listen().onChange(function(L){$(A,L)}),D.add(c,"modify time scale",0,1.5,.01).onChange(U),p.open(),F.open(),w.open(),f.open(),k.open(),D.open()}function X(d){u.visible=d}function K(d){s.visible=d}function U(d){m.timeScale=d}function Z(){S.forEach(function(d){d.stop()})}function P(){$(g,c["modify idle weight"]),$(y,c["modify walk weight"]),$(A,c["modify run weight"]),S.forEach(function(d){d.play()})}function Q(){B?(B=!1,j()):g.paused?j():tt()}function tt(){S.forEach(function(d){d.paused=!0})}function j(){S.forEach(function(d){d.paused=!1})}function at(){j(),B=!0,V=c["modify step size"]}function T(d,p,F){const w=et(F);B=!1,j(),d===g?I(d,p,w):dt(d,p,w)}function et(d){return c["use default duration"]?d:c["set custom duration"]}function dt(d,p,F){m.addEventListener("loop",w);function w(f){f.action===d&&(m.removeEventListener("loop",w),I(d,p,F))}}function I(d,p,F){$(p,1),p.time=0,d.crossFadeTo(p,F,!0)}function $(d,p){d.enabled=!0,d.setEffectiveTimeScale(1),d.setEffectiveWeight(p)}function it(){c["modify idle weight"]=E,c["modify walk weight"]=_,c["modify run weight"]=C}function st(){E===1&&_===0&&C===0&&(v[0].disable(),v[1].enable(),v[2].disable(),v[3].disable()),E===0&&_===1&&C===0&&(v[0].enable(),v[1].disable(),v[2].enable(),v[3].disable()),E===0&&_===0&&C===1&&(v[0].disable(),v[1].disable(),v[2].disable(),v[3].enable())}function nt(){h.aspect=window.innerWidth/window.innerHeight,h.updateProjectionMatrix(),b.setSize(window.innerWidth,window.innerHeight)}function W(){requestAnimationFrame(W),E=g.getEffectiveWeight(),_=y.getEffectiveWeight(),C=A.getEffectiveWeight(),it(),st();let d=o.getDelta();B&&(d=V,V=0),m.update(d),b.render(i,h)}};R(async()=>{a=await pt(()=>import("./dat.gui.module-DNo137I2.js"),[]),n()});const r={get dat(){return a},set dat(i){a=i},blendingRef:e,initBlending:n,ref:G,onMounted:R,get THREE(){return Et},get GLTFLoader(){return Y},get GUI(){return H}};return Object.defineProperty(r,"__isScriptSetup",{enumerable:!1,value:!0}),r}},Vt={ref:"blendingRef",class:"relative"};function Ot(l,t,a,e,n,r){return ht(),ot("div",null,[t[0]||(t[0]=rt(`<h2 id="动画类型" tabindex="-1" data-v-6d4b945d><a class="header-anchor" href="#动画类型" data-v-6d4b945d><span data-v-6d4b945d>动画类型</span></a></h2><table data-v-6d4b945d><thead data-v-6d4b945d><tr data-v-6d4b945d><th data-v-6d4b945d>动画类型</th><th data-v-6d4b945d>描述</th></tr></thead><tbody data-v-6d4b945d><tr data-v-6d4b945d><td data-v-6d4b945d>帧动画 (Frame Animation)</td><td data-v-6d4b945d>将一系列图片按照顺序播放，形成动画效果，类似于传统手绘动画。</td></tr><tr data-v-6d4b945d><td data-v-6d4b945d>逐帧动画 (Sprite Animation)</td><td data-v-6d4b945d>通过改变精灵纹理的位置或贴图来模拟运动，常用于游戏中的人物、道具等的动画效果。</td></tr><tr data-v-6d4b945d><td data-v-6d4b945d>骨骼动画 (Skeletal Animation)</td><td data-v-6d4b945d>通过骨骼的动画变化来模拟角色的运动，将角色的形态分解成多个骨骼，并通过调整骨骼的变换来实现动画效果。</td></tr><tr data-v-6d4b945d><td data-v-6d4b945d>形状关键帧动画 (Morph Target Animation)</td><td data-v-6d4b945d>通过调整网格顶点的位置、法线和颜色等属性，来模拟物体的形变和运动，比如角色的面部表情、物体的形变等。</td></tr><tr data-v-6d4b945d><td data-v-6d4b945d>粒子动画 (Particle Animation)</td><td data-v-6d4b945d>通过控制一组小粒子的运动轨迹、大小、透明度等属性，来模拟各种自然现象，比如烟雾、火花、雨滴等。</td></tr><tr data-v-6d4b945d><td data-v-6d4b945d>基于物理引擎的动画 (Physics-based Animation)</td><td data-v-6d4b945d>通过物理引擎模拟物体的运动、碰撞、重力、弹性等物理特性，来实现更加真实的动画效果，常用于游戏中的角色、物体等。</td></tr></tbody></table><h2 id="threejs-中的动画类" tabindex="-1" data-v-6d4b945d><a class="header-anchor" href="#threejs-中的动画类" data-v-6d4b945d><span data-v-6d4b945d>ThreeJS 中的动画类</span></a></h2><ol data-v-6d4b945d><li data-v-6d4b945d><p data-v-6d4b945d><code data-v-6d4b945d>AnimationMixer</code></p><ul data-v-6d4b945d><li data-v-6d4b945d><p data-v-6d4b945d>使用格式：<code data-v-6d4b945d>const mixer = new AnimationMixer( object : Object3D )</code></p></li><li data-v-6d4b945d><p data-v-6d4b945d>功能：管理和混合场景中的动画数据。</p></li><li data-v-6d4b945d><p data-v-6d4b945d>参数说明：</p><ul data-v-6d4b945d><li data-v-6d4b945d><code data-v-6d4b945d>object</code>：要添加动画数据的 <code data-v-6d4b945d>Object3D</code> 对象。</li></ul></li><li data-v-6d4b945d><p data-v-6d4b945d>示例：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-6d4b945d><pre class="shiki dracula vp-code" data-v-6d4b945d><code data-v-6d4b945d><span class="line" data-v-6d4b945d><span style="color:#FF79C6;" data-v-6d4b945d>const</span><span style="color:#F8F8F2;" data-v-6d4b945d> mixer </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-6d4b945d> new</span><span style="color:#BD93F9;" data-v-6d4b945d> THREE</span><span style="color:#F8F8F2;" data-v-6d4b945d>.</span><span style="color:#50FA7B;" data-v-6d4b945d>AnimationMixer</span><span style="color:#F8F8F2;" data-v-6d4b945d>(mesh);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-6d4b945d><div class="line-number" data-v-6d4b945d></div></div></div></li></ul></li><li data-v-6d4b945d><p data-v-6d4b945d><code data-v-6d4b945d>AnimationClip</code></p><ul data-v-6d4b945d><li data-v-6d4b945d><p data-v-6d4b945d>使用格式：<code data-v-6d4b945d>AnimationClip( name : String, duration : Number, tracks : Array )</code></p></li><li data-v-6d4b945d><p data-v-6d4b945d>功能：表示一个包含一组 <code data-v-6d4b945d>AnimationTrack</code> 的动画片段。</p></li><li data-v-6d4b945d><p data-v-6d4b945d>参数说明：</p><ul data-v-6d4b945d><li data-v-6d4b945d><code data-v-6d4b945d>name</code>：动画片段的名称。</li><li data-v-6d4b945d><code data-v-6d4b945d>duration</code>：动画片段的持续时间（秒）。</li><li data-v-6d4b945d><code data-v-6d4b945d>tracks</code>：包含 <code data-v-6d4b945d>AnimationTrack</code> 对象的数组。</li></ul></li><li data-v-6d4b945d><p data-v-6d4b945d>示例：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-6d4b945d><pre class="shiki dracula vp-code" data-v-6d4b945d><code data-v-6d4b945d><span class="line" data-v-6d4b945d><span style="color:#FF79C6;" data-v-6d4b945d>const</span><span style="color:#F8F8F2;" data-v-6d4b945d> clip </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#BD93F9;" data-v-6d4b945d> THREE</span><span style="color:#F8F8F2;" data-v-6d4b945d>.AnimationClip.</span><span style="color:#50FA7B;" data-v-6d4b945d>CreateFromMorphTargetSequence</span><span style="color:#F8F8F2;" data-v-6d4b945d>(</span></span>
<span class="line" data-v-6d4b945d><span style="color:#E9F284;" data-v-6d4b945d>  &quot;</span><span style="color:#F1FA8C;" data-v-6d4b945d>morph</span><span style="color:#E9F284;" data-v-6d4b945d>&quot;</span><span style="color:#F8F8F2;" data-v-6d4b945d>,</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  geometry.morphAttributes.position,</span></span>
<span class="line" data-v-6d4b945d><span style="color:#BD93F9;" data-v-6d4b945d>  30</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-6d4b945d><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div></div></div></li></ul></li><li data-v-6d4b945d><p data-v-6d4b945d><code data-v-6d4b945d>AnimationAction</code></p><ul data-v-6d4b945d><li data-v-6d4b945d><p data-v-6d4b945d>使用格式：<code data-v-6d4b945d>AnimationAction( mixer : AnimationMixer, clip : AnimationClip, localRoot : Object3D )</code></p></li><li data-v-6d4b945d><p data-v-6d4b945d>功能：表示一个 <code data-v-6d4b945d>AnimationClip</code> 在 <code data-v-6d4b945d>AnimationMixer</code> 中的播放实例。</p></li><li data-v-6d4b945d><p data-v-6d4b945d>参数说明：</p><ul data-v-6d4b945d><li data-v-6d4b945d><code data-v-6d4b945d>mixer</code>：<code data-v-6d4b945d>AnimationMixer</code> 对象。</li><li data-v-6d4b945d><code data-v-6d4b945d>clip</code>：<code data-v-6d4b945d>AnimationClip</code> 对象。</li><li data-v-6d4b945d><code data-v-6d4b945d>localRoot</code>：本地根对象，动画中的对象将相对于此对象移动。</li></ul></li><li data-v-6d4b945d><p data-v-6d4b945d>示例：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-6d4b945d><pre class="shiki dracula vp-code" data-v-6d4b945d><code data-v-6d4b945d><span class="line" data-v-6d4b945d><span style="color:#FF79C6;" data-v-6d4b945d>const</span><span style="color:#F8F8F2;" data-v-6d4b945d> action </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#F8F8F2;" data-v-6d4b945d> mixer.</span><span style="color:#50FA7B;" data-v-6d4b945d>clipAction</span><span style="color:#F8F8F2;" data-v-6d4b945d>(clip);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-6d4b945d><div class="line-number" data-v-6d4b945d></div></div></div></li></ul></li><li data-v-6d4b945d><p data-v-6d4b945d><code data-v-6d4b945d>AnimationObjectGroup</code></p><ul data-v-6d4b945d><li data-v-6d4b945d><p data-v-6d4b945d>使用格式：<code data-v-6d4b945d>AnimationObjectGroup( ...objects : Object3D[] )</code></p></li><li data-v-6d4b945d><p data-v-6d4b945d>功能：管理多个对象的动画。</p></li><li data-v-6d4b945d><p data-v-6d4b945d>参数说明：</p><ul data-v-6d4b945d><li data-v-6d4b945d><code data-v-6d4b945d>objects</code>：要添加到 <code data-v-6d4b945d>AnimationObjectGroup</code> 的 <code data-v-6d4b945d>Object3D</code> 对象。</li></ul></li><li data-v-6d4b945d><p data-v-6d4b945d>示例：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-6d4b945d><pre class="shiki dracula vp-code" data-v-6d4b945d><code data-v-6d4b945d><span class="line" data-v-6d4b945d><span style="color:#FF79C6;" data-v-6d4b945d>const</span><span style="color:#F8F8F2;" data-v-6d4b945d> group </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-6d4b945d> new</span><span style="color:#BD93F9;" data-v-6d4b945d> THREE</span><span style="color:#F8F8F2;" data-v-6d4b945d>.</span><span style="color:#50FA7B;" data-v-6d4b945d>AnimationObjectGroup</span><span style="color:#F8F8F2;" data-v-6d4b945d>(mesh1, mesh2);</span></span>
<span class="line" data-v-6d4b945d><span style="color:#FF79C6;" data-v-6d4b945d>const</span><span style="color:#F8F8F2;" data-v-6d4b945d> clip </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#BD93F9;" data-v-6d4b945d> THREE</span><span style="color:#F8F8F2;" data-v-6d4b945d>.AnimationClip.</span><span style="color:#50FA7B;" data-v-6d4b945d>CreateFromAction</span><span style="color:#F8F8F2;" data-v-6d4b945d>(animationAction);</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>clip.tracks.</span><span style="color:#50FA7B;" data-v-6d4b945d>shift</span><span style="color:#F8F8F2;" data-v-6d4b945d>(); </span><span style="color:#6272A4;" data-v-6d4b945d>// 移除第一条跟踪轨迹</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>group.</span><span style="color:#50FA7B;" data-v-6d4b945d>clipAction</span><span style="color:#F8F8F2;" data-v-6d4b945d>(clip).</span><span style="color:#50FA7B;" data-v-6d4b945d>play</span><span style="color:#F8F8F2;" data-v-6d4b945d>(); </span><span style="color:#6272A4;" data-v-6d4b945d>// 播放动画</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-6d4b945d><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div></div></div></li></ul></li><li data-v-6d4b945d><p data-v-6d4b945d><code data-v-6d4b945d>KeyframeTrack</code></p><ul data-v-6d4b945d><li data-v-6d4b945d><p data-v-6d4b945d>使用格式：<code data-v-6d4b945d>KeyframeTrack( name : String, times : Array, values : Array, interpolation : InterpolationModes )</code></p></li><li data-v-6d4b945d><p data-v-6d4b945d>功能：表示动画的关键帧序列。</p></li><li data-v-6d4b945d><p data-v-6d4b945d>参数说明：</p><ul data-v-6d4b945d><li data-v-6d4b945d><code data-v-6d4b945d>name</code>：关键帧序列的名称。</li><li data-v-6d4b945d><code data-v-6d4b945d>times</code>：关键帧时间的数组。</li><li data-v-6d4b945d><code data-v-6d4b945d>values</code>：与关键帧相关联的值的数组。</li><li data-v-6d4b945d><code data-v-6d4b945d>interpolation</code>：插值模式，默认为 <code data-v-6d4b945d>THREE.InterpolateLinear</code>。</li></ul></li><li data-v-6d4b945d><p data-v-6d4b945d>示例：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-6d4b945d><pre class="shiki dracula vp-code" data-v-6d4b945d><code data-v-6d4b945d><span class="line" data-v-6d4b945d><span style="color:#FF79C6;" data-v-6d4b945d>const</span><span style="color:#F8F8F2;" data-v-6d4b945d> times </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#F8F8F2;" data-v-6d4b945d> [</span><span style="color:#BD93F9;" data-v-6d4b945d>0</span><span style="color:#F8F8F2;" data-v-6d4b945d>, </span><span style="color:#BD93F9;" data-v-6d4b945d>1</span><span style="color:#F8F8F2;" data-v-6d4b945d>, </span><span style="color:#BD93F9;" data-v-6d4b945d>2</span><span style="color:#F8F8F2;" data-v-6d4b945d>];</span></span>
<span class="line" data-v-6d4b945d><span style="color:#FF79C6;" data-v-6d4b945d>const</span><span style="color:#F8F8F2;" data-v-6d4b945d> values </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#F8F8F2;" data-v-6d4b945d> [</span><span style="color:#BD93F9;" data-v-6d4b945d>0</span><span style="color:#F8F8F2;" data-v-6d4b945d>, </span><span style="color:#BD93F9;" data-v-6d4b945d>1</span><span style="color:#F8F8F2;" data-v-6d4b945d>, </span><span style="color:#BD93F9;" data-v-6d4b945d>0</span><span style="color:#F8F8F2;" data-v-6d4b945d>];</span></span>
<span class="line" data-v-6d4b945d><span style="color:#FF79C6;" data-v-6d4b945d>const</span><span style="color:#F8F8F2;" data-v-6d4b945d> track </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-6d4b945d> new</span><span style="color:#BD93F9;" data-v-6d4b945d> THREE</span><span style="color:#F8F8F2;" data-v-6d4b945d>.</span><span style="color:#50FA7B;" data-v-6d4b945d>NumberKeyframeTrack</span><span style="color:#F8F8F2;" data-v-6d4b945d>(</span><span style="color:#E9F284;" data-v-6d4b945d>&quot;</span><span style="color:#F1FA8C;" data-v-6d4b945d>.opacity</span><span style="color:#E9F284;" data-v-6d4b945d>&quot;</span><span style="color:#F8F8F2;" data-v-6d4b945d>, times, values);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-6d4b945d><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div></div></div></li></ul></li></ol><p data-v-6d4b945d>动画的运行是通过 AnimationMixer 类实现的。当一个模型需要播放动画时，我们需要将模型的动画剪辑（AnimationClip）添加到 AnimationMixer 实例中，然后通过 mixer.clipAction() 方法获取一个动画动作（AnimationAction）实例，调用 play() 方法播放动画，AnimationAction 的更新又通过 AnimationMixer.update() 方法实现。</p><ul data-v-6d4b945d><li data-v-6d4b945d>创建动画剪辑（AnimationClip），并将其包含的动画轨迹（AnimationTrack）绑定到场景中的对象上。</li><li data-v-6d4b945d>创建动画混合器（AnimationMixer），并将动画剪辑添加到混合器中。</li><li data-v-6d4b945d>调用混合器的 update 方法，更新当前时间下各个对象的状态。</li><li data-v-6d4b945d>将更新后的状态应用到场景中的对象上，使动画动起来。</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-6d4b945d><pre class="shiki dracula vp-code" data-v-6d4b945d><code data-v-6d4b945d><span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>// 使用GLTFLoader加载模型</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>loader.</span><span style="color:#50FA7B;" data-v-6d4b945d>load</span><span style="color:#F8F8F2;" data-v-6d4b945d>(</span><span style="color:#E9F284;" data-v-6d4b945d>&quot;</span><span style="color:#F1FA8C;" data-v-6d4b945d>models/gltf/Soldier.glb</span><span style="color:#E9F284;" data-v-6d4b945d>&quot;</span><span style="color:#F8F8F2;" data-v-6d4b945d>, </span><span style="color:#FF79C6;" data-v-6d4b945d>function</span><span style="color:#F8F8F2;" data-v-6d4b945d> (</span><span style="color:#FFB86C;font-style:italic;" data-v-6d4b945d>gltf</span><span style="color:#F8F8F2;" data-v-6d4b945d>) {</span></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>  // 获取模型</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  model </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#F8F8F2;" data-v-6d4b945d> gltf.scene;</span></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>  // 将模型添加到场景中</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  scene.</span><span style="color:#50FA7B;" data-v-6d4b945d>add</span><span style="color:#F8F8F2;" data-v-6d4b945d>(model);</span></span>
<span class="line" data-v-6d4b945d></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>  // 遍历模型内的所有对象</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  model.</span><span style="color:#50FA7B;" data-v-6d4b945d>traverse</span><span style="color:#F8F8F2;" data-v-6d4b945d>(</span><span style="color:#FF79C6;" data-v-6d4b945d>function</span><span style="color:#F8F8F2;" data-v-6d4b945d> (</span><span style="color:#FFB86C;font-style:italic;" data-v-6d4b945d>object</span><span style="color:#F8F8F2;" data-v-6d4b945d>) {</span></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>    // 如果对象是网格，则开启阴影投射</span></span>
<span class="line" data-v-6d4b945d><span style="color:#FF79C6;" data-v-6d4b945d>    if</span><span style="color:#F8F8F2;" data-v-6d4b945d> (object.isMesh) object.castShadow </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#BD93F9;" data-v-6d4b945d> true</span><span style="color:#F8F8F2;" data-v-6d4b945d>;</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  });</span></span>
<span class="line" data-v-6d4b945d></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>  // 创建骨骼辅助对象，用于调试和查看骨骼结构</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  skeleton </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-6d4b945d> new</span><span style="color:#BD93F9;" data-v-6d4b945d> THREE</span><span style="color:#F8F8F2;" data-v-6d4b945d>.</span><span style="color:#50FA7B;" data-v-6d4b945d>SkeletonHelper</span><span style="color:#F8F8F2;" data-v-6d4b945d>(model);</span></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>  // 设置骨骼辅助对象为不可见</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  skeleton.visible </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#BD93F9;" data-v-6d4b945d> false</span><span style="color:#F8F8F2;" data-v-6d4b945d>;</span></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>  // 将骨骼辅助对象添加到场景中</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  scene.</span><span style="color:#50FA7B;" data-v-6d4b945d>add</span><span style="color:#F8F8F2;" data-v-6d4b945d>(skeleton);</span></span>
<span class="line" data-v-6d4b945d></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>  // 创建面板</span></span>
<span class="line" data-v-6d4b945d><span style="color:#50FA7B;" data-v-6d4b945d>  createPanel</span><span style="color:#F8F8F2;" data-v-6d4b945d>();</span></span>
<span class="line" data-v-6d4b945d></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>  // 获取模型的动画数组</span></span>
<span class="line" data-v-6d4b945d><span style="color:#FF79C6;" data-v-6d4b945d>  const</span><span style="color:#F8F8F2;" data-v-6d4b945d> animations </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#F8F8F2;" data-v-6d4b945d> gltf.animations;</span></span>
<span class="line" data-v-6d4b945d></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>  // 创建动画混合器</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  mixer </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-6d4b945d> new</span><span style="color:#BD93F9;" data-v-6d4b945d> THREE</span><span style="color:#F8F8F2;" data-v-6d4b945d>.</span><span style="color:#50FA7B;" data-v-6d4b945d>AnimationMixer</span><span style="color:#F8F8F2;" data-v-6d4b945d>(model);</span></span>
<span class="line" data-v-6d4b945d></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>  // 获取模型的不同动作，并将其加入动画混合器中</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  idleAction </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#F8F8F2;" data-v-6d4b945d> mixer.</span><span style="color:#50FA7B;" data-v-6d4b945d>clipAction</span><span style="color:#F8F8F2;" data-v-6d4b945d>(animations[</span><span style="color:#BD93F9;" data-v-6d4b945d>0</span><span style="color:#F8F8F2;" data-v-6d4b945d>]);</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  walkAction </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#F8F8F2;" data-v-6d4b945d> mixer.</span><span style="color:#50FA7B;" data-v-6d4b945d>clipAction</span><span style="color:#F8F8F2;" data-v-6d4b945d>(animations[</span><span style="color:#BD93F9;" data-v-6d4b945d>3</span><span style="color:#F8F8F2;" data-v-6d4b945d>]);</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  runAction </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#F8F8F2;" data-v-6d4b945d> mixer.</span><span style="color:#50FA7B;" data-v-6d4b945d>clipAction</span><span style="color:#F8F8F2;" data-v-6d4b945d>(animations[</span><span style="color:#BD93F9;" data-v-6d4b945d>1</span><span style="color:#F8F8F2;" data-v-6d4b945d>]);</span></span>
<span class="line" data-v-6d4b945d></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>  // 将不同动作保存在数组中</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  actions </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#F8F8F2;" data-v-6d4b945d> [idleAction, walkAction, runAction];</span></span>
<span class="line" data-v-6d4b945d></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>  // 激活所有动作</span></span>
<span class="line" data-v-6d4b945d><span style="color:#50FA7B;" data-v-6d4b945d>  activateAllActions</span><span style="color:#F8F8F2;" data-v-6d4b945d>();</span></span>
<span class="line" data-v-6d4b945d></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>  // 调用动画循环函数</span></span>
<span class="line" data-v-6d4b945d><span style="color:#50FA7B;" data-v-6d4b945d>  animate</span><span style="color:#F8F8F2;" data-v-6d4b945d>();</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>});</span></span>
<span class="line" data-v-6d4b945d></span>
<span class="line" data-v-6d4b945d><span style="color:#FF79C6;" data-v-6d4b945d>function</span><span style="color:#50FA7B;" data-v-6d4b945d> activateAllActions</span><span style="color:#F8F8F2;" data-v-6d4b945d>() {</span></span>
<span class="line" data-v-6d4b945d><span style="color:#50FA7B;" data-v-6d4b945d>  setWeight</span><span style="color:#F8F8F2;" data-v-6d4b945d>(idleAction, settings[</span><span style="color:#E9F284;" data-v-6d4b945d>&quot;</span><span style="color:#F1FA8C;" data-v-6d4b945d>modify idle weight</span><span style="color:#E9F284;" data-v-6d4b945d>&quot;</span><span style="color:#F8F8F2;" data-v-6d4b945d>]);</span></span>
<span class="line" data-v-6d4b945d><span style="color:#50FA7B;" data-v-6d4b945d>  setWeight</span><span style="color:#F8F8F2;" data-v-6d4b945d>(walkAction, settings[</span><span style="color:#E9F284;" data-v-6d4b945d>&quot;</span><span style="color:#F1FA8C;" data-v-6d4b945d>modify walk weight</span><span style="color:#E9F284;" data-v-6d4b945d>&quot;</span><span style="color:#F8F8F2;" data-v-6d4b945d>]);</span></span>
<span class="line" data-v-6d4b945d><span style="color:#50FA7B;" data-v-6d4b945d>  setWeight</span><span style="color:#F8F8F2;" data-v-6d4b945d>(runAction, settings[</span><span style="color:#E9F284;" data-v-6d4b945d>&quot;</span><span style="color:#F1FA8C;" data-v-6d4b945d>modify run weight</span><span style="color:#E9F284;" data-v-6d4b945d>&quot;</span><span style="color:#F8F8F2;" data-v-6d4b945d>]);</span></span>
<span class="line" data-v-6d4b945d></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  actions.</span><span style="color:#50FA7B;" data-v-6d4b945d>forEach</span><span style="color:#F8F8F2;" data-v-6d4b945d>(</span><span style="color:#FF79C6;" data-v-6d4b945d>function</span><span style="color:#F8F8F2;" data-v-6d4b945d> (</span><span style="color:#FFB86C;font-style:italic;" data-v-6d4b945d>action</span><span style="color:#F8F8F2;" data-v-6d4b945d>) {</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>    action.</span><span style="color:#50FA7B;" data-v-6d4b945d>play</span><span style="color:#F8F8F2;" data-v-6d4b945d>();</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  });</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>}</span></span>
<span class="line" data-v-6d4b945d></span>
<span class="line" data-v-6d4b945d><span style="color:#FF79C6;" data-v-6d4b945d>function</span><span style="color:#50FA7B;" data-v-6d4b945d> setWeight</span><span style="color:#F8F8F2;" data-v-6d4b945d>(</span><span style="color:#FFB86C;font-style:italic;" data-v-6d4b945d>action</span><span style="color:#F8F8F2;" data-v-6d4b945d>, </span><span style="color:#FFB86C;font-style:italic;" data-v-6d4b945d>weight</span><span style="color:#F8F8F2;" data-v-6d4b945d>) {</span></span>
<span class="line" data-v-6d4b945d><span style="color:#6272A4;" data-v-6d4b945d>  // 设置动画的权重值</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  action.enabled </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#BD93F9;" data-v-6d4b945d> true</span><span style="color:#F8F8F2;" data-v-6d4b945d>; </span><span style="color:#6272A4;" data-v-6d4b945d>// 启用当前动画</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  action.</span><span style="color:#50FA7B;" data-v-6d4b945d>setEffectiveTimeScale</span><span style="color:#F8F8F2;" data-v-6d4b945d>(</span><span style="color:#BD93F9;" data-v-6d4b945d>1</span><span style="color:#F8F8F2;" data-v-6d4b945d>); </span><span style="color:#6272A4;" data-v-6d4b945d>// 设置动画播放速度为正常速度</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>  action.</span><span style="color:#50FA7B;" data-v-6d4b945d>setEffectiveWeight</span><span style="color:#F8F8F2;" data-v-6d4b945d>(weight); </span><span style="color:#6272A4;" data-v-6d4b945d>// 设置动画权重值</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>}</span></span>
<span class="line" data-v-6d4b945d></span>
<span class="line" data-v-6d4b945d><span style="color:#FF79C6;" data-v-6d4b945d>function</span><span style="color:#50FA7B;" data-v-6d4b945d> animation</span><span style="color:#F8F8F2;" data-v-6d4b945d>(){</span></span>
<span class="line" data-v-6d4b945d><span style="color:#FF79C6;" data-v-6d4b945d> let</span><span style="color:#F8F8F2;" data-v-6d4b945d> mixerUpdateDelta </span><span style="color:#FF79C6;" data-v-6d4b945d>=</span><span style="color:#F8F8F2;" data-v-6d4b945d> clock.</span><span style="color:#50FA7B;" data-v-6d4b945d>getDelta</span><span style="color:#F8F8F2;" data-v-6d4b945d>();</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d> mixer.</span><span style="color:#50FA7B;" data-v-6d4b945d>update</span><span style="color:#F8F8F2;" data-v-6d4b945d>( mixerUpdateDelta );</span></span>
<span class="line" data-v-6d4b945d><span style="color:#F8F8F2;" data-v-6d4b945d>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-6d4b945d><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div><div class="line-number" data-v-6d4b945d></div></div></div>`,7)),ct("div",Vt,null,512)])}const Wt=lt(Ht,[["render",Ot],["__scopeId","data-v-6d4b945d"],["__file","threejs-bone-animation.html.vue"]]),Gt=JSON.parse('{"path":"/threejs/threejs-bone-animation.html","title":"ThreeJS中的动画","lang":"en-US","frontmatter":{"title":"ThreeJS中的动画","category":["ThreeJS"],"date":"2022-03-22T00:00:00.000Z","description":"动画类型 ThreeJS 中的动画类 AnimationMixer 使用格式：const mixer = new AnimationMixer( object : Object3D ) 功能：管理和混合场景中的动画数据。 参数说明： object：要添加动画数据的 Object3D 对象。 示例： AnimationClip 使用格式：Animatio...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/threejs/threejs-bone-animation.html"}],["meta",{"property":"og:title","content":"ThreeJS中的动画"}],["meta",{"property":"og:description","content":"动画类型 ThreeJS 中的动画类 AnimationMixer 使用格式：const mixer = new AnimationMixer( object : Object3D ) 功能：管理和混合场景中的动画数据。 参数说明： object：要添加动画数据的 Object3D 对象。 示例： AnimationClip 使用格式：Animatio..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-09T14:06:21.000Z"}],["meta",{"property":"article:published_time","content":"2022-03-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-09T14:06:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ThreeJS中的动画\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-22T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-09T14:06:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"git":{"createdTime":1681959670000,"updatedTime":1739109981000,"contributors":[{"name":"卢祥","username":"卢祥","email":"example@qq.com","commits":3,"url":"https://github.com/卢祥"},{"name":"luxiag","username":"luxiag","email":"luxiag@qq.com","commits":6,"url":"https://github.com/luxiag"}]},"readingTime":{"minutes":7.24,"words":2172},"filePathRelative":"threejs/threejs-bone-animation.md","localizedDate":"March 22, 2022","excerpt":"<h2>动画类型</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>动画类型</th>\\n<th>描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>帧动画 (Frame Animation)</td>\\n<td>将一系列图片按照顺序播放，形成动画效果，类似于传统手绘动画。</td>\\n</tr>\\n<tr>\\n<td>逐帧动画 (Sprite Animation)</td>\\n<td>通过改变精灵纹理的位置或贴图来模拟运动，常用于游戏中的人物、道具等的动画效果。</td>\\n</tr>\\n<tr>\\n<td>骨骼动画 (Skeletal Animation)</td>\\n<td>通过骨骼的动画变化来模拟角色的运动，将角色的形态分解成多个骨骼，并通过调整骨骼的变换来实现动画效果。</td>\\n</tr>\\n<tr>\\n<td>形状关键帧动画 (Morph Target Animation)</td>\\n<td>通过调整网格顶点的位置、法线和颜色等属性，来模拟物体的形变和运动，比如角色的面部表情、物体的形变等。</td>\\n</tr>\\n<tr>\\n<td>粒子动画 (Particle Animation)</td>\\n<td>通过控制一组小粒子的运动轨迹、大小、透明度等属性，来模拟各种自然现象，比如烟雾、火花、雨滴等。</td>\\n</tr>\\n<tr>\\n<td>基于物理引擎的动画 (Physics-based Animation)</td>\\n<td>通过物理引擎模拟物体的运动、碰撞、重力、弹性等物理特性，来实现更加真实的动画效果，常用于游戏中的角色、物体等。</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{Wt as comp,Gt as data};
