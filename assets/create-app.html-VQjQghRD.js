import{_ as n,e as a,h as l,o as e}from"./app-DPJYBgB6.js";const p={};function o(F,s){return e(),a("div",null,s[0]||(s[0]=[l(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> App </span><span style="color:#FF79C6;">from</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">./App.vue</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> createApp</span><span style="color:#F8F8F2;">(App)</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">mount</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">#app</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="createapp" tabindex="-1"><a class="header-anchor" href="#createapp"><span>createApp</span></a></h1><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#50FA7B;"> createApp</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> ({</span><span style="color:#FF79C6;">...</span><span style="color:#F8F8F2;">args} </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> ensureRenderer</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">crateApp</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">...</span><span style="color:#F8F8F2;">args)</span></span>
<span class="line"><span style="color:#6272A4;">  // ...</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> ensureRenderer</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#F8F8F2;">    renderer </span><span style="color:#FF79C6;">||</span></span>
<span class="line"><span style="color:#F8F8F2;">    (renderer </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> createRenderer</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">Node</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">Element</span><span style="color:#FF79C6;"> |</span><span style="color:#FFB86C;font-style:italic;"> ShadowRoot</span><span style="color:#F8F8F2;">&gt;(rendererOptions))</span></span>
<span class="line"><span style="color:#F8F8F2;">  )</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> createRender</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#50FA7B;"> baseCreateRenderer</span><span style="color:#F8F8F2;">(options)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> baseCreateRenderer</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#50FA7B;"> render</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">vnode</span><span style="color:#F8F8F2;">,</span><span style="color:#FFB86C;font-style:italic;">container</span><span style="color:#F8F8F2;">,</span><span style="color:#FFB86C;font-style:italic;">namespace</span><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (vnode </span><span style="color:#FF79C6;">==</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (container._vnode) {</span></span>
<span class="line"><span style="color:#50FA7B;">        unmount</span><span style="color:#F8F8F2;">(container._vnode, </span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">      patch</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">        container._vnode </span><span style="color:#FF79C6;">||</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        vnode,</span></span>
<span class="line"><span style="color:#F8F8F2;">        container,</span></span>
<span class="line"><span style="color:#BD93F9;">        null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#BD93F9;">        null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#BD93F9;">        null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        namespace,</span></span>
<span class="line"><span style="color:#F8F8F2;">      )</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    container._vnode </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> vnode</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">isFlushing) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      isFlushing </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span></span>
<span class="line"><span style="color:#50FA7B;">      flushPreFlushCbs</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#50FA7B;">      flushPostFlushCbs</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">      isFlushing </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> false</span></span>
<span class="line"><span style="color:#F8F8F2;">    }    </span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    render,</span></span>
<span class="line"><span style="color:#F8F8F2;">    hydrate,</span></span>
<span class="line"><span style="color:#F8F8F2;">    createApp</span><span style="color:#FF79C6;">:</span><span style="color:#50FA7B;"> createAppAPI</span><span style="color:#F8F8F2;">(render, hydrate)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> createAppAPI</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">render</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">hydrate</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> createApp</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">rootComponent</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">rootProps</span><span style="color:#FF79C6;"> =</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">      // 。。。</span></span>
<span class="line"><span style="color:#50FA7B;">      use</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">plugin</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">...</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#F8F8F2;">) {},</span></span>
<span class="line"><span style="color:#50FA7B;">      mixin</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">mixin</span><span style="color:#F8F8F2;">) {},</span></span>
<span class="line"><span style="color:#50FA7B;">      component</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">component</span><span style="color:#F8F8F2;">) {},</span></span>
<span class="line"><span style="color:#50FA7B;">      directive</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">directive</span><span style="color:#F8F8F2;">) {},</span></span>
<span class="line"><span style="color:#50FA7B;">      mount</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">rootContainer</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">isHydrate</span><span style="color:#FF79C6;"> =</span><span style="color:#BD93F9;"> false</span><span style="color:#F8F8F2;">) {},</span></span>
<span class="line"><span style="color:#50FA7B;">      unmount</span><span style="color:#F8F8F2;">() {},</span></span>
<span class="line"><span style="color:#50FA7B;">      provide</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">value</span><span style="color:#F8F8F2;">) {},</span></span>
<span class="line"><span style="color:#50FA7B;">      inject</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">defaultValue</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">treatDefaultAsProvided</span><span style="color:#FF79C6;"> =</span><span style="color:#BD93F9;"> false</span><span style="color:#F8F8F2;">) {}</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#F8F8F2;"> app</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="mount" tabindex="-1"><a class="header-anchor" href="#mount"><span>mount</span></a></h1><p><code>app.mount</code></p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> createApp </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> ((</span><span style="color:#FF79C6;">...</span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> ensureRenderer</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">crateApp</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">...</span><span style="color:#F8F8F2;">args)</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> {mount} </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> app</span></span>
<span class="line"><span style="color:#F8F8F2;">  app.</span><span style="color:#50FA7B;">mount</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">containerOrSelector</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;">Element</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> ShadowRoot</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> string</span><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;">any</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">    // normalizeContainer = document.querySelector(container)</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> container </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> normalizeContainer</span><span style="color:#F8F8F2;">(containerOrSelector)</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;">(container) {</span></span>
<span class="line"><span style="color:#FF79C6;">      return</span><span style="color:#50FA7B;"> mount</span><span style="color:#F8F8F2;">(container,</span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">,</span><span style="color:#50FA7B;">resolveRootNamespace</span><span style="color:#F8F8F2;">(container))</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> createAppAPI</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">HostElement</span><span style="color:#F8F8F2;">&gt;(</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  render</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RootRenderFunction</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">HostElement</span><span style="color:#F8F8F2;">&gt;,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  hydrate</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> RootHydrateFunction</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> CreateAppFunction</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">HostElement</span><span style="color:#F8F8F2;">&gt; {</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> createApp</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">rootComponent</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">rootProps</span><span style="color:#FF79C6;"> =</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> context </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> createAppContext</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> installedPlugins </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> Set</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#6272A4;">    // 判断是否挂载</span></span>
<span class="line"><span style="color:#FF79C6;">    let</span><span style="color:#F8F8F2;"> isMounted </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> false</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> app</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> App</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (context.app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">      // isHydrate 判断是否ssr渲染</span></span>
<span class="line"><span style="color:#50FA7B;">      mount</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">rootContainer</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> HostElement</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">isHydrate</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> boolean</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">namespace</span><span style="color:#FF79C6;">?:</span><span style="color:#8BE9FD;font-style:italic;"> boolean</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> ElementNamespace</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">isMounted){</span></span>
<span class="line"><span style="color:#6272A4;">          // vnode 就是一个js对象</span></span>
<span class="line"><span style="color:#FF79C6;">          const</span><span style="color:#F8F8F2;"> vnode </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> app._ceVNode </span><span style="color:#FF79C6;">||</span><span style="color:#50FA7B;"> createVNode</span><span style="color:#F8F8F2;">(rootComponent, rootProps)</span></span>
<span class="line"><span style="color:#FF79C6;">          if</span><span style="color:#F8F8F2;"> (isHydrate </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> hydrate) {</span></span>
<span class="line"><span style="color:#6272A4;">            // ssr 渲染</span></span>
<span class="line"><span style="color:#50FA7B;">            hydrate</span><span style="color:#F8F8F2;">(vnode </span><span style="color:#FF79C6;">as</span><span style="color:#8BE9FD;font-style:italic;"> VNode</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">Node</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">Element</span><span style="color:#F8F8F2;">&gt;, rootContainer </span><span style="color:#FF79C6;">as</span><span style="color:#8BE9FD;font-style:italic;"> any</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">          } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">            render</span><span style="color:#F8F8F2;">(vnode, rootContainer, namespace)</span></span>
<span class="line"><span style="color:#F8F8F2;">          }</span></span>
<span class="line"><span style="color:#F8F8F2;">          isMounted </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span></span>
<span class="line"><span style="color:#F8F8F2;">          app._container </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> rootContainer</span></span>
<span class="line"><span style="color:#6272A4;">          // 获取 defineExpose 暴露的属性</span></span>
<span class="line"><span style="color:#FF79C6;">          return</span><span style="color:#50FA7B;"> getComponentPublicInstance</span><span style="color:#F8F8F2;">(vnode.component</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">) </span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="render" tabindex="-1"><a class="header-anchor" href="#render"><span>render</span></a></h1><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> const</span><span style="color:#F8F8F2;"> render </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> ((</span><span style="color:#FF79C6;">...</span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">  ensureRenderer</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">render</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">...</span><span style="color:#F8F8F2;">args)</span></span>
<span class="line"><span style="color:#F8F8F2;">}) </span><span style="color:#FF79C6;">as</span><span style="color:#8BE9FD;font-style:italic;"> RootRenderFunction</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">Element</span><span style="color:#FF79C6;"> |</span><span style="color:#FFB86C;font-style:italic;"> ShadowRoot</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> ensureRenderer</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#F8F8F2;">    renderer </span><span style="color:#FF79C6;">||</span></span>
<span class="line"><span style="color:#F8F8F2;">    (renderer </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> createRenderer</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">Node</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">Element</span><span style="color:#FF79C6;"> |</span><span style="color:#FFB86C;font-style:italic;"> ShadowRoot</span><span style="color:#F8F8F2;">&gt;(rendererOptions))</span></span>
<span class="line"><span style="color:#F8F8F2;">  )</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> function</span><span style="color:#50FA7B;"> createRenderer</span><span style="color:#F8F8F2;">&lt;</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  HostNode</span><span style="color:#FF79C6;"> =</span><span style="color:#FFB86C;font-style:italic;"> RendererNode</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  HostElement</span><span style="color:#FF79C6;"> =</span><span style="color:#FFB86C;font-style:italic;"> RendererElement</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">&gt;(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RendererOptions</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">HostNode</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">HostElement</span><span style="color:#F8F8F2;">&gt;)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Renderer</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">HostElement</span><span style="color:#F8F8F2;">&gt; {</span></span>
<span class="line"><span style="color:#FF79C6;">  return</span><span style="color:#50FA7B;"> baseCreateRenderer</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">HostNode</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">HostElement</span><span style="color:#F8F8F2;">&gt;(options)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> baseCrateRenderer</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#50FA7B;"> render</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RootRenderFunction</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">vnode</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">container</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">namespace</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (vnode </span><span style="color:#FF79C6;">==</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (container._vnode) {</span></span>
<span class="line"><span style="color:#50FA7B;">        unmount</span><span style="color:#F8F8F2;">(container._vnode, </span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">      patch</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">        container._vnode </span><span style="color:#FF79C6;">||</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        vnode,</span></span>
<span class="line"><span style="color:#F8F8F2;">        container,</span></span>
<span class="line"><span style="color:#BD93F9;">        null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#BD93F9;">        null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#BD93F9;">        null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        namespace,</span></span>
<span class="line"><span style="color:#F8F8F2;">      )</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#6272A4;">    // 缓存vnode标记已被渲染</span></span>
<span class="line"><span style="color:#F8F8F2;">    container._vnode </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> vnode</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">isFlushing) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      isFlushing </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span></span>
<span class="line"><span style="color:#50FA7B;">      flushPreFlushCbs</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#50FA7B;">      flushPostFlushCbs</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">      isFlushing </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> false</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="patch" tabindex="-1"><a class="header-anchor" href="#patch"><span>patch</span></a></h1><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> baseCreateRenderer</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;">RendererOptions</span><span style="color:#F8F8F2;">){</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#50FA7B;"> path</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;">PatchFn</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    n1</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    n2</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    container</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    anchor </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    parentComponent </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    parentSuspense </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    namespace </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> undefined</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    slotScopeIds </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    optimized </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> __DEV__ </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> isHmrUpdating </span><span style="color:#FF79C6;">?</span><span style="color:#BD93F9;"> false</span><span style="color:#FF79C6;"> :</span><span style="color:#FF79C6;"> !!</span><span style="color:#F8F8F2;">n2.dynamicChildren,</span></span>
<span class="line"><span style="color:#F8F8F2;">  ) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">    // 不是相同节点</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (n1 </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#FF79C6;"> !</span><span style="color:#50FA7B;">isSameVNodeType</span><span style="color:#F8F8F2;">(n1, n2)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      anchor </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> getNextHostNode</span><span style="color:#F8F8F2;">(n1)</span></span>
<span class="line"><span style="color:#50FA7B;">      unmount</span><span style="color:#F8F8F2;">(n1, parentComponent, parentSuspense, </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">      n1 </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> { type, ref, shapeFlag } </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> n2</span></span>
<span class="line"><span style="color:#FF79C6;">    switch</span><span style="color:#F8F8F2;">(type){</span></span>
<span class="line"><span style="color:#6272A4;">      // ...</span></span>
<span class="line"><span style="color:#FF79C6;">      default</span><span style="color:#F8F8F2;">: </span></span>
<span class="line"><span style="color:#50FA7B;">      processComponent</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">        n1,</span></span>
<span class="line"><span style="color:#F8F8F2;">        n2,</span></span>
<span class="line"><span style="color:#F8F8F2;">        container,</span></span>
<span class="line"><span style="color:#F8F8F2;">        anchor,</span></span>
<span class="line"><span style="color:#F8F8F2;">        parentComponent,</span></span>
<span class="line"><span style="color:#F8F8F2;">        parentSuspense,</span></span>
<span class="line"><span style="color:#F8F8F2;">        namespace,</span></span>
<span class="line"><span style="color:#F8F8F2;">        slotScopeIds,</span></span>
<span class="line"><span style="color:#F8F8F2;">        optimized,</span></span>
<span class="line"><span style="color:#F8F8F2;">      )</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="processcomponent" tabindex="-1"><a class="header-anchor" href="#processcomponent"><span>processComponent</span></a></h2><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#50FA7B;"> processComponent</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    n1</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> VNode</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    n2</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> VNode</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    container</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RendererElement</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    anchor</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RendererNode</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    parentComponent</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> ComponentInternalInstance</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    parentSuspense</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> SuspenseBoundary</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    namespace</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> ElementNamespace</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    slotScopeIds</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> string</span><span style="color:#F8F8F2;">[] </span><span style="color:#FF79C6;">|</span><span style="color:#8BE9FD;font-style:italic;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    optimized</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> boolean</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  ) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    n2.slotScopeIds </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> slotScopeIds</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (n1 </span><span style="color:#FF79C6;">==</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">      // activate keep-alive 方法</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;"> (n2.shapeFlag </span><span style="color:#FF79C6;">&amp;</span><span style="color:#F8F8F2;"> ShapeFlags.</span><span style="color:#BD93F9;">COMPONENT_KEPT_ALIVE</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        ;(parentComponent</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">.ctx </span><span style="color:#FF79C6;">as</span><span style="color:#8BE9FD;font-style:italic;"> KeepAliveContext</span><span style="color:#F8F8F2;">).</span><span style="color:#50FA7B;">activate</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">          n2,</span></span>
<span class="line"><span style="color:#F8F8F2;">          container,</span></span>
<span class="line"><span style="color:#F8F8F2;">          anchor,</span></span>
<span class="line"><span style="color:#F8F8F2;">          namespace,</span></span>
<span class="line"><span style="color:#F8F8F2;">          optimized,</span></span>
<span class="line"><span style="color:#F8F8F2;">        )</span></span>
<span class="line"><span style="color:#F8F8F2;">      } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">        mountComponent</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">          n2,</span></span>
<span class="line"><span style="color:#F8F8F2;">          container,</span></span>
<span class="line"><span style="color:#F8F8F2;">          anchor,</span></span>
<span class="line"><span style="color:#F8F8F2;">          parentComponent,</span></span>
<span class="line"><span style="color:#F8F8F2;">          parentSuspense,</span></span>
<span class="line"><span style="color:#F8F8F2;">          namespace,</span></span>
<span class="line"><span style="color:#F8F8F2;">          optimized,</span></span>
<span class="line"><span style="color:#F8F8F2;">        )</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">      updateComponent</span><span style="color:#F8F8F2;">(n1, n2, optimized)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mountcomponent" tabindex="-1"><a class="header-anchor" href="#mountcomponent"><span>mountComponent</span></a></h3><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// 没有旧vnode直接挂载</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#50FA7B;"> mountComponent</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> MountComponentFn</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    initialVNode</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    container</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    anchor</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    parentComponent</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    parentSuspense</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    namespace</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> ElementNamespace</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    optimized</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  ) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">      /*</span></span>
<span class="line"><span style="color:#6272A4;">      instance = {</span></span>
<span class="line"><span style="color:#6272A4;">        uid: uid++,</span></span>
<span class="line"><span style="color:#6272A4;">        vnode: vnode,</span></span>
<span class="line"><span style="color:#6272A4;">        type: vnode.type,</span></span>
<span class="line"><span style="color:#6272A4;">        parent: parentComponent,</span></span>
<span class="line"><span style="color:#6272A4;">        root: null!, // will be set synchronously right after creation</span></span>
<span class="line"><span style="color:#6272A4;">        next: null,</span></span>
<span class="line"><span style="color:#6272A4;">        appContext: (parentComponent &amp;&amp; parentComponent.appContext) || context,</span></span>
<span class="line"><span style="color:#6272A4;">        props: EMPTY_OBJ,</span></span>
<span class="line"><span style="color:#6272A4;">        attrs: EMPTY_OBJ,</span></span>
<span class="line"><span style="color:#6272A4;">        slots: EMPTY_OBJ,</span></span>
<span class="line"><span style="color:#6272A4;">        refs: {},</span></span>
<span class="line"><span style="color:#6272A4;">        emit: null!,</span></span>
<span class="line"><span style="color:#6272A4;">        vnodeSlots: null,</span></span>
<span class="line"><span style="color:#6272A4;">        render: null,</span></span>
<span class="line"><span style="color:#6272A4;">        proxy: null,</span></span>
<span class="line"><span style="color:#6272A4;">        withProxy: null,</span></span>
<span class="line"><span style="color:#6272A4;">        .....</span></span>
<span class="line"><span style="color:#6272A4;">      }</span></span>
<span class="line"><span style="color:#6272A4;">      */</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> instance</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> ComponentInternalInstance</span><span style="color:#FF79C6;"> =</span></span>
<span class="line"><span style="color:#F8F8F2;">      compatMountInstance </span><span style="color:#FF79C6;">||</span></span>
<span class="line"><span style="color:#F8F8F2;">      (initialVNode.component </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> createComponentInstance</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">        initialVNode,</span></span>
<span class="line"><span style="color:#F8F8F2;">        parentComponent,</span></span>
<span class="line"><span style="color:#F8F8F2;">        parentSuspense,</span></span>
<span class="line"><span style="color:#F8F8F2;">      ))</span></span>
<span class="line"><span style="color:#6272A4;">      /*</span></span>
<span class="line"><span style="color:#6272A4;">      处理props、slots</span></span>
<span class="line"><span style="color:#6272A4;">      执行setup</span></span>
<span class="line"><span style="color:#6272A4;">      */</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#50FA7B;">      setupComponent</span><span style="color:#F8F8F2;">(instance, </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">, optimized)</span></span>
<span class="line"><span style="color:#6272A4;">      // 创建update函数标记mounted = true,执行update</span></span>
<span class="line"><span style="color:#50FA7B;">      setupRenderEffect</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">        instance,</span></span>
<span class="line"><span style="color:#F8F8F2;">        initialVNode,</span></span>
<span class="line"><span style="color:#F8F8F2;">        container,</span></span>
<span class="line"><span style="color:#F8F8F2;">        anchor,</span></span>
<span class="line"><span style="color:#F8F8F2;">        parentSuspense,</span></span>
<span class="line"><span style="color:#F8F8F2;">        namespace,</span></span>
<span class="line"><span style="color:#F8F8F2;">        optimized,</span></span>
<span class="line"><span style="color:#F8F8F2;">      )</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setuprendereffect" tabindex="-1"><a class="header-anchor" href="#setuprendereffect"><span>setupRenderEffect</span></a></h3><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#50FA7B;"> setupRenderEffect</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> SetupRenderEffectFn</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">  // ...</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#50FA7B;"> componentUpdateFn</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">      if</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">instance.isMounted) {</span></span>
<span class="line"><span style="color:#6272A4;">        // 获取subTree</span></span>
<span class="line"><span style="color:#FF79C6;">        const</span><span style="color:#F8F8F2;"> subTree </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> (instance.subTree </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> renderComponentRoot</span><span style="color:#F8F8F2;">(instance))</span></span>
<span class="line"><span style="color:#6272A4;">        // 挂载</span></span>
<span class="line"><span style="color:#50FA7B;">        patch</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">, subTree, container, anchor, instance, parentSuspense, isSVG)</span></span>
<span class="line"><span style="color:#F8F8F2;">   </span></span>
<span class="line"><span style="color:#6272A4;">        // 调用mounted钩子</span></span>
<span class="line"><span style="color:#50FA7B;">        queuePostRenderEffect</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> instance.</span><span style="color:#50FA7B;">emit</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">hook:mounted</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">),parentSuspense,)</span></span>
<span class="line"><span style="color:#6272A4;">        // 设置mounted = true</span></span>
<span class="line"><span style="color:#F8F8F2;">        instance.isMounted </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span></span>
<span class="line"><span style="color:#F8F8F2;">      } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">        // 更新</span></span>
<span class="line"><span style="color:#FF79C6;">        let</span><span style="color:#F8F8F2;"> { next, bu, u, parent, vnode } </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> instance</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (next) {</span></span>
<span class="line"><span style="color:#F8F8F2;">          next.el </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> vnode.el</span></span>
<span class="line"><span style="color:#50FA7B;">          updateComponentPreRender</span><span style="color:#F8F8F2;">(instance, next, optimized)</span></span>
<span class="line"><span style="color:#F8F8F2;">        } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          next </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> vnode</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#50FA7B;">        patch</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">          prevTree,</span></span>
<span class="line"><span style="color:#F8F8F2;">          nextTree,</span></span>
<span class="line"><span style="color:#6272A4;">          // parent may have changed if it&#39;s in a teleport</span></span>
<span class="line"><span style="color:#50FA7B;">          hostParentNode</span><span style="color:#F8F8F2;">(prevTree.el</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#6272A4;">          // anchor may have changed if it&#39;s in a fragment</span></span>
<span class="line"><span style="color:#50FA7B;">          getNextHostNode</span><span style="color:#F8F8F2;">(prevTree),</span></span>
<span class="line"><span style="color:#F8F8F2;">          instance,</span></span>
<span class="line"><span style="color:#F8F8F2;">          parentSuspense,</span></span>
<span class="line"><span style="color:#F8F8F2;">          namespace,</span></span>
<span class="line"><span style="color:#F8F8F2;">        )        </span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> effect </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> (instance.effect </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;font-weight:bold;"> new</span><span style="color:#50FA7B;"> ReactiveEffect</span><span style="color:#F8F8F2;">(componentUpdateFn))</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> update </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> (instance.update </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> effect.run.</span><span style="color:#50FA7B;">bind</span><span style="color:#F8F8F2;">(effect))</span></span>
<span class="line"><span style="color:#50FA7B;">    update</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#50FA7B;"> renderComponentRoot</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">instance</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> ComponentInternalInstance</span><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> VNode</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  const</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    vnode,</span></span>
<span class="line"><span style="color:#F8F8F2;">    render,</span></span>
<span class="line"><span style="color:#6272A4;">    //...</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> instance </span></span>
<span class="line"><span style="color:#6272A4;">  // 进行按位与操作后结果不为零 判断是否有状态</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;">(vnode.shapeFlag </span><span style="color:#FF79C6;">&amp;</span><span style="color:#F8F8F2;"> ShapeFlags.</span><span style="color:#BD93F9;">STATEFUL_COMPONENT</span><span style="color:#F8F8F2;">) { </span></span>
<span class="line"><span style="color:#F8F8F2;">      result </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> normalizeVNode</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">        render</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">call</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">          thisProxy,</span></span>
<span class="line"><span style="color:#F8F8F2;">          proxyToUse</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">          renderCache,</span></span>
<span class="line"><span style="color:#F8F8F2;">          props,</span></span>
<span class="line"><span style="color:#F8F8F2;">          setupState,</span></span>
<span class="line"><span style="color:#F8F8F2;">          data,</span></span>
<span class="line"><span style="color:#F8F8F2;">          ctx,</span></span>
<span class="line"><span style="color:#F8F8F2;">        ))</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">class</span><span style="color:#8BE9FD;"> ReactiveEffect</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">  constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">public</span><span style="color:#50FA7B;"> fn</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> ()</span><span style="color:#FF79C6;">=&gt;</span><span style="color:#8BE9FD;font-style:italic;">T</span><span style="color:#F8F8F2;">){}</span></span>
<span class="line"><span style="color:#50FA7B;">  run</span><span style="color:#F8F8F2;">(){</span></span>
<span class="line"><span style="color:#6272A4;">    // ...</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#BD93F9;font-style:italic;"> this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">fn</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>update()</code>执行实际执行=&gt;<code>componentUpdateFn</code>=&gt;执行组件的<code>render</code>获得<code>subTree</code>=&gt;<code>patch</code></p><p><strong>patch</strong></p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#50FA7B;"> patch</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> PatchFn</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  n1</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  n2</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  container</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  anchor </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  parentComponent </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  parentSuspense </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  namespace </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> undefined</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  slotScopeIds </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  optimized </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> __DEV__ </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> isHmrUpdating </span><span style="color:#FF79C6;">?</span><span style="color:#BD93F9;"> false</span><span style="color:#FF79C6;"> :</span><span style="color:#FF79C6;"> !!</span><span style="color:#F8F8F2;">n2.dynamicChildren,</span></span>
<span class="line"><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#6272A4;">  // ...</span></span>
<span class="line"><span style="color:#50FA7B;">    processElement</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">      n1,</span></span>
<span class="line"><span style="color:#F8F8F2;">      n2,</span></span>
<span class="line"><span style="color:#F8F8F2;">      container,</span></span>
<span class="line"><span style="color:#F8F8F2;">      anchor,</span></span>
<span class="line"><span style="color:#F8F8F2;">      parentComponent,</span></span>
<span class="line"><span style="color:#F8F8F2;">      parentSuspense,</span></span>
<span class="line"><span style="color:#F8F8F2;">      namespace,</span></span>
<span class="line"><span style="color:#F8F8F2;">      slotScopeIds,</span></span>
<span class="line"><span style="color:#F8F8F2;">      optimized,</span></span>
<span class="line"><span style="color:#F8F8F2;">    )  </span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>processElement</strong></p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#50FA7B;"> processElement</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  n1</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> VNode</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  n2</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> VNode</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  container</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RendererElement</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  anchor</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RendererNode</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  parentComponent</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> ComponentInternalInstance</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  parentSuspense</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> SuspenseBoundary</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  namespace</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> ElementNamespace</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  slotScopeIds</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> string</span><span style="color:#F8F8F2;">[] </span><span style="color:#FF79C6;">|</span><span style="color:#8BE9FD;font-style:italic;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">  optimized</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> boolean</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (n2.type </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">svg</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    namespace </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">svg</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#FF79C6;">else</span><span style="color:#FF79C6;"> if</span><span style="color:#F8F8F2;"> (n2.type </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">math</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    namespace </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">mathml</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#FF79C6;">  if</span><span style="color:#F8F8F2;"> (n1 </span><span style="color:#FF79C6;">==</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#50FA7B;">    mountElement</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">      n2,</span></span>
<span class="line"><span style="color:#F8F8F2;">      container,</span></span>
<span class="line"><span style="color:#F8F8F2;">      anchor,</span></span>
<span class="line"><span style="color:#F8F8F2;">      parentComponent,</span></span>
<span class="line"><span style="color:#F8F8F2;">      parentSuspense,</span></span>
<span class="line"><span style="color:#F8F8F2;">      namespace,</span></span>
<span class="line"><span style="color:#F8F8F2;">      slotScopeIds,</span></span>
<span class="line"><span style="color:#F8F8F2;">      optimized,</span></span>
<span class="line"><span style="color:#F8F8F2;">    )</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">    patchElement</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">      n1,</span></span>
<span class="line"><span style="color:#F8F8F2;">      n2,</span></span>
<span class="line"><span style="color:#F8F8F2;">      parentComponent,</span></span>
<span class="line"><span style="color:#F8F8F2;">      parentSuspense,</span></span>
<span class="line"><span style="color:#F8F8F2;">      namespace,</span></span>
<span class="line"><span style="color:#F8F8F2;">      slotScopeIds,</span></span>
<span class="line"><span style="color:#F8F8F2;">      optimized,</span></span>
<span class="line"><span style="color:#F8F8F2;">    )</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#50FA7B;"> mountElement</span><span style="color:#FF79C6;"> =</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    vnode</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> VNode</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    container</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RendererElement</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    anchor</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RendererNode</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    parentComponent</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> ComponentInternalInstance</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    parentSuspense</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> SuspenseBoundary</span><span style="color:#FF79C6;"> |</span><span style="color:#8BE9FD;font-style:italic;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    namespace</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> ElementNamespace</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    slotScopeIds</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> string</span><span style="color:#F8F8F2;">[] </span><span style="color:#FF79C6;">|</span><span style="color:#8BE9FD;font-style:italic;"> null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#FFB86C;font-style:italic;">    optimized</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> boolean</span><span style="color:#F8F8F2;">,  </span></span>
<span class="line"><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">  let</span><span style="color:#F8F8F2;"> el</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> RendererElement</span></span>
<span class="line"><span style="color:#F8F8F2;">  el </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> vnode.el </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> hostCreateElement</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">    vnode.type </span><span style="color:#FF79C6;">as</span><span style="color:#8BE9FD;font-style:italic;"> string</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    namespace,</span></span>
<span class="line"><span style="color:#F8F8F2;">    props </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> props.is,</span></span>
<span class="line"><span style="color:#F8F8F2;">    props,</span></span>
<span class="line"><span style="color:#F8F8F2;">  )</span></span>
<span class="line"><span style="color:#6272A4;">  // ...</span></span>
<span class="line"><span style="color:#50FA7B;">  hostInsert</span><span style="color:#F8F8F2;">(el, container, anchor)  </span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>nodeOps</strong></p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> doc </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> document </span><span style="color:#FF79C6;">!==</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">undefined</span><span style="color:#E9F284;">&#39;</span><span style="color:#FF79C6;"> ?</span><span style="color:#F8F8F2;"> document </span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">as</span><span style="color:#8BE9FD;font-style:italic;"> Document</span></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#FF79C6;"> const</span><span style="color:#F8F8F2;"> nodeOps</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Omit</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">RendererOptions</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FFB86C;font-style:italic;">Node</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">Element</span><span style="color:#F8F8F2;">&gt;, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">patchProp</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#50FA7B;">  insert</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">child</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">parent</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">anchor</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    parent.</span><span style="color:#50FA7B;">insertBefore</span><span style="color:#F8F8F2;">(child, anchor </span><span style="color:#FF79C6;">||</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">  remove</span><span style="color:#FF79C6;">:</span><span style="color:#FFB86C;font-style:italic;"> child</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> parent </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> child.parentNode</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (parent) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      parent.</span><span style="color:#50FA7B;">removeChild</span><span style="color:#F8F8F2;">(child)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">  createElement</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">namespace</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">is</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">props</span><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#8BE9FD;font-style:italic;"> Element</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    const</span><span style="color:#F8F8F2;"> el </span><span style="color:#FF79C6;">=</span></span>
<span class="line"><span style="color:#F8F8F2;">      namespace </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">svg</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#FF79C6;">        ?</span><span style="color:#F8F8F2;"> doc.</span><span style="color:#50FA7B;">createElementNS</span><span style="color:#F8F8F2;">(svgNS, tag)</span></span>
<span class="line"><span style="color:#FF79C6;">        :</span><span style="color:#F8F8F2;"> namespace </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">mathml</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#FF79C6;">          ?</span><span style="color:#F8F8F2;"> doc.</span><span style="color:#50FA7B;">createElementNS</span><span style="color:#F8F8F2;">(mathmlNS, tag)</span></span>
<span class="line"><span style="color:#FF79C6;">          :</span><span style="color:#F8F8F2;"> is</span></span>
<span class="line"><span style="color:#FF79C6;">            ?</span><span style="color:#F8F8F2;"> doc.</span><span style="color:#50FA7B;">createElement</span><span style="color:#F8F8F2;">(tag, { is })</span></span>
<span class="line"><span style="color:#FF79C6;">            :</span><span style="color:#F8F8F2;"> doc.</span><span style="color:#50FA7B;">createElement</span><span style="color:#F8F8F2;">(tag)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (tag </span><span style="color:#FF79C6;">===</span><span style="color:#E9F284;"> &#39;</span><span style="color:#F1FA8C;">select</span><span style="color:#E9F284;">&#39;</span><span style="color:#FF79C6;"> &amp;&amp;</span><span style="color:#F8F8F2;"> props </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> props.multiple </span><span style="color:#FF79C6;">!=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      ;(el </span><span style="color:#FF79C6;">as</span><span style="color:#8BE9FD;font-style:italic;"> HTMLSelectElement</span><span style="color:#F8F8F2;">).</span><span style="color:#50FA7B;">setAttribute</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">multiple</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, props.multiple)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#F8F8F2;"> el</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>summary</span></a></h1><p><code>createApp</code>=&gt;<code>mount</code> =&gt; <code>render</code> =&gt; <code>patch</code> =&gt; <code>processComponent</code> =&gt; <code>mountComponent</code> =&gt; <code>patch</code> =&gt; <code>processElement</code> =&gt; <code>mouseElement</code> =&gt; <code>hostInsert</code></p><ul><li><code>crateApp</code> 重写mount,获取挂载dom</li><li><code>mount</code> 创建vnode,调用<code>render</code></li><li><code>render</code> 调用<code>patch</code>进行diff</li><li><code>patch</code> 判断vnode类型,调用<code>processComponent</code></li><li><code>processComponent</code> 调用<code>mountComponent</code></li><li><code>mountComponent</code> 调用<code>setupComponent</code> =&gt; <code>setupRenderEffect</code></li><li><code>setupRenderEffect</code> 调用<code>renderComponent</code>获取<code>组件subTree</code> 进行<code>patch</code></li><li><code>patch</code> 判断vnode类型,调用<code>processElement</code></li><li><code>processElement</code> 调用<code>mountElement</code></li><li><code>mountElement</code> 创建dom,调用<code>hostInsert</code>插入dom</li><li><code>hostInsert</code> 调用<code>nodeOps.insert</code>插入dom</li></ul>`,26)]))}const t=n(p,[["render",o],["__file","create-app.html.vue"]]),i=JSON.parse(`{"path":"/vue3/create-app.html","title":"Vue 3.5 Dom挂载原理","lang":"en-US","frontmatter":{"title":"Vue 3.5 Dom挂载原理","category":["Vue"],"tag":["Vue3"],"description":"createApp mount app.mount render patch processComponent mountComponent setupRenderEffect update()执行实际执行=>componentUpdateFn=>执行组件的render获得subTree=>patch patch processElement node...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/vue3/create-app.html"}],["meta",{"property":"og:title","content":"Vue 3.5 Dom挂载原理"}],["meta",{"property":"og:description","content":"createApp mount app.mount render patch processComponent mountComponent setupRenderEffect update()执行实际执行=>componentUpdateFn=>执行组件的render获得subTree=>patch patch processElement node..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-18T08:24:32.000Z"}],["meta",{"property":"article:tag","content":"Vue3"}],["meta",{"property":"article:modified_time","content":"2024-12-18T08:24:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue 3.5 Dom挂载原理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-18T08:24:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"git":{"createdTime":1734510272000,"updatedTime":1734510272000,"contributors":[{"name":"luxiag","username":"luxiag","email":"luxiag@qq.com","commits":1,"url":"https://github.com/luxiag"}]},"readingTime":{"minutes":3.68,"words":1105},"filePathRelative":"vue3/create-app.md","localizedDate":"December 18, 2024","excerpt":"<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"background-color:#282A36;color:#F8F8F2\\"><pre class=\\"shiki dracula vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#FF79C6\\">import</span><span style=\\"color:#F8F8F2\\"> App </span><span style=\\"color:#FF79C6\\">from</span><span style=\\"color:#E9F284\\"> '</span><span style=\\"color:#F1FA8C\\">./App.vue</span><span style=\\"color:#E9F284\\">'</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">const</span><span style=\\"color:#F8F8F2\\"> app </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#50FA7B\\"> createApp</span><span style=\\"color:#F8F8F2\\">(App)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">app.</span><span style=\\"color:#50FA7B\\">mount</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E9F284\\">'</span><span style=\\"color:#F1FA8C\\">#app</span><span style=\\"color:#E9F284\\">'</span><span style=\\"color:#F8F8F2\\">)</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as comp,i as data};
