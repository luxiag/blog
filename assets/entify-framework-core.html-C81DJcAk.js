import{_ as n,c as l,b as a,o as e}from"./app-Ogdo9Bdm.js";const p={};function o(t,s){return e(),l("div",null,s[0]||(s[0]=[a(`<h1 id="基础使用" tabindex="-1"><a class="header-anchor" href="#基础使用"><span>基础使用</span></a></h1><p>1.安装对应的数据库提供程序NuGet包</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#50FA7B;">dotnet</span><span style="color:#F1FA8C;"> add</span><span style="color:#F1FA8C;"> packageMicrosoft.EntityFrameworkCore.SqlServer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2.创建实体类</p><p><code>Book.cs</code></p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Book</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#FF79C6;"> long</span><span style="color:#F8F8F2;"> Id { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Name { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Title { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Description { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Author { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#8BE9FD;font-style:italic;"> DateTime</span><span style="color:#F8F8F2;"> publicTime { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#8BE9FD;font-style:italic;"> DateTime</span><span style="color:#F8F8F2;"> updatedTime { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.实现EntityTypeConfiguration接口，并实现Configure方法，配置实体类与数据库表的映射关系</p><p><code>BookEntityConfig.cs</code></p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> BookEntityConfig</span><span style="color:#F8F8F2;">:</span><span style="color:#8BE9FD;font-style:italic;">IEntityTypeConfiguration</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Book</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Configure</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">EntityTypeBuilder</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Book</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FFB86C;font-style:italic;">builder</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#6272A4;">            // 配置表名</span></span>
<span class="line"><span style="color:#F8F8F2;">            builder.</span><span style="color:#50FA7B;">ToTable</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">T_Books</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">            // 配置主键</span></span>
<span class="line"><span style="color:#F8F8F2;">            builder.</span><span style="color:#50FA7B;">HasKey</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">p</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> p.Id);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">            // 配置字段属性</span></span>
<span class="line"><span style="color:#F8F8F2;">            builder.</span><span style="color:#50FA7B;">Property</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">p</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> p.Name)</span></span>
<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#50FA7B;">IsRequired</span><span style="color:#F8F8F2;">() </span><span style="color:#6272A4;">// 必填字段</span></span>
<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#50FA7B;">HasMaxLength</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">100</span><span style="color:#F8F8F2;">); </span><span style="color:#6272A4;">// 最大长度 100</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            builder.</span><span style="color:#50FA7B;">Property</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">p</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> p.Price)</span></span>
<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#50FA7B;">HasColumnType</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">decimal(18,2)</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">); </span><span style="color:#6272A4;">// 指定数据类型</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">            // 配置关系</span></span>
<span class="line"><span style="color:#F8F8F2;">            builder.</span><span style="color:#50FA7B;">HasOne</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">p</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> p.Category)</span></span>
<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#50FA7B;">WithMany</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">c</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> c.Products)</span></span>
<span class="line"><span style="color:#F8F8F2;">                .</span><span style="color:#50FA7B;">HasForeignKey</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">p</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> p.CategoryId); </span><span style="color:#6272A4;">// 配置外键</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.创建DbContext类，并继承自 DbContext 的类，用于管理实体和数据库交互。</p><p><code>MyDbContext.cs</code></p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> MyDbContext</span><span style="color:#F8F8F2;">:</span><span style="color:#8BE9FD;font-style:italic;">DbContext</span><span style="color:#F8F8F2;">      </span></span>
<span class="line"><span style="color:#F8F8F2;">    {   </span></span>
<span class="line"><span style="color:#6272A4;">        // 提供对实体集合的访问，用于查询和保存数据。</span></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#8BE9FD;font-style:italic;"> DbSet</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Book</span><span style="color:#F8F8F2;">&gt; Books { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        protected</span><span style="color:#FF79C6;"> override</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> OnConfiguring</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">DbContextOptionsBuilder</span><span style="color:#FFB86C;font-style:italic;"> optionsBuilder</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {   </span></span>
<span class="line"><span style="color:#6272A4;">            // 如果基类配置了其他选项（如日志记录），调用 base.OnConfiguring 可以确保这些选项不会被覆盖。</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">            base</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">OnConfiguring</span><span style="color:#F8F8F2;">(optionsBuilder);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.注册DbContext</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">ConnectionStrings</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">: {</span></span>
<span class="line"><span style="color:#8BE9FE;">  &quot;</span><span style="color:#8BE9FD;">DefaultConnection</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">Server=localhost;Database=MyDatabase;User Id=myuser;Password=mypassword;</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> builder </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> WebApplication.</span><span style="color:#50FA7B;">CreateBuilder</span><span style="color:#F8F8F2;">(args);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddDbContext</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">ApplicationDbContext</span><span style="color:#F8F8F2;">&gt;(</span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    options.</span><span style="color:#50FA7B;">UseSqlServer</span><span style="color:#F8F8F2;">(builder.Configuration.</span><span style="color:#50FA7B;">GetConnectionString</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">DefaultConnection</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> builder.</span><span style="color:#50FA7B;">Build</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">Run</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>6.创建数据库表</p><p>安装命令行工具支持的NuGet包</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#50FA7B;">dotnet</span><span style="color:#F1FA8C;"> add</span><span style="color:#F1FA8C;"> packageMicrosoft.EntityFrameworkCore.Tools</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>主要用于开发阶段，支持管理数据库迁移、更新数据库、以及生成数据库模型代码等任务。</p><p>添加迁移</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#50FA7B;">dotnet</span><span style="color:#F1FA8C;"> ef</span><span style="color:#F1FA8C;"> migrations</span><span style="color:#F1FA8C;"> add</span><span style="color:#F1FA8C;"> InitialCreate</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>更新数据库</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#50FA7B;">dotnet</span><span style="color:#F1FA8C;"> ef</span><span style="color:#F1FA8C;"> database</span><span style="color:#F1FA8C;"> update</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="实体类" tabindex="-1"><a class="header-anchor" href="#实体类"><span>实体类</span></a></h1><h2 id="基础类型" tabindex="-1"><a class="header-anchor" href="#基础类型"><span>基础类型</span></a></h2><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// int / long / short / byte</span></span>
<span class="line"><span style="color:#6272A4;">// 用于存储整数类型的主键、计数器、或者状态标识。</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> PageCount { get; set; } </span><span style="color:#6272A4;">// 书本的页数</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> short</span><span style="color:#F8F8F2;"> Edition { get; set; } </span><span style="color:#6272A4;">// 版本号</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// decimal</span></span>
<span class="line"><span style="color:#6272A4;">// 适用于货币或高精度的数值计算。</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> decimal</span><span style="color:#F8F8F2;"> Price { get; set; } </span><span style="color:#6272A4;">// 书的价格</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// float / double</span></span>
<span class="line"><span style="color:#6272A4;">// 用于存储浮点数，适用于需要高精度的小数计算的场合。</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> float</span><span style="color:#F8F8F2;"> Latitude { get; set; } </span><span style="color:#6272A4;">// 纬度</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> double</span><span style="color:#F8F8F2;"> Longitude { get; set; } </span><span style="color:#6272A4;">// 经度</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// string</span></span>
<span class="line"><span style="color:#6272A4;">// 用于存储文本数据，可以指定最大长度。</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Title { get; set; } </span><span style="color:#6272A4;">// 书的标题</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Description { get; set; } </span><span style="color:#6272A4;">// 书的描述</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// DateTime / DateTimeOffset</span></span>
<span class="line"><span style="color:#6272A4;">// 用于存储日期和时间信息。</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> DateTime PublicationDate { get; set; } </span><span style="color:#6272A4;">// 出版日期</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> DateTimeOffset LastUpdated { get; set; } </span><span style="color:#6272A4;">// 最后更新时间</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// bool</span></span>
<span class="line"><span style="color:#6272A4;">// 用于存储布尔值，表示是/否、真/假等。</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> bool</span><span style="color:#F8F8F2;"> IsAvailable { get; set; } </span><span style="color:#6272A4;">// 是否可用</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// Guid</span></span>
<span class="line"><span style="color:#6272A4;">// 用于存储全局唯一标识符，适用于需要唯一标识的场合。</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> Guid UniqueId { get; set; } </span><span style="color:#6272A4;">// 唯一标识符</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="高级类型" tabindex="-1"><a class="header-anchor" href="#高级类型"><span>高级类型</span></a></h2><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// byte[]</span></span>
<span class="line"><span style="color:#6272A4;">// 用于存储二进制数据，如文件内容、图像等。</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> byte</span><span style="color:#F8F8F2;">[] CoverImage { get; set; } </span><span style="color:#6272A4;">// 封面图片</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// Enum</span></span>
<span class="line"><span style="color:#6272A4;">// 用于存储枚举类型的值。</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> BookStatus Status { get; set; } </span><span style="color:#6272A4;">// 书的状态</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// Complex Type</span></span>
<span class="line"><span style="color:#6272A4;">// 用于存储复杂的数据结构，如地址、坐标等。</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> Address Address { get; set; } </span><span style="color:#6272A4;">// 地址信息</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// Navigation Property</span></span>
<span class="line"><span style="color:#6272A4;">// 用于表示实体之间的关联关系。</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> Category Category { get; set; } </span><span style="color:#6272A4;">// 所属类别</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> ICollection</span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;">Author</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> Authors { get; set; } </span><span style="color:#6272A4;">// 作者列表</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实体关系" tabindex="-1"><a class="header-anchor" href="#实体关系"><span>实体关系</span></a></h2><p>一对一关系 (One-to-One)</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> User</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> Id { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Name { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> UserProfile</span><span style="color:#F8F8F2;"> Profile { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> UserProfile</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> Id { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Address { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> User</span><span style="color:#F8F8F2;"> User { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> UserConfiguration</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IEntityTypeConfiguration</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">User</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Configure</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">EntityTypeBuilder</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">User</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FFB86C;font-style:italic;">builder</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">ToTable</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Users</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 配置一对一关系</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">HasOne</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">u</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> u.Profile) </span><span style="color:#6272A4;">// 一个 User 有一个 Profile</span></span>
<span class="line"><span style="color:#F8F8F2;">               .</span><span style="color:#50FA7B;">WithOne</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">p</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> p.User)   </span><span style="color:#6272A4;">// 一个 Profile 对应一个 User</span></span>
<span class="line"><span style="color:#F8F8F2;">               .</span><span style="color:#50FA7B;">HasForeignKey</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">UserProfile</span><span style="color:#F8F8F2;">&gt;(</span><span style="color:#FFB86C;font-style:italic;">p</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> p.Id); </span><span style="color:#6272A4;">// 外键在 UserProfile 中</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一对多</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// 一对多关系</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Book</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> Id { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Title { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> ICollection</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Review</span><span style="color:#F8F8F2;">&gt; Reviews { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Review</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> Id { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Content { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> BookId { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> Book</span><span style="color:#F8F8F2;"> Book { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> BookConfiguration</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IEntityTypeConfiguration</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Book</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Configure</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">EntityTypeBuilder</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Book</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FFB86C;font-style:italic;">builder</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">ToTable</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Books</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 配置一对多关系</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">HasMany</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">b</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> b.Reviews)  </span><span style="color:#6272A4;">// 一个 Book 有多个 Review</span></span>
<span class="line"><span style="color:#F8F8F2;">               .</span><span style="color:#50FA7B;">WithOne</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">r</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> r.Book)    </span><span style="color:#6272A4;">// 一个 Review 关联一个 Book</span></span>
<span class="line"><span style="color:#F8F8F2;">               .</span><span style="color:#50FA7B;">HasForeignKey</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">r</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> r.BookId); </span><span style="color:#6272A4;">// 外键在 Review 中</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多对多</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Student</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> Id { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Name { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> ICollection</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Course</span><span style="color:#F8F8F2;">&gt; Courses { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Course</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> Id { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Title { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> ICollection</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Student</span><span style="color:#F8F8F2;">&gt; Students { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> StudentConfiguration</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IEntityTypeConfiguration</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Student</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Configure</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">EntityTypeBuilder</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Student</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FFB86C;font-style:italic;">builder</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">ToTable</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Students</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 配置多对多关系</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">HasMany</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">s</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> s.Courses)  </span><span style="color:#6272A4;">// 一个 Student 关联多个 Course</span></span>
<span class="line"><span style="color:#F8F8F2;">               .</span><span style="color:#50FA7B;">WithMany</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">c</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> c.Students) </span><span style="color:#6272A4;">// 一个 Course 关联多个 Student</span></span>
<span class="line"><span style="color:#F8F8F2;">               .</span><span style="color:#50FA7B;">UsingEntity</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">StudentCourse</span><span style="color:#F8F8F2;">&gt;(); </span><span style="color:#6272A4;">// 使用隐式中间表</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="data-annotation" tabindex="-1"><a class="header-anchor" href="#data-annotation"><span>Data Annotation</span></a></h2><p><strong>Data Annotations</strong> 是 <strong>Entity Framework Core (EF Core)</strong> 中用于配置模型属性的特性，它们使你可以在模型类中直接使用属性来指定数据库行为，如验证、映射和关系配置等。Data Annotations 是一种声明式的方式，用于在实体类中提供约束和配置选项。</p><h3 id="如何使用-data-annotations" tabindex="-1"><a class="header-anchor" href="#如何使用-data-annotations"><span><strong>如何使用 Data Annotations</strong></span></a></h3><p>Data Annotations 通过在模型类的属性上使用特性（Attributes）来进行配置。这些特性帮助 EF Core 确定数据库中如何映射和处理这些属性。例如，你可以指定字段是否必填、字段长度的限制、最大值、最小值等。</p><h3 id="常用的-data-annotations-特性" tabindex="-1"><a class="header-anchor" href="#常用的-data-annotations-特性"><span><strong>常用的 Data Annotations 特性</strong></span></a></h3><p>以下是一些常见的 Data Annotations 特性以及它们的用途：</p><ol><li><p><strong><code>[Key]</code></strong></p><ul><li><p><strong>用途</strong>：指定该属性是实体的主键。</p></li><li><p><strong>示例</strong>：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Product</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">Key</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> Id { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>[Required]</code></strong></p><ul><li><p><strong>用途</strong>：指定该属性是必填的（不能为 <code>null</code>）。</p></li><li><p><strong>示例</strong>：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Product</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">Required</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Name { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>[StringLength]</code> / <code>[MaxLength]</code> / <code>[MinLength]</code></strong></p><ul><li><p><strong>用途</strong>：指定字符串字段的最大长度和最小长度。</p></li><li><p><strong>示例</strong>：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Product</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">StringLength</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">100</span><span style="color:#F8F8F2;">)] </span><span style="color:#6272A4;">// 最大长度为 100</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Name { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>[Range]</code></strong></p><ul><li><p><strong>用途</strong>：指定属性的值必须在给定范围内（适用于数值类型，如 <code>int</code>、<code>decimal</code>）。</p></li><li><p><strong>示例</strong>：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Product</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">Range</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">1000</span><span style="color:#F8F8F2;">)] </span><span style="color:#6272A4;">// 价格范围必须在 1 到 1000 之间</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> decimal</span><span style="color:#F8F8F2;"> Price { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>[MaxLength]</code></strong></p><ul><li><p><strong>用途</strong>：为字符串属性指定最大长度。</p></li><li><p><strong>示例</strong>：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Product</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">MaxLength</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">255</span><span style="color:#F8F8F2;">)] </span><span style="color:#6272A4;">// 字符串最大长度为 255</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Description { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>[Column]</code></strong></p><ul><li><p><strong>用途</strong>：为属性指定数据库中的列名和列的数据类型。</p></li><li><p><strong>示例</strong>：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Product</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">Column</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">ProductName</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, TypeName </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">varchar(100)</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Name { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>[ForeignKey]</code></strong></p><ul><li><p><strong>用途</strong>：指定外键关联的字段。</p></li><li><p><strong>示例</strong>：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Order</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> ProductId { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">ForeignKey</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">ProductId</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> Product</span><span style="color:#F8F8F2;"> Product { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>[NotMapped]</code></strong></p><ul><li><p><strong>用途</strong>：将属性标记为不需要映射到数据库的列。</p></li><li><p><strong>示例</strong>：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Product</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">NotMapped</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> DisplayName </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#E9F284;"> $&quot;</span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">Name</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;"> - </span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">Price</span><span style="color:#FF79C6;">}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>[Timestamp]</code></strong></p><ul><li><p><strong>用途</strong>：指定该属性是用于乐观并发控制的时间戳字段。</p></li><li><p><strong>示例</strong>：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Product</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">Timestamp</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> byte</span><span style="color:#F8F8F2;">[] RowVersion { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>[EmailAddress]</code></strong></p><ul><li><p><strong>用途</strong>：验证属性是否为有效的电子邮件地址。</p></li><li><p><strong>示例</strong>：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> User</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">EmailAddress</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Email { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong><code>[Phone]</code></strong></p><ul><li><p><strong>用途</strong>：验证属性是否为有效的电话号码。</p></li><li><p><strong>示例</strong>：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> User</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">Phone</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> PhoneNumber { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol><h1 id="ientitytypeconfiguration-t" tabindex="-1"><a class="header-anchor" href="#ientitytypeconfiguration-t"><span><code>IEntityTypeConfiguration&lt;T&gt;</code></span></a></h1><p>IEntityTypeConfiguration<code>&lt;T&gt;</code> 是 Entity Framework Core (EF Core) 中的一个接口，允许你为实体类型提供配置逻辑。它是 EF Core 提供的 Fluent API 的一部分，用于将实体的配置（如表名、主键、外键、列约束、索引等）从 DbContext 类中分离出来，帮助你保持代码的组织性和可维护性。</p><ul><li>分离配置逻辑：IEntityTypeConfiguration<code>&lt;T&gt;</code> 接口允许你将配置逻辑从 DbContext 中提取到单独的类中，使代码更清晰、可维护。特别是在实体模型很复杂时，使用 IEntityTypeConfiguration<code>&lt;T&gt;</code> 可以将每个实体的配置单独管理。</li><li>实现 Fluent API 配置：通过实现该接口的 Configure 方法，你可以利用 Fluent API 为实体指定数据库表名、列类型、关系（如一对多、一对一）等属性。</li><li>配置继承：你可以通过继承 IEntityTypeConfiguration<code>&lt;T&gt;</code>接口来为派生实体提供配置，从而实现配置的继承和重用。</li></ul><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> BookConfiguration</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IEntityTypeConfiguration</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Book</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Configure</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">EntityTypeBuilder</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Book</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FFB86C;font-style:italic;">builder</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {   </span></span>
<span class="line"><span style="color:#6272A4;">        // 配置实体映射到的表名及架构：</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">ToTable</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Books</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 配置字段的数据类型、必填属性、默认值等：</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">Property</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">b</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> b.Title).</span><span style="color:#50FA7B;">IsRequired</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">HasMaxLength</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">100</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">Property</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">b</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> b.Price).</span><span style="color:#50FA7B;">HasColumnType</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">decimal(18, 2)</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 配置主键</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">HasKey</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">b</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> b.Id);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 配置关系</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">HasOne</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">b</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> b.Category)</span></span>
<span class="line"><span style="color:#F8F8F2;">               .</span><span style="color:#50FA7B;">WithMany</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">c</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> c.Books)</span></span>
<span class="line"><span style="color:#F8F8F2;">               .</span><span style="color:#50FA7B;">HasForeignKey</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">b</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> b.CategoryId);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 配置索引</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">HasIndex</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">b</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> b.Title);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 配置字段的值转换，例如枚举类型转字符串：</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">Property</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">p</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> p.Status).</span><span style="color:#50FA7B;">HasConversion</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 添加初始数据</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">HasData</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> Book</span><span style="color:#F8F8F2;"> { Id </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">, Name </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">Laptop</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, Price </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 1000</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fluent-api" tabindex="-1"><a class="header-anchor" href="#fluent-api"><span>Fluent API</span></a></h2><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> BookConfiguration</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IEntityTypeConfiguration</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Book</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Configure</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">EntityTypeBuilder</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Book</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FFB86C;font-style:italic;">builder</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">Property</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">b</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> b.Name)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">HasMaxLength</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">100</span><span style="color:#F8F8F2;">)  </span><span style="color:#6272A4;">// 限制字符串最大长度为 100</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">IsRequired</span><span style="color:#F8F8F2;">();      </span><span style="color:#6272A4;">// 设置为必填字段</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">Property</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">b</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> b.Description)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">HasMaxLength</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">500</span><span style="color:#F8F8F2;">); </span><span style="color:#6272A4;">// 限制描述字段最大长度为 500</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">Property</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">p</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> p.Price)</span></span>
<span class="line"><span style="color:#F8F8F2;">          .</span><span style="color:#50FA7B;">HasColumnType</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">decimal(18,2)</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);  </span><span style="color:#6272A4;">// 设置 decimal 类型，精度为 18，规模为 2    </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">Property</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> e.EventDate)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">HasColumnType</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">datetime2</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);  </span><span style="color:#6272A4;">// 设置数据库中为 datetime2 类型</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">Property</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">o</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> o.Status)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">HasConversion</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">&gt;();  </span><span style="color:#6272A4;">// 将枚举值存储为字符串类型</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">Property</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> e.HireDate)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">IsRequired</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">);  </span><span style="color:#6272A4;">// 允许 HireDate 为 null</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        builder.</span><span style="color:#50FA7B;">Property</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> e.HireDate)</span></span>
<span class="line"><span style="color:#F8F8F2;">            .</span><span style="color:#50FA7B;">HasDefaultValueSql</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">GETDATE()</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);  </span><span style="color:#6272A4;">// 设置默认值为当前日期时间</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48)]))}const c=n(p,[["render",o],["__file","entify-framework-core.html.vue"]]),F=JSON.parse('{"path":"/dotnet/entify-framework-core.html","title":"Entity Framework Core","lang":"en-US","frontmatter":{"title":"Entity Framework Core","category":[".Net"],"date":"2024-08-05T00:00:00.000Z","description":"基础使用 1.安装对应的数据库提供程序NuGet包 2.创建实体类 Book.cs 3.实现EntityTypeConfiguration接口，并实现Configure方法，配置实体类与数据库表的映射关系 BookEntityConfig.cs 4.创建DbContext类，并继承自 DbContext 的类，用于管理实体和数据库交互。 MyDbCon...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/dotnet/entify-framework-core.html"}],["meta",{"property":"og:title","content":"Entity Framework Core"}],["meta",{"property":"og:description","content":"基础使用 1.安装对应的数据库提供程序NuGet包 2.创建实体类 Book.cs 3.实现EntityTypeConfiguration接口，并实现Configure方法，配置实体类与数据库表的映射关系 BookEntityConfig.cs 4.创建DbContext类，并继承自 DbContext 的类，用于管理实体和数据库交互。 MyDbCon..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-10T14:32:03.000Z"}],["meta",{"property":"article:published_time","content":"2024-08-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-10T14:32:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Entity Framework Core\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-10T14:32:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"基础类型","slug":"基础类型","link":"#基础类型","children":[]},{"level":2,"title":"高级类型","slug":"高级类型","link":"#高级类型","children":[]},{"level":2,"title":"实体关系","slug":"实体关系","link":"#实体关系","children":[]},{"level":2,"title":"Data Annotation","slug":"data-annotation","link":"#data-annotation","children":[{"level":3,"title":"如何使用 Data Annotations","slug":"如何使用-data-annotations","link":"#如何使用-data-annotations","children":[]},{"level":3,"title":"常用的 Data Annotations 特性","slug":"常用的-data-annotations-特性","link":"#常用的-data-annotations-特性","children":[]}]},{"level":2,"title":"Fluent API","slug":"fluent-api","link":"#fluent-api","children":[]}],"git":{"createdTime":1733840773000,"updatedTime":1733841123000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":2}]},"readingTime":{"minutes":7.34,"words":2201},"filePathRelative":"dotnet/entify-framework-core.md","localizedDate":"August 5, 2024","excerpt":"\\n<p>1.安装对应的数据库提供程序NuGet包</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"background-color:#282A36;color:#F8F8F2\\"><pre class=\\"shiki dracula vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#50FA7B\\">dotnet</span><span style=\\"color:#F1FA8C\\"> add</span><span style=\\"color:#F1FA8C\\"> packageMicrosoft.EntityFrameworkCore.SqlServer</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{c as comp,F as data};
