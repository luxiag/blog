import{_ as e,c as a,b as o,o as n}from"./app-Bcs0tJax.js";const r={};function i(l,t){return n(),a("div",null,t[0]||(t[0]=[o('<p><strong>大 O 表示法是一种特殊的表示法，指出了算法的速度有多快。</strong> 将算法的所有步骤转换为代数项，然后排除不会对问题的整体复杂度产生较大影响的较低阶常数和系数</p><h2 id="时间复杂度" tabindex="-1"><a class="header-anchor" href="#时间复杂度"><span>时间复杂度</span></a></h2><p>用于评估执行程序所消耗的时间，可以估算出程序对处理器的使用程度。 时间复杂度的公式是：<code>T(n) = O( f(n) )</code>，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公式的全称是：算法的渐进时间复杂度。</p><table><thead><tr><th>常见算法</th><th>时间复杂度</th></tr></thead><tbody><tr><td>简单查找</td><td>O(n)</td></tr><tr><td>二分查找</td><td>O($log_{}{n}$)</td></tr><tr><td>快速排序</td><td>O($nlog_{}{n}$)</td></tr><tr><td>选择排序</td><td>O($n^{2}$)</td></tr></tbody></table><h2 id="空间复杂度" tabindex="-1"><a class="header-anchor" href="#空间复杂度"><span>空间复杂度</span></a></h2><p>用于评估执行程序所占用的内存空间，可以估算出程序对计算机内存的使用程度。</p>',6)]))}const p=e(r,[["render",i],["__file","large-o-notation.html.vue"]]),c=JSON.parse('{"path":"/algorithm/large-o-notation.html","title":"大O表示法","lang":"en-US","frontmatter":{"title":"大O表示法","reference":"算法图解","date":"2022-09-15T00:00:00.000Z","category":["算法"],"tag":["算法图解"],"description":"大 O 表示法是一种特殊的表示法，指出了算法的速度有多快。 将算法的所有步骤转换为代数项，然后排除不会对问题的整体复杂度产生较大影响的较低阶常数和系数 时间复杂度 用于评估执行程序所消耗的时间，可以估算出程序对处理器的使用程度。 时间复杂度的公式是：T(n) = O( f(n) )，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/algorithm/large-o-notation.html"}],["meta",{"property":"og:title","content":"大O表示法"}],["meta",{"property":"og:description","content":"大 O 表示法是一种特殊的表示法，指出了算法的速度有多快。 将算法的所有步骤转换为代数项，然后排除不会对问题的整体复杂度产生较大影响的较低阶常数和系数 时间复杂度 用于评估执行程序所消耗的时间，可以估算出程序对处理器的使用程度。 时间复杂度的公式是：T(n) = O( f(n) )，其中f(n) 表示每行代码执行次数之和，而 O 表示正比例关系，这个公..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2022-10-06T14:57:29.000Z"}],["meta",{"property":"article:tag","content":"算法图解"}],["meta",{"property":"article:published_time","content":"2022-09-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-10-06T14:57:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"大O表示法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-15T00:00:00.000Z\\",\\"dateModified\\":\\"2022-10-06T14:57:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"时间复杂度","slug":"时间复杂度","link":"#时间复杂度","children":[]},{"level":2,"title":"空间复杂度","slug":"空间复杂度","link":"#空间复杂度","children":[]}],"git":{"createdTime":1663833246000,"updatedTime":1665068249000,"contributors":[{"name":"卢祥","email":"example@gmail.com","commits":3},{"name":"luxiang","email":"luxiag@qq.com","commits":1}]},"readingTime":{"minutes":0.86,"words":259},"filePathRelative":"algorithm/large-o-notation.md","localizedDate":"September 15, 2022","excerpt":"<p><strong>大 O 表示法是一种特殊的表示法，指出了算法的速度有多快。</strong>\\n将算法的所有步骤转换为代数项，然后排除不会对问题的整体复杂度产生较大影响的较低阶常数和系数</p>\\n","autoDesc":true}');export{p as comp,c as data};
