import{_ as U,e as K,h as P,f as c,j as Q,r as E,i as G,G as X,o as Y}from"./app-DPJYBgB6.js";import{l as S,m as T,as as I,n as aa,o as Z,W as _,at as J,aC as ea,aD as sa,aE as N,aF as na,p as R,aG as ta,r as la,s as fa,z as oa,aH as O,a5 as pa,aI as da,Z as va,_ as V}from"./three.module-_5Kft3IB.js";import{O as D}from"./OrbitControls-86TszHm5.js";import{g as j}from"./index-Brfk6Bdo.js";import{R as z}from"./RGBELoader-DKsNqSAJ.js";import{G as W}from"./GLTFLoader--m4klZzU.js";import{W as ia}from"./Water2-BkR9J0ye.js";const ra={__name:"threejs-light.html",setup($,{expose:t}){t();let m;const r=E(),M=async()=>{const s=new S,p=new T(45,2,.25,20);p.position.set(-2,1.5,3);const l=await new z().loadAsync("./assets/textures/equirectangular/moonless_golf_1k.hdr ");l.mapping=I,s.background=l,s.environment=l;const b=await new W().loadAsync("./assets/models/LightsPunctualLamp.glb");s.add(b.scene);const d=new m.GUI;r.value.appendChild(d.domElement),d.domElement.style.position="absolute",d.domElement.style.top="0px",d.domElement.style.right="0px";const f={punctualLightsEnabled:!0};d.add(f,"punctualLightsEnabled").onChange(u),d.open();const e=new _({antialias:!0});e.setSize(r.value.offsetWidth,r.value.offsetWidth/2),e.toneMapping=J,e.toneMappingExposure=1,e.outputEncoding=void 0,e.useLegacyLights=!1,r.value.appendChild(e.domElement);const v=new D(p,e.domElement);v.addEventListener("change",o),v.minDistance=2,v.maxDistance=10,v.target.set(0,1,0),v.update(),window.addEventListener("resize",i);function i(){e.setSize(r.value.offsetWidth,r.value.offsetWidth/2),o()}function u(h){s.traverse(function(a){a.isLight&&(a.visible=h)}),o()}function o(){e.render(s,p)}o()},F=E(),k=()=>{const s=new S,p=new T(90,2,.1,1e3);p.position.y=5,new z().loadAsync("./assets/textures/2k.hdr").then(i=>{i.mapping=I,s.background=i,s.environment=i});const l=new aa({vertexShader:`
            precision lowp float;
            varying vec4 vPosition;
            varying vec4 gPosition;
            void main(){
                vec4 modelPosition = modelMatrix * vec4( position, 1.0 );

                vPosition = modelPosition;
                gPosition = vec4( position, 1.0 );
                gl_Position =  projectionMatrix * viewMatrix * modelPosition;
            }
        `,fragmentShader:`
            precision lowp float;
            varying vec4 vPosition;
            varying vec4 gPosition;

            void main(){
                vec4 redColor = vec4(1,0,0,1);
                vec4 yellowColor = vec4(1,1,0.5,1);
                vec4 mixColor = mix(yellowColor,redColor,gPosition.y/3.0);

                if(gl_FrontFacing){
                    gl_FragColor = vec4(mixColor.xyz-(vPosition.y-20.0)/80.0-0.1,1);
                    // gl_FragColor = vec4(1,1,1,1);
                }else{
                    gl_FragColor = vec4(mixColor.xyz,1);
                }
            }  
        `,uniforms:{},side:Z}),n=new _;n.outputEncoding=void 0,n.toneMapping=J,n.toneMappingExposure=.2;const b=new W;let d=null;b.load("./assets/models/flyLight.glb",i=>{d=i.scene.children[0],d.material=l;for(let u=0;u<150;u++){let o=i.scene.clone(!0),h=(Math.random()-.5)*300,a=(Math.random()-.5)*300,g=Math.random()*60+25;o.position.set(h,g,a),j.to(o.rotation,{y:2*Math.PI,duration:10+Math.random()*30,repeat:-1}),j.to(o.position,{x:"+="+Math.random()*5,y:"+="+Math.random()*20,yoyo:!0,duration:5+Math.random()*10,repeat:-1}),s.add(o)}}),n.setSize(F.value.offsetWidth,F.value.offsetWidth/2),window.addEventListener("resize",()=>{n.setSize(F.value.offsetWidth,F.value.offsetWidth/2),n.setPixelRatio(window.devicePixelRatio)}),F.value.appendChild(n.domElement);const f=new D(p,n.domElement);f.enableDamping=!0,f.update(),f.autoRotate=!0,f.autoRotateSpeed=.1,f.maxPolarAngle=Math.PI/3*2,f.minPolarAngle=Math.PI/3*2;const e=new fa;function v(i){e.getElapsedTime(),requestAnimationFrame(v),n.render(s,p)}v()},y=E(),H=()=>{const s=new S,p=new T(45,2,1,2e3);p.position.z=20,s.add(new ea(1118498));function w(a){const C=new oa(a,2,20);C.castShadow=!0,C.shadow.bias=-.005;let L=new O(.3,12,6),x=new pa({color:a});x.color.multiplyScalar(2);let A=new R(L,x);C.add(A);const B=new da(u());return B.magFilter=va,B.wrapT=V,B.wrapS=V,B.repeat.set(1,4.5),L=new O(2,32,8),x=new N({side:Z,alphaMap:B,alphaTest:.5}),A=new R(L,x),A.castShadow=!0,A.receiveShadow=!0,C.add(A),C}const l=w(35071);s.add(l);const n=w(16746632);s.add(n);const b=new sa(30,30,30),d=new N({color:10530223,shininess:10,specular:1118481,side:na}),f=new R(b,d);f.position.y=10,f.receiveShadow=!0,s.add(f);const e=new _({antialias:!0});e.setPixelRatio(window.devicePixelRatio),e.setSize(y.value.offsetWidth,y.value.offsetWidth/2),e.shadowMap.enabled=!0,e.shadowMap.type=ta,y.value.appendChild(e.domElement);const v=new D(p,e.domElement);v.target.set(0,10,0),v.update(),window.addEventListener("resize",i);function i(){e.setSize(y.value.offsetWidth,y.value.offsetWidth/2)}function u(){const a=document.createElement("canvas");a.width=2,a.height=2;const g=a.getContext("2d");return g.fillStyle="white",g.fillRect(0,1,2,1),a}function o(){requestAnimationFrame(o),h()}function h(){let a=performance.now()*.001;l.position.x=Math.sin(a*.6)*9,l.position.y=Math.sin(a*.7)*9+6,l.position.z=Math.sin(a*.8)*9,l.rotation.x=a,l.rotation.z=a,a+=1e4,n.position.x=Math.sin(a*.6)*9,n.position.y=Math.sin(a*.7)*9+6,n.position.z=Math.sin(a*.8)*9,n.rotation.x=a,n.rotation.z=a,e.render(s,p)}o()};G(async()=>{m=await X(()=>import("./dat.gui.module-DNo137I2.js"),[]),k(),M(),H()});const q={get dat(){return m},set dat(s){m=s},lightRef:r,initLights:M,lanternRef:F,initLantern:k,pointLightRef:y,initPointLight:H,ref:E,onMounted:G,get THREE(){return la},get OrbitControls(){return D},get gsap(){return j},get RGBELoader(){return z},get GLTFLoader(){return W},get Water(){return ia}};return Object.defineProperty(q,"__isScriptSetup",{enumerable:!1,value:!0}),q}},ca={ref:"lightRef",class:"light"},Fa={ref:"lanternRef"},ya={ref:"pointLightRef"};function ua($,t,m,r,M,F){return Y(),K("div",null,[t[0]||(t[0]=P(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-e4aeff76><pre class="shiki dracula vp-code" data-v-e4aeff76><code data-v-e4aeff76><span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>//遍历场景中的所有对象，然后判断当前对象是否是光源对象</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>function</span><span style="color:#50FA7B;" data-v-e4aeff76> toggleLights</span><span style="color:#F8F8F2;" data-v-e4aeff76>( </span><span style="color:#FFB86C;font-style:italic;" data-v-e4aeff76>visible</span><span style="color:#F8F8F2;" data-v-e4aeff76> ) {</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76> scene.</span><span style="color:#50FA7B;" data-v-e4aeff76>traverse</span><span style="color:#F8F8F2;" data-v-e4aeff76>( </span><span style="color:#FF79C6;" data-v-e4aeff76>function</span><span style="color:#F8F8F2;" data-v-e4aeff76> ( </span><span style="color:#FFB86C;font-style:italic;" data-v-e4aeff76>object</span><span style="color:#F8F8F2;" data-v-e4aeff76> ) {</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>  if</span><span style="color:#F8F8F2;" data-v-e4aeff76> ( object.isLight ) {</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>   object.visible </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#F8F8F2;" data-v-e4aeff76> visible;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  }</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76> } );</span></span>
<span class="line" data-v-e4aeff76><span style="color:#50FA7B;" data-v-e4aeff76> render</span><span style="color:#F8F8F2;" data-v-e4aeff76>();</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-e4aeff76><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div></div></div>`,1)),c("div",ca,null,512),t[1]||(t[1]=P(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-e4aeff76><pre class="shiki dracula vp-code" data-v-e4aeff76><code data-v-e4aeff76><span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>    const</span><span style="color:#F8F8F2;" data-v-e4aeff76> shaderMaterial </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e4aeff76> new</span><span style="color:#BD93F9;" data-v-e4aeff76> THREE</span><span style="color:#F8F8F2;" data-v-e4aeff76>.</span><span style="color:#50FA7B;" data-v-e4aeff76>ShaderMaterial</span><span style="color:#F8F8F2;" data-v-e4aeff76>({</span></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>        // 定义顶点着色器，用于处理顶点属性</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>        vertexShader</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#F1FA8C;" data-v-e4aeff76> \`</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>            precision lowp float;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>            // 传递顶点位置信息到片元着色器</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>            varying vec4 vPosition;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>            // 传递变换后的顶点位置信息到片元着色器</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>            varying vec4 gPosition;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>            void main(){</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                // 将顶点坐标从模型空间变换到世界空间</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                vec4 modelPosition = modelMatrix * vec4( position, 1.0 );</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                // 将变换后的顶点坐标从世界空间变换到相机空间</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                // 并传递给 varying vPosition</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                vPosition = modelPosition;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                // 将顶点坐标从模型空间变换到世界空间</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                // 并传递给 varying gPosition</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                gPosition = vec4( position, 1.0 );</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                // 将顶点坐标从模型空间变换到相机空间和投影空间</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                gl_Position =  projectionMatrix * viewMatrix * modelPosition;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>            }</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>        \`</span><span style="color:#F8F8F2;" data-v-e4aeff76>,</span></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>        // 定义片元着色器，用于处理像素颜色</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>        fragmentShader</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#F1FA8C;" data-v-e4aeff76>\`</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>            precision lowp float;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>            // 接收来自顶点着色器的变量</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>            varying vec4 vPosition;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>            varying vec4 gPosition;</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>            void main(){</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                // 定义红色和黄色的颜色值</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                vec4 redColor = vec4(1,0,0,1);</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                vec4 yellowColor = vec4(1,1,0.5,1);</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                // 计算需要混合的颜色值，并传递给 gl_FragColor</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                vec4 mixColor = mix(yellowColor,redColor,gPosition.y/3.0);</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                if(gl_FrontFacing){</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                    // 对于正面的面，计算并设置像素颜色</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                    gl_FragColor = vec4(mixColor.xyz-(vPosition.y-20.0)/80.0-0.1,1);</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                }else{</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                    // 对于背面的面，直接设置像素颜色</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                    gl_FragColor = vec4(mixColor.xyz,1);</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>                }</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>            }  </span></span>
<span class="line" data-v-e4aeff76><span style="color:#F1FA8C;" data-v-e4aeff76>        \`</span><span style="color:#F8F8F2;" data-v-e4aeff76>,</span></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>        // 传递给着色器的变量，这里为空对象</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>        uniforms</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#F8F8F2;" data-v-e4aeff76>{},</span></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>        // 设置物体的两面都需要渲染</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>        side</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#BD93F9;" data-v-e4aeff76>THREE</span><span style="color:#F8F8F2;" data-v-e4aeff76>.DoubleSide</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>    })</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>    const</span><span style="color:#F8F8F2;" data-v-e4aeff76> gltfLoader </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e4aeff76> new</span><span style="color:#50FA7B;" data-v-e4aeff76> GLTFLoader</span><span style="color:#F8F8F2;" data-v-e4aeff76>()</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>    let</span><span style="color:#F8F8F2;" data-v-e4aeff76> LightBox </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#BD93F9;" data-v-e4aeff76> null</span><span style="color:#F8F8F2;" data-v-e4aeff76> </span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>    gltfLoader.</span><span style="color:#50FA7B;" data-v-e4aeff76>load</span><span style="color:#F8F8F2;" data-v-e4aeff76>(</span><span style="color:#E9F284;" data-v-e4aeff76>&quot;</span><span style="color:#F1FA8C;" data-v-e4aeff76>/blog/assets/model/flyLight.glb</span><span style="color:#E9F284;" data-v-e4aeff76>&quot;</span><span style="color:#F8F8F2;" data-v-e4aeff76>,(</span><span style="color:#FFB86C;font-style:italic;" data-v-e4aeff76>gltf</span><span style="color:#F8F8F2;" data-v-e4aeff76>) </span><span style="color:#FF79C6;" data-v-e4aeff76>=&gt;</span><span style="color:#F8F8F2;" data-v-e4aeff76> {</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>        LightBox </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#F8F8F2;" data-v-e4aeff76> gltf.scene.children[</span><span style="color:#BD93F9;" data-v-e4aeff76>1</span><span style="color:#F8F8F2;" data-v-e4aeff76>]</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>        LightBox.material </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#F8F8F2;" data-v-e4aeff76> shaderMaterial;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>        </span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>        for</span><span style="color:#F8F8F2;" data-v-e4aeff76> (</span><span style="color:#FF79C6;" data-v-e4aeff76>let</span><span style="color:#F8F8F2;" data-v-e4aeff76> i </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#BD93F9;" data-v-e4aeff76> 0</span><span style="color:#F8F8F2;" data-v-e4aeff76>; i </span><span style="color:#FF79C6;" data-v-e4aeff76>&lt;</span><span style="color:#BD93F9;" data-v-e4aeff76> 150</span><span style="color:#F8F8F2;" data-v-e4aeff76>; i</span><span style="color:#FF79C6;" data-v-e4aeff76>++</span><span style="color:#F8F8F2;" data-v-e4aeff76>) {</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>          let</span><span style="color:#F8F8F2;" data-v-e4aeff76> flyLight </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#F8F8F2;" data-v-e4aeff76> gltf.scene.</span><span style="color:#50FA7B;" data-v-e4aeff76>clone</span><span style="color:#F8F8F2;" data-v-e4aeff76>(</span><span style="color:#BD93F9;" data-v-e4aeff76>true</span><span style="color:#F8F8F2;" data-v-e4aeff76>);</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>          let</span><span style="color:#F8F8F2;" data-v-e4aeff76> x </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#F8F8F2;" data-v-e4aeff76> (Math.</span><span style="color:#50FA7B;" data-v-e4aeff76>random</span><span style="color:#F8F8F2;" data-v-e4aeff76>() </span><span style="color:#FF79C6;" data-v-e4aeff76>-</span><span style="color:#BD93F9;" data-v-e4aeff76> 0.5</span><span style="color:#F8F8F2;" data-v-e4aeff76>) </span><span style="color:#FF79C6;" data-v-e4aeff76>*</span><span style="color:#BD93F9;" data-v-e4aeff76> 300</span><span style="color:#F8F8F2;" data-v-e4aeff76>;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>          let</span><span style="color:#F8F8F2;" data-v-e4aeff76> z </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#F8F8F2;" data-v-e4aeff76> (Math.</span><span style="color:#50FA7B;" data-v-e4aeff76>random</span><span style="color:#F8F8F2;" data-v-e4aeff76>() </span><span style="color:#FF79C6;" data-v-e4aeff76>-</span><span style="color:#BD93F9;" data-v-e4aeff76> 0.5</span><span style="color:#F8F8F2;" data-v-e4aeff76>) </span><span style="color:#FF79C6;" data-v-e4aeff76>*</span><span style="color:#BD93F9;" data-v-e4aeff76> 300</span><span style="color:#F8F8F2;" data-v-e4aeff76>;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>          let</span><span style="color:#F8F8F2;" data-v-e4aeff76> y </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#F8F8F2;" data-v-e4aeff76> Math.</span><span style="color:#50FA7B;" data-v-e4aeff76>random</span><span style="color:#F8F8F2;" data-v-e4aeff76>() </span><span style="color:#FF79C6;" data-v-e4aeff76>*</span><span style="color:#BD93F9;" data-v-e4aeff76> 60</span><span style="color:#FF79C6;" data-v-e4aeff76> +</span><span style="color:#BD93F9;" data-v-e4aeff76> 25</span><span style="color:#F8F8F2;" data-v-e4aeff76>;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>          flyLight.position.</span><span style="color:#50FA7B;" data-v-e4aeff76>set</span><span style="color:#F8F8F2;" data-v-e4aeff76>(x, y, z);</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>          gsap.</span><span style="color:#50FA7B;" data-v-e4aeff76>to</span><span style="color:#F8F8F2;" data-v-e4aeff76>(flyLight.rotation, {</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>            y</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#BD93F9;" data-v-e4aeff76> 2</span><span style="color:#FF79C6;" data-v-e4aeff76> *</span><span style="color:#F8F8F2;" data-v-e4aeff76> Math.</span><span style="color:#BD93F9;" data-v-e4aeff76>PI</span><span style="color:#F8F8F2;" data-v-e4aeff76>,</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>            duration</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#BD93F9;" data-v-e4aeff76> 10</span><span style="color:#FF79C6;" data-v-e4aeff76> +</span><span style="color:#F8F8F2;" data-v-e4aeff76> Math.</span><span style="color:#50FA7B;" data-v-e4aeff76>random</span><span style="color:#F8F8F2;" data-v-e4aeff76>() </span><span style="color:#FF79C6;" data-v-e4aeff76>*</span><span style="color:#BD93F9;" data-v-e4aeff76> 30</span><span style="color:#F8F8F2;" data-v-e4aeff76>,</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>            repeat</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#FF79C6;" data-v-e4aeff76> -</span><span style="color:#BD93F9;" data-v-e4aeff76>1</span><span style="color:#F8F8F2;" data-v-e4aeff76>,</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>          });</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>          gsap.</span><span style="color:#50FA7B;" data-v-e4aeff76>to</span><span style="color:#F8F8F2;" data-v-e4aeff76>(flyLight.position, {</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>            x</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#E9F284;" data-v-e4aeff76> &quot;</span><span style="color:#F1FA8C;" data-v-e4aeff76>+=</span><span style="color:#E9F284;" data-v-e4aeff76>&quot;</span><span style="color:#FF79C6;" data-v-e4aeff76> +</span><span style="color:#F8F8F2;" data-v-e4aeff76> Math.</span><span style="color:#50FA7B;" data-v-e4aeff76>random</span><span style="color:#F8F8F2;" data-v-e4aeff76>() </span><span style="color:#FF79C6;" data-v-e4aeff76>*</span><span style="color:#BD93F9;" data-v-e4aeff76> 5</span><span style="color:#F8F8F2;" data-v-e4aeff76>,</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>            y</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#E9F284;" data-v-e4aeff76> &quot;</span><span style="color:#F1FA8C;" data-v-e4aeff76>+=</span><span style="color:#E9F284;" data-v-e4aeff76>&quot;</span><span style="color:#FF79C6;" data-v-e4aeff76> +</span><span style="color:#F8F8F2;" data-v-e4aeff76> Math.</span><span style="color:#50FA7B;" data-v-e4aeff76>random</span><span style="color:#F8F8F2;" data-v-e4aeff76>() </span><span style="color:#FF79C6;" data-v-e4aeff76>*</span><span style="color:#BD93F9;" data-v-e4aeff76> 20</span><span style="color:#F8F8F2;" data-v-e4aeff76>,</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>            yoyo</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#BD93F9;" data-v-e4aeff76> true</span><span style="color:#F8F8F2;" data-v-e4aeff76>,</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>            duration</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#BD93F9;" data-v-e4aeff76> 5</span><span style="color:#FF79C6;" data-v-e4aeff76> +</span><span style="color:#F8F8F2;" data-v-e4aeff76> Math.</span><span style="color:#50FA7B;" data-v-e4aeff76>random</span><span style="color:#F8F8F2;" data-v-e4aeff76>() </span><span style="color:#FF79C6;" data-v-e4aeff76>*</span><span style="color:#BD93F9;" data-v-e4aeff76> 10</span><span style="color:#F8F8F2;" data-v-e4aeff76>,</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>            repeat</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#FF79C6;" data-v-e4aeff76> -</span><span style="color:#BD93F9;" data-v-e4aeff76>1</span><span style="color:#F8F8F2;" data-v-e4aeff76>,</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>          });</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>          scene.</span><span style="color:#50FA7B;" data-v-e4aeff76>add</span><span style="color:#F8F8F2;" data-v-e4aeff76>(flyLight);</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>        }</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>    })</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-e4aeff76><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div></div></div>`,1)),c("div",Fa,null,512),t[2]||(t[2]=P(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#F8F8F2;" data-v-e4aeff76><pre class="shiki dracula vp-code" data-v-e4aeff76><code data-v-e4aeff76><span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>function</span><span style="color:#50FA7B;" data-v-e4aeff76> createLight</span><span style="color:#F8F8F2;" data-v-e4aeff76>(</span><span style="color:#FFB86C;font-style:italic;" data-v-e4aeff76>color</span><span style="color:#F8F8F2;" data-v-e4aeff76>) {</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 定义光源强度为2</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>  const</span><span style="color:#F8F8F2;" data-v-e4aeff76> intensity </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#BD93F9;" data-v-e4aeff76> 2</span><span style="color:#F8F8F2;" data-v-e4aeff76>;</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 创建一个点光源</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>  const</span><span style="color:#F8F8F2;" data-v-e4aeff76> light </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e4aeff76> new</span><span style="color:#BD93F9;" data-v-e4aeff76> THREE</span><span style="color:#F8F8F2;" data-v-e4aeff76>.</span><span style="color:#50FA7B;" data-v-e4aeff76>PointLight</span><span style="color:#F8F8F2;" data-v-e4aeff76>(color, intensity, </span><span style="color:#BD93F9;" data-v-e4aeff76>20</span><span style="color:#F8F8F2;" data-v-e4aeff76>);</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 开启阴影</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  light.castShadow </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#BD93F9;" data-v-e4aeff76> true</span><span style="color:#F8F8F2;" data-v-e4aeff76>;</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 减少双面对象自身阴影</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  light.shadow.bias </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#FF79C6;" data-v-e4aeff76> -</span><span style="color:#BD93F9;" data-v-e4aeff76>0.005</span><span style="color:#F8F8F2;" data-v-e4aeff76>;</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 创建一个球体作为光源的可视化表示</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>  let</span><span style="color:#F8F8F2;" data-v-e4aeff76> geometry </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e4aeff76> new</span><span style="color:#BD93F9;" data-v-e4aeff76> THREE</span><span style="color:#F8F8F2;" data-v-e4aeff76>.</span><span style="color:#50FA7B;" data-v-e4aeff76>SphereGeometry</span><span style="color:#F8F8F2;" data-v-e4aeff76>(</span><span style="color:#BD93F9;" data-v-e4aeff76>0.3</span><span style="color:#F8F8F2;" data-v-e4aeff76>, </span><span style="color:#BD93F9;" data-v-e4aeff76>12</span><span style="color:#F8F8F2;" data-v-e4aeff76>, </span><span style="color:#BD93F9;" data-v-e4aeff76>6</span><span style="color:#F8F8F2;" data-v-e4aeff76>);</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>  let</span><span style="color:#F8F8F2;" data-v-e4aeff76> material </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e4aeff76> new</span><span style="color:#BD93F9;" data-v-e4aeff76> THREE</span><span style="color:#F8F8F2;" data-v-e4aeff76>.</span><span style="color:#50FA7B;" data-v-e4aeff76>MeshBasicMaterial</span><span style="color:#F8F8F2;" data-v-e4aeff76>({</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>    color</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#F8F8F2;" data-v-e4aeff76> color</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  });</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 根据光源强度调整颜色</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  material.color.</span><span style="color:#50FA7B;" data-v-e4aeff76>multiplyScalar</span><span style="color:#F8F8F2;" data-v-e4aeff76>(intensity);</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>  let</span><span style="color:#F8F8F2;" data-v-e4aeff76> sphere </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e4aeff76> new</span><span style="color:#BD93F9;" data-v-e4aeff76> THREE</span><span style="color:#F8F8F2;" data-v-e4aeff76>.</span><span style="color:#50FA7B;" data-v-e4aeff76>Mesh</span><span style="color:#F8F8F2;" data-v-e4aeff76>(geometry, material);</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 将球体添加到光源上</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  light.</span><span style="color:#50FA7B;" data-v-e4aeff76>add</span><span style="color:#F8F8F2;" data-v-e4aeff76>(sphere);</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 生成纹理</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>  const</span><span style="color:#F8F8F2;" data-v-e4aeff76> texture </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e4aeff76> new</span><span style="color:#BD93F9;" data-v-e4aeff76> THREE</span><span style="color:#F8F8F2;" data-v-e4aeff76>.</span><span style="color:#50FA7B;" data-v-e4aeff76>CanvasTexture</span><span style="color:#F8F8F2;" data-v-e4aeff76>(</span><span style="color:#50FA7B;" data-v-e4aeff76>generateTexture</span><span style="color:#F8F8F2;" data-v-e4aeff76>());</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 设置纹理过滤器和重复方式</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  texture.magFilter </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#BD93F9;" data-v-e4aeff76> THREE</span><span style="color:#F8F8F2;" data-v-e4aeff76>.NearestFilter;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  texture.wrapT </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#BD93F9;" data-v-e4aeff76> THREE</span><span style="color:#F8F8F2;" data-v-e4aeff76>.RepeatWrapping;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  texture.wrapS </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#BD93F9;" data-v-e4aeff76> THREE</span><span style="color:#F8F8F2;" data-v-e4aeff76>.RepeatWrapping;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  texture.repeat.</span><span style="color:#50FA7B;" data-v-e4aeff76>set</span><span style="color:#F8F8F2;" data-v-e4aeff76>(</span><span style="color:#BD93F9;" data-v-e4aeff76>1</span><span style="color:#F8F8F2;" data-v-e4aeff76>, </span><span style="color:#BD93F9;" data-v-e4aeff76>4.5</span><span style="color:#F8F8F2;" data-v-e4aeff76>);</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 创建一个球体作为光源的光晕效果</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  geometry </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e4aeff76> new</span><span style="color:#BD93F9;" data-v-e4aeff76> THREE</span><span style="color:#F8F8F2;" data-v-e4aeff76>.</span><span style="color:#50FA7B;" data-v-e4aeff76>SphereGeometry</span><span style="color:#F8F8F2;" data-v-e4aeff76>(</span><span style="color:#BD93F9;" data-v-e4aeff76>2</span><span style="color:#F8F8F2;" data-v-e4aeff76>, </span><span style="color:#BD93F9;" data-v-e4aeff76>32</span><span style="color:#F8F8F2;" data-v-e4aeff76>, </span><span style="color:#BD93F9;" data-v-e4aeff76>8</span><span style="color:#F8F8F2;" data-v-e4aeff76>);</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  material </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e4aeff76> new</span><span style="color:#BD93F9;" data-v-e4aeff76> THREE</span><span style="color:#F8F8F2;" data-v-e4aeff76>.</span><span style="color:#50FA7B;" data-v-e4aeff76>MeshPhongMaterial</span><span style="color:#F8F8F2;" data-v-e4aeff76>({</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>    side</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#BD93F9;" data-v-e4aeff76> THREE</span><span style="color:#F8F8F2;" data-v-e4aeff76>.DoubleSide, </span><span style="color:#6272A4;" data-v-e4aeff76>// 双面显示</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>    alphaMap</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#F8F8F2;" data-v-e4aeff76> texture, </span><span style="color:#6272A4;" data-v-e4aeff76>// 设置透明度贴图</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>    alphaTest</span><span style="color:#FF79C6;" data-v-e4aeff76>:</span><span style="color:#BD93F9;" data-v-e4aeff76> 0.5</span><span style="color:#6272A4;" data-v-e4aeff76> // 设置透明度阈值</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  });</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  sphere </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#FF79C6;font-weight:bold;" data-v-e4aeff76> new</span><span style="color:#BD93F9;" data-v-e4aeff76> THREE</span><span style="color:#F8F8F2;" data-v-e4aeff76>.</span><span style="color:#50FA7B;" data-v-e4aeff76>Mesh</span><span style="color:#F8F8F2;" data-v-e4aeff76>(geometry, material);</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 开启球体阴影和接收阴影</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  sphere.castShadow </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#BD93F9;" data-v-e4aeff76> true</span><span style="color:#F8F8F2;" data-v-e4aeff76>;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  sphere.receiveShadow </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#BD93F9;" data-v-e4aeff76> true</span><span style="color:#F8F8F2;" data-v-e4aeff76>;</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 将球体添加到光源上</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  light.</span><span style="color:#50FA7B;" data-v-e4aeff76>add</span><span style="color:#F8F8F2;" data-v-e4aeff76>(sphere);</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 返回创建的光源</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>  return</span><span style="color:#F8F8F2;" data-v-e4aeff76> light;</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>}</span></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>/**</span></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76> * 生成一个 2x2 的纯白色 canvas 纹理</span></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76> */</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>function</span><span style="color:#50FA7B;" data-v-e4aeff76> generateTexture</span><span style="color:#F8F8F2;" data-v-e4aeff76>() {</span></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 创建一个 canvas 元素，并设置它的宽高为 2</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>  const</span><span style="color:#F8F8F2;" data-v-e4aeff76> canvas </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#F8F8F2;" data-v-e4aeff76> document.</span><span style="color:#50FA7B;" data-v-e4aeff76>createElement</span><span style="color:#F8F8F2;" data-v-e4aeff76>( </span><span style="color:#E9F284;" data-v-e4aeff76>&#39;</span><span style="color:#F1FA8C;" data-v-e4aeff76>canvas</span><span style="color:#E9F284;" data-v-e4aeff76>&#39;</span><span style="color:#F8F8F2;" data-v-e4aeff76> );</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  canvas.width </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#BD93F9;" data-v-e4aeff76> 2</span><span style="color:#F8F8F2;" data-v-e4aeff76>;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  canvas.height </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#BD93F9;" data-v-e4aeff76> 2</span><span style="color:#F8F8F2;" data-v-e4aeff76>;</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 获取 canvas 的绘制上下文，并将其填充为白色</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>  const</span><span style="color:#F8F8F2;" data-v-e4aeff76> context </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#F8F8F2;" data-v-e4aeff76> canvas.</span><span style="color:#50FA7B;" data-v-e4aeff76>getContext</span><span style="color:#F8F8F2;" data-v-e4aeff76>( </span><span style="color:#E9F284;" data-v-e4aeff76>&#39;</span><span style="color:#F1FA8C;" data-v-e4aeff76>2d</span><span style="color:#E9F284;" data-v-e4aeff76>&#39;</span><span style="color:#F8F8F2;" data-v-e4aeff76> );</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  context.fillStyle </span><span style="color:#FF79C6;" data-v-e4aeff76>=</span><span style="color:#E9F284;" data-v-e4aeff76> &#39;</span><span style="color:#F1FA8C;" data-v-e4aeff76>white</span><span style="color:#E9F284;" data-v-e4aeff76>&#39;</span><span style="color:#F8F8F2;" data-v-e4aeff76>;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>  context.</span><span style="color:#50FA7B;" data-v-e4aeff76>fillRect</span><span style="color:#F8F8F2;" data-v-e4aeff76>( </span><span style="color:#BD93F9;" data-v-e4aeff76>0</span><span style="color:#F8F8F2;" data-v-e4aeff76>, </span><span style="color:#BD93F9;" data-v-e4aeff76>1</span><span style="color:#F8F8F2;" data-v-e4aeff76>, </span><span style="color:#BD93F9;" data-v-e4aeff76>2</span><span style="color:#F8F8F2;" data-v-e4aeff76>, </span><span style="color:#BD93F9;" data-v-e4aeff76>1</span><span style="color:#F8F8F2;" data-v-e4aeff76> );</span></span>
<span class="line" data-v-e4aeff76></span>
<span class="line" data-v-e4aeff76><span style="color:#6272A4;" data-v-e4aeff76>  // 返回生成的纹理</span></span>
<span class="line" data-v-e4aeff76><span style="color:#FF79C6;" data-v-e4aeff76>  return</span><span style="color:#F8F8F2;" data-v-e4aeff76> canvas;</span></span>
<span class="line" data-v-e4aeff76><span style="color:#F8F8F2;" data-v-e4aeff76>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;" data-v-e4aeff76><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div><div class="line-number" data-v-e4aeff76></div></div></div>`,1)),c("div",ya,null,512),t[3]||(t[3]=c("h1",{id:"参考",tabindex:"-1"},[c("a",{class:"header-anchor",href:"#参考"},[c("span",null,"参考")])],-1)),t[4]||(t[4]=c("p",null,[Q("参考："),c("a",{href:"https://threejs.org/",target:"_blank",rel:"noopener noreferrer"},"https://threejs.org/")],-1))])}const wa=U(ra,[["render",ua],["__scopeId","data-v-e4aeff76"],["__file","threejs-light.html.vue"]]),xa=JSON.parse('{"path":"/threejs/threejs-light.html","title":"ThreeJS中的灯光","lang":"en-US","frontmatter":{"title":"ThreeJS中的灯光","category":["ThreeJS"],"date":"2022-03-07T00:00:00.000Z","description":"参考 参考：https://threejs.org/","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/threejs/threejs-light.html"}],["meta",{"property":"og:title","content":"ThreeJS中的灯光"}],["meta",{"property":"og:description","content":"参考 参考：https://threejs.org/"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-10T14:15:12.000Z"}],["meta",{"property":"article:published_time","content":"2022-03-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-10T14:15:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ThreeJS中的灯光\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-07T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-10T14:15:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"git":{"createdTime":1682066702000,"updatedTime":1731248112000,"contributors":[{"name":"卢祥","username":"卢祥","email":"example@qq.com","commits":2,"url":"https://github.com/卢祥"},{"name":"luxiag","username":"luxiag","email":"luxiag@qq.com","commits":6,"url":"https://github.com/luxiag"}]},"readingTime":{"minutes":5.53,"words":1658},"filePathRelative":"threejs/threejs-light.md","localizedDate":"March 7, 2022","excerpt":"<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"background-color:#282A36;color:#F8F8F2\\"><pre class=\\"shiki dracula vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#6272A4\\">//遍历场景中的所有对象，然后判断当前对象是否是光源对象</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">function</span><span style=\\"color:#50FA7B\\"> toggleLights</span><span style=\\"color:#F8F8F2\\">( </span><span style=\\"color:#FFB86C;font-style:italic\\">visible</span><span style=\\"color:#F8F8F2\\"> ) {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\"> scene.</span><span style=\\"color:#50FA7B\\">traverse</span><span style=\\"color:#F8F8F2\\">( </span><span style=\\"color:#FF79C6\\">function</span><span style=\\"color:#F8F8F2\\"> ( </span><span style=\\"color:#FFB86C;font-style:italic\\">object</span><span style=\\"color:#F8F8F2\\"> ) {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">  if</span><span style=\\"color:#F8F8F2\\"> ( object.isLight ) {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">   object.visible </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> visible;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\"> } );</span></span>\\n<span class=\\"line\\"><span style=\\"color:#50FA7B\\"> render</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{wa as comp,xa as data};
