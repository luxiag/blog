import{_ as n,c as a,a as l,o}from"./app-DsmKNl15.js";const e={};function p(i,s){return o(),a("div",null,s[0]||(s[0]=[l(`<h1 id="json文件配置" tabindex="-1"><a class="header-anchor" href="#json文件配置"><span>Json文件配置</span></a></h1><ul><li>创建一个json文件，例如test.json,右键设置“如果较新则复制”</li><li>NuGet安装Microsoft.Extensions.Configuration和Microsoft.Extensions.Configuration.Json</li></ul><p><code>test.json</code></p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">{   </span></span>
<span class="line"><span style="color:#8BE9FE;">    &quot;</span><span style="color:#8BE9FD;">port</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;">8080</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#8BE9FE;">    &quot;</span><span style="color:#8BE9FD;">proxy</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#8BE9FE;">       &quot;</span><span style="color:#8BE9FD;">address</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">https://example.com</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#8BE9FE;">       &quot;</span><span style="color:#8BE9FD;">class</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#8BE9FE;">        &quot;</span><span style="color:#8BE9FD;">className</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">red</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">       }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>xxx.cs</code></p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">using</span><span style="color:#8BE9FD;font-style:italic;"> Microsoft</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Extensions</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">Configuration</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">static</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Main</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">    ConfigurationBuilder</span><span style="color:#F8F8F2;"> configBuilder </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> ConfigurationBuilder</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">    //optional参数:表示文件是否可选，初学时，建议optional设置为false，这样写错了的话能够及时发现。</span></span>
<span class="line"><span style="color:#6272A4;">    //reloadOnChange参数：表示如果文件修改了，是否重新加载配置</span></span>
<span class="line"><span style="color:#F8F8F2;">    configBuilder.</span><span style="color:#50FA7B;">AddJsonFile</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">config.json</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">optional</span><span style="color:#F8F8F2;">: </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">reloadOnChange</span><span style="color:#F8F8F2;">: </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">    IConfigurationRoot</span><span style="color:#F8F8F2;"> config </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configBuilder.</span><span style="color:#50FA7B;">Build</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    //json的单结构读取</span></span>
<span class="line"><span style="color:#FF79C6;">    string</span><span style="color:#F8F8F2;"> port </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> config[</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">port</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">    Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">$&quot;</span><span style="color:#F1FA8C;">port=</span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">port</span><span style="color:#FF79C6;">}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    //json的多级结构采用proxy:address</span></span>
<span class="line"><span style="color:#FF79C6;">    string</span><span style="color:#F8F8F2;"> proxyAddress </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> config.</span><span style="color:#50FA7B;">GetSection</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">proxy:address</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">).Value;</span></span>
<span class="line"><span style="color:#FF79C6;">    string</span><span style="color:#F8F8F2;"> className</span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;">config.</span><span style="color:#50FA7B;">GetSection</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">proxy:class:className</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">).Value;</span></span>
<span class="line"><span style="color:#F8F8F2;">    Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">$&quot;</span><span style="color:#F1FA8C;">Address:</span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">proxyAddress</span><span style="color:#FF79C6;">}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">$&quot;</span><span style="color:#F1FA8C;">ClassName:</span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">className</span><span style="color:#FF79C6;">}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>绑定读取JSON方式</strong></p><ul><li>NuGet安装：Microsoft.Extensions.Configuration.Binder</li></ul><p><code>xxx.cs</code></p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">class</span><span style="color:#8BE9FD;"> Config</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> port {</span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">;</span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">;}</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> Proxy</span><span style="color:#F8F8F2;"> Proxy {</span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">;</span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">;}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">class</span><span style="color:#8BE9FD;"> Proxy</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> address {</span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">;</span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">;}</span></span>
<span class="line"><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">static</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Main</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">    ConfigurationBuilder</span><span style="color:#F8F8F2;"> configBuilder </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> ConfigurationBuilder</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">    //optional参数:表示文件是否可选，初学时，建议optional设置为false，这样写错了的话能够及时发现。</span></span>
<span class="line"><span style="color:#6272A4;">    //reloadOnChange参数：表示如果文件修改了，是否重新加载配置</span></span>
<span class="line"><span style="color:#F8F8F2;">    configBuilder.</span><span style="color:#50FA7B;">AddJsonFile</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">config.json</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">optional</span><span style="color:#F8F8F2;">: </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">reloadOnChange</span><span style="color:#F8F8F2;">: </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">    IConfigurationRoot</span><span style="color:#F8F8F2;"> configRoot </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configBuilder.</span><span style="color:#50FA7B;">Build</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    //</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">    Proxy</span><span style="color:#F8F8F2;"> proxy </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configRoot.</span><span style="color:#50FA7B;">GetSection</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">proxy</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">).</span><span style="color:#50FA7B;">Get</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">Proxy</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#F8F8F2;">    Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">$&quot;</span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">proxy</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">address</span><span style="color:#FF79C6;">}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    //多级结构</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">    Config</span><span style="color:#F8F8F2;"> config </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configRoot.</span><span style="color:#50FA7B;">Get</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">config</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#F8F8F2;">    Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(config.Name)</span></span>
<span class="line"><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h1><h2 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识"><span>基础知识</span></a></h2><p>配置的本质是键值对，微软对于配置提供了大量的配置源提供程序，包括xml，json，ini，环境变量，命令行参数，内存等等。还提供了一个扩展包用于配置绑定和类型转换。</p><ul><li><p>依赖项</p><p>Microsoft.Extensions.Configuration.Abstractions：抽象包，用于编写扩展时使用</p><p>Microsoft.Extensions.Configuration：基础包提供了内存配置的方案</p><p>Microsoft.Extensions.Configuration.Json：json支持</p><p>Microsoft.Extensions.Configuration.EnvironmentVariables：环境变量支持</p><p>Microsoft.Extensions.Configuration.CommandLine：命令行参数</p><p>Microsoft.Extensions.Configuration.Binder：用于配置绑定到实体或者基本类型</p></li><li><p>核心接口</p><p>IConfiguration：配置的核心接口，用于读取配置</p><p>IConfigurationRoot：表示根配置，继承IConfiguration接口</p><p>IConfigurationSection：表示子配置节点，继承IConfiguration接口</p><p>IConfigurationBuilder：提供了大量的扩展，用于构建IConfiguration实列。</p><p>ConfigurationManager：实现了IConfigurationRoot、IConfigurationBuilder接口。因此ConfigurationManager既可以用于构建配置，也可以读取配置。</p></li></ul><h2 id="注册配置" tabindex="-1"><a class="header-anchor" href="#注册配置"><span>注册配置</span></a></h2><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#8BE9FE;">  &quot;</span><span style="color:#8BE9FD;">MvcOptions</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#8BE9FE;">    &quot;</span><span style="color:#8BE9FD;">Host</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">127.0.0.1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#8BE9FE;">    &quot;</span><span style="color:#8BE9FD;">Port</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#BD93F9;"> 8080</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#8BE9FE;">    &quot;</span><span style="color:#8BE9FD;">Urls</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#E9F284;">      &quot;</span><span style="color:#F1FA8C;">http://127.0.0.1:80</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#E9F284;">      &quot;</span><span style="color:#F1FA8C;">http://127.0.0.1:81</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#E9F284;">      &quot;</span><span style="color:#F1FA8C;">http://127.0.0.1:82</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">    ]</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#8BE9FE;">  &quot;</span><span style="color:#8BE9FD;">ConnectionStrings</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#8BE9FE;">      &quot;</span><span style="color:#8BE9FD;">default</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">127.0.0.1</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }  </span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" data-title="c#" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> MvcOptions</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Host { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> Port { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" data-title="c#" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">//需要安装相应的依赖包</span></span>
<span class="line"><span style="color:#FF79C6;">static</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Main</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    var</span><span style="color:#F8F8F2;"> configurationBuilder </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> ConfigurationManager</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">    //内存配置源</span></span>
<span class="line"><span style="color:#F8F8F2;">    configurationBuilder.</span><span style="color:#50FA7B;">AddInMemoryCollection</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> Dictionary</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">&gt;()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        { </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">m1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">45</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">},</span></span>
<span class="line"><span style="color:#F8F8F2;">        { </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">m2</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">45</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#6272A4;">    //json配置源</span></span>
<span class="line"><span style="color:#F8F8F2;">    configurationBuilder.</span><span style="color:#50FA7B;">SetBasePath</span><span style="color:#F8F8F2;">(Directory.</span><span style="color:#50FA7B;">GetCurrentDirectory</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#50FA7B;">AddJsonFile</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">appsettings.json</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">    //命令行配置源</span></span>
<span class="line"><span style="color:#F8F8F2;">    configurationBuilder.</span><span style="color:#50FA7B;">AddCommandLine</span><span style="color:#F8F8F2;">(args);</span></span>
<span class="line"><span style="color:#6272A4;">    //环境变量配置源：可以指定前缀</span></span>
<span class="line"><span style="color:#F8F8F2;">    configurationBuilder.</span><span style="color:#50FA7B;">AddEnvironmentVariables</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">ASPNETCORE_</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="构建配置" tabindex="-1"><a class="header-anchor" href="#构建配置"><span>构建配置</span></a></h2><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" data-title="c#" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">//由于ConfigurationManager实现了IConfiguration接口，并且没有build方法</span></span>
<span class="line"><span style="color:#6272A4;">//因此构建很简单，或者你根本不需要构建，但是建议把配置和读取分开</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">IConfiguration</span><span style="color:#F8F8F2;"> configuration </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configurationBuilder;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="读取配置" tabindex="-1"><a class="header-anchor" href="#读取配置"><span>读取配置</span></a></h2><ul><li>基础接口</li></ul><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" data-title="c#" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">//通过索引读取配置</span></span>
<span class="line"><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;"> m1 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configuration[</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">m1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#6272A4;">//获取子配置</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">IConfigurationSection</span><span style="color:#F8F8F2;"> options </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configuration.</span><span style="color:#50FA7B;">GetSection</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">MvcOptions</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> host </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> options[</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Host</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#6272A4;">//获取数组</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">IEnumerable</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IConfigurationSection</span><span style="color:#F8F8F2;">&gt; sections </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configuration.</span><span style="color:#50FA7B;">GetSection</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">MvcOptions:Urls</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">).</span><span style="color:#50FA7B;">GetChildren</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#FF79C6;">foreach</span><span style="color:#F8F8F2;"> (</span><span style="color:#8BE9FD;font-style:italic;">IConfigurationSection</span><span style="color:#F8F8F2;"> item </span><span style="color:#FF79C6;">in</span><span style="color:#F8F8F2;"> sections)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    var</span><span style="color:#F8F8F2;"> url </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> item.Value;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#6272A4;">//内置的一个获取链接字符串的api</span></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> defaultConnectionString </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configuration.</span><span style="color:#50FA7B;">GetConnectionString</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">default</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>扩展接口，需要安装Binder支持</li></ul><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" data-title="c#" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">//将配置绑定到基本类型上，底层调用Convert.ToXXX();</span></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> host </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configuration.</span><span style="color:#50FA7B;">GetValue</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">&gt;(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">MvcOptions:Host</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> port </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configuration.</span><span style="color:#50FA7B;">GetValue</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">int</span><span style="color:#F8F8F2;">&gt;(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">MvcOptions:Port</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">//将配置绑定到实列上，底层调用GetValue</span></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> options1 </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> MvcOptions</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">configuration.</span><span style="color:#50FA7B;">Bind</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">MvcOptions</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, options);</span></span>
<span class="line"><span style="color:#6272A4;">//将配置绑定到实列上，并返回这个实列，底层调用Bind</span></span>
<span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> options2 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configuration.</span><span style="color:#50FA7B;">GetSection</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">MvcOptions</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">).</span><span style="color:#50FA7B;">Get</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">MvcOptions</span><span style="color:#F8F8F2;">&gt;();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="changetoken" tabindex="-1"><a class="header-anchor" href="#changetoken"><span>ChangeToken</span></a></h2><ul><li><p>依赖项</p><p>Microsoft.Extensions.Primitives：提供配置更改的核心接口和实现</p></li><li><p>核心接口</p><p>IChangeToken：用于注册回调</p><p>ChangeToken：用于绑定生产者和消费者，注册一个回调，如果更改发生就获取使用生成者生产一个新的IChangeToken，并执行消费者，并在次注册回调</p><p>CancellationChangeToken：IChangeToken的实现一种实现，</p><p>CancellationTokenSource：用于产生取消令牌，执行取消令牌，</p><p>CancellationToken：取消令牌，可以注册取消之后的回调。负责在CancellationChangeToken和CancellationTokenSource直接传递消息</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" data-title="c#" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">//当更改发送时</span></span>
<span class="line"><span style="color:#FF79C6;">private</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> OnChangeTokenFired</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#6272A4;">    //获取新的IChangeToken</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">    IChangeToken</span><span style="color:#F8F8F2;"> token </span><span style="color:#FF79C6;">=</span><span style="color:#50FA7B;"> _changeTokenProducer</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    try</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#6272A4;">        //执行消费者委托</span></span>
<span class="line"><span style="color:#50FA7B;">        _changeTokenConsumer</span><span style="color:#F8F8F2;">(_state);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#FF79C6;">    finally</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#6272A4;">        //使用新的token继续注册回调</span></span>
<span class="line"><span style="color:#50FA7B;">        RegisterChangeTokenCallback</span><span style="color:#F8F8F2;">(token);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">private</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> RegisterChangeTokenCallback</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IChangeToken</span><span style="color:#FFB86C;font-style:italic;"> token</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    if</span><span style="color:#F8F8F2;"> (token </span><span style="color:#FF79C6;">is</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#6272A4;">	//通过IChangeToken注册回调</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">    IDisposable</span><span style="color:#F8F8F2;"> registraton </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> token.</span><span style="color:#50FA7B;">RegisterChangeCallback</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">s</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> ((</span><span style="color:#8BE9FD;font-style:italic;">ChangeTokenRegistration</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">TState</span><span style="color:#F8F8F2;">&gt;)s).</span><span style="color:#50FA7B;">OnChangeTokenFired</span><span style="color:#F8F8F2;">(), </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">    SetDisposable</span><span style="color:#F8F8F2;">(registraton);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用案例</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" data-title="c#" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">internal</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Program</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    static</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Main</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> provider </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> FileConfigurationProvider</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">        //绑定</span></span>
<span class="line"><span style="color:#F8F8F2;">        provider.</span><span style="color:#50FA7B;">Watch</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#FF79C6;">        new</span><span style="color:#8BE9FD;font-style:italic;"> TaskCompletionSource</span><span style="color:#F8F8F2;">().Task.</span><span style="color:#50FA7B;">Wait</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">/// </span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">summary</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#6272A4;">/// 文件配置程序超类</span></span>
<span class="line"><span style="color:#6272A4;">/// </span><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">summary</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> FileConfigurationProvider</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#8BE9FD;font-style:italic;"> CancellationTokenSource</span><span style="color:#F8F8F2;">? tokenSource;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Load</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">$&quot;</span><span style="color:#F1FA8C;">[</span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">DateTime</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Now</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">]文件已加载...</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Watch</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#50FA7B;">        Load</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">        //将changeToken生产者和changeToken消费者进行绑定(订阅)</span></span>
<span class="line"><span style="color:#F8F8F2;">        ChangeToken.</span><span style="color:#50FA7B;">OnChange</span><span style="color:#F8F8F2;">(GetReloadToken, Load);</span></span>
<span class="line"><span style="color:#6272A4;">        //触发Change事件，通知更新</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> t </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> Thread</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#FF79C6;">            while</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F8F8F2;">                Thread.</span><span style="color:#50FA7B;">Sleep</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">3000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">                var</span><span style="color:#F8F8F2;"> t </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> tokenSource;</span></span>
<span class="line"><span style="color:#F8F8F2;">                tokenSource </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span><span style="color:#6272A4;">//取消之前一定要设置成null                </span></span>
<span class="line"><span style="color:#F8F8F2;">                t</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">Cancel</span><span style="color:#F8F8F2;">();</span><span style="color:#6272A4;">//执行回调，发布取消事件。</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">        });</span></span>
<span class="line"><span style="color:#F8F8F2;">        t.</span><span style="color:#50FA7B;">Start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    /// </span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">summary</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#6272A4;">    /// 更新令牌，通过该令牌可以注册回调，用于执行更新通知。</span></span>
<span class="line"><span style="color:#6272A4;">    /// </span><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">summary</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#6272A4;">    /// </span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">returns</span><span style="color:#F8F8F2;">&gt;&lt;/</span><span style="color:#FF79C6;">returns</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IChangeToken</span><span style="color:#50FA7B;"> GetReloadToken</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        lock</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#6272A4;">            //如果被消费就创建一个新的</span></span>
<span class="line"><span style="color:#FF79C6;">            if</span><span style="color:#F8F8F2;"> (tokenSource </span><span style="color:#FF79C6;">==</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F8F8F2;">                tokenSource </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> CancellationTokenSource</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#FF79C6;">            return</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> CancellationChangeToken</span><span style="color:#F8F8F2;">(tokenSource.Token);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行原理</p><p>CancellationChangeToken：接收到了CancellationToken，并把回调注册到CancellationToken上。</p><p>CancellationToken：构造器接收CancellationTokenSource即注册到CancellationToken的回调，本质上是注册到了CancellationTokenSource上。CancellationToken充当CancellationChangeToken和CancellationTokenSource的中间人。</p><p>CancellationTokenSource：执行Cancel，执行注册的回调，即执行了CancellationChangeToken中注册的回调。</p></li><li><p>执行流程</p><ol><li>首先执行Watch()</li><li>然后执行ChangeToken.OnChange</li><li>ChangeToken.OnChange执行生成者委托GetReloadToken，获取一个IChangeToken，然后注册了一个嵌套回调使得消费者和生产者永久绑定</li><li>3秒之后CancellationTokenSource通知取消，并执行CancellationTokenSource上的回调。</li></ol></li></ul><h2 id="监听更改" tabindex="-1"><a class="header-anchor" href="#监听更改"><span>监听更改</span></a></h2><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" data-title="c#" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">static</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Main</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    var</span><span style="color:#F8F8F2;"> configurationBuilder </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> ConfigurationManager</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">    //json配置源</span></span>
<span class="line"><span style="color:#F8F8F2;">    configurationBuilder.</span><span style="color:#50FA7B;">SetBasePath</span><span style="color:#F8F8F2;">(Directory.</span><span style="color:#50FA7B;">GetCurrentDirectory</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#6272A4;">        //需要设置reloadOnChange为true</span></span>
<span class="line"><span style="color:#F8F8F2;">        .</span><span style="color:#50FA7B;">AddJsonFile</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">path</span><span style="color:#F8F8F2;">: </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">appsettings.json</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">optional</span><span style="color:#F8F8F2;">: </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">reloadOnChange</span><span style="color:#F8F8F2;">: </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">    //构建</span></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">    IConfiguration</span><span style="color:#F8F8F2;"> configuration </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> configurationBuilder;</span></span>
<span class="line"><span style="color:#6272A4;">    //绑定生产者和消费者</span></span>
<span class="line"><span style="color:#F8F8F2;">    ChangeToken.</span><span style="color:#50FA7B;">OnChange</span><span style="color:#F8F8F2;">(configuration.GetReloadToken, () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">配置更新了：Port = </span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> +</span><span style="color:#F8F8F2;"> configuration[</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">MvcOptions:Port</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#6272A4;">    //阻塞</span></span>
<span class="line"><span style="color:#FF79C6;">    new</span><span style="color:#8BE9FD;font-style:italic;"> TaskCompletionSource</span><span style="color:#F8F8F2;">().Task.</span><span style="color:#50FA7B;">Wait</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义" tabindex="-1"><a class="header-anchor" href="#自定义"><span>自定义</span></a></h2><p>如何自定义，希望大家掌握思路，我们可以通过模仿json扩展</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" data-title="c#" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">//配置提供器选项：用于提供配置选项</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> HttpConfigurationSource</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IConfigurationSource</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> bool</span><span style="color:#F8F8F2;"> ReloadOnChange { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> HttpConfigurationSource</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IConfigurationProvider</span><span style="color:#50FA7B;"> Build</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IConfigurationBuilder</span><span style="color:#FFB86C;font-style:italic;"> builder</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> HttpConfigurationProvider</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#6272A4;">//配置提供器：配置源逻辑</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> HttpConfigurationProvider</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">IConfigurationProvider</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#8BE9FD;font-style:italic;"> ConcurrentDictionary</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">&gt; values </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> ConcurrentDictionary</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#8BE9FD;font-style:italic;"> HttpConfigurationSource</span><span style="color:#F8F8F2;"> options;</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#8BE9FD;font-style:italic;"> CancellationTokenSource</span><span style="color:#F8F8F2;">? tokenSource;</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> HttpConfigurationProvider</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">HttpConfigurationSource</span><span style="color:#FFB86C;font-style:italic;"> options</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#BD93F9;font-style:italic;">        this</span><span style="color:#F8F8F2;">.options </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> options;</span></span>
<span class="line"><span style="color:#6272A4;">        //如果需要监听</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.options.ReloadOnChange)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#50FA7B;">            Watch</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Watch</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {       </span></span>
<span class="line"><span style="color:#6272A4;">        //注册事件</span></span>
<span class="line"><span style="color:#F8F8F2;">        ChangeToken.</span><span style="color:#50FA7B;">OnChange</span><span style="color:#F8F8F2;">(GetReloadToken, Load);</span></span>
<span class="line"><span style="color:#6272A4;">        //模拟更改</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> t </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> Thread</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">            while</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#FF79C6;">                var</span><span style="color:#F8F8F2;"> token </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> tokenSource;</span></span>
<span class="line"><span style="color:#F8F8F2;">                tokenSource </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#6272A4;">                //每3s之后发生更改</span></span>
<span class="line"><span style="color:#F8F8F2;">                Thread.</span><span style="color:#50FA7B;">Sleep</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">3000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#6272A4;">                //触发事件,触发之前一定要将tokenSource设置成null</span></span>
<span class="line"><span style="color:#F8F8F2;">                token</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">Cancel</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">        });</span></span>
<span class="line"><span style="color:#F8F8F2;">        t.</span><span style="color:#50FA7B;">Start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IEnumerable</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#50FA7B;">GetChildKeys</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IEnumerable</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FFB86C;font-style:italic;">earlierKeys</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> parentPath</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;"> values.Keys;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IChangeToken</span><span style="color:#50FA7B;"> GetReloadToken</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        lock</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#FF79C6;">            if</span><span style="color:#F8F8F2;"> (tokenSource </span><span style="color:#FF79C6;">==</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F8F8F2;">                tokenSource </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> CancellationTokenSource</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#FF79C6;">            return</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> CancellationChangeToken</span><span style="color:#F8F8F2;">(tokenSource</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">.Token);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Load</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#6272A4;">        //假设我们从第三方地址获取</span></span>
<span class="line"><span style="color:#6272A4;">        //var client = new HttpClient();</span></span>
<span class="line"><span style="color:#6272A4;">        //var response = client.GetAsync(source.Url).GetAwaiter().GetResult();</span></span>
<span class="line"><span style="color:#6272A4;">        //var json = response.Content.ReadAsStringAsync().GetAwaiter().GetResult();</span></span>
<span class="line"><span style="color:#F8F8F2;">        values.</span><span style="color:#50FA7B;">TryAdd</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">t1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">1111111</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        values.</span><span style="color:#50FA7B;">TryAdd</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">t2</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">2222222</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">ison文件已加载...</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Set</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> key</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> value</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        values.</span><span style="color:#50FA7B;">TryAdd</span><span style="color:#F8F8F2;">(key, value);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> bool</span><span style="color:#50FA7B;"> TryGet</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> key</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">out</span><span style="color:#FF79C6;"> string</span><span style="color:#FFB86C;font-style:italic;"> value</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> flag </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> values.</span><span style="color:#50FA7B;">TryGetValue</span><span style="color:#F8F8F2;">(key, </span><span style="color:#FF79C6;">out</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;">? data);</span></span>
<span class="line"><span style="color:#F8F8F2;">        value </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> data </span><span style="color:#FF79C6;">??</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;">.Empty;</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;"> flag;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#6272A4;">//扩展IConfigurationBuilder</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> static</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> HttpConfigurationExtensions</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> static</span><span style="color:#8BE9FD;font-style:italic;"> IConfigurationBuilder</span><span style="color:#50FA7B;"> AddJsonHttp</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">this</span><span style="color:#8BE9FD;font-style:italic;"> IConfigurationBuilder</span><span style="color:#FFB86C;font-style:italic;"> builder</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">Action</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">HttpConfigurationSource</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FFB86C;font-style:italic;">configure</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (builder </span><span style="color:#FF79C6;">==</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#FF79C6;">            throw</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> ArgumentNullException</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">nameof</span><span style="color:#F8F8F2;">(builder));</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#6272A4;">        /*</span></span>
<span class="line"><span style="color:#6272A4;">         * Add会执行如下逻辑</span></span>
<span class="line"><span style="color:#6272A4;">         * 实列化HttpConfigurationSource</span></span>
<span class="line"><span style="color:#6272A4;">         * 执行委托配置HttpConfigurationSource实列</span></span>
<span class="line"><span style="color:#6272A4;">         * 调用ttpConfigurationSource实列的Build返回HttpConfigurationProvider实列</span></span>
<span class="line"><span style="color:#6272A4;">         * HttpConfigurationProvider实列又依赖了HttpConfigurationSource实列</span></span>
<span class="line"><span style="color:#6272A4;">         * 最后执行Load加载配置到ConfigurationManager实列上</span></span>
<span class="line"><span style="color:#6272A4;">         */</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;"> builder.</span><span style="color:#50FA7B;">Add</span><span style="color:#F8F8F2;">(configure);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h1><p>https://www.bilibili.com/video/BV1W14y1c7yt</p>`,34)]))}const t=n(e,[["render",p],["__file","configure-system.html.vue"]]),F=JSON.parse('{"path":"/dotnet/configure-system.html","title":"配置系统","lang":"en-US","frontmatter":{"title":"配置系统","date":"2022-10-07T00:00:00.000Z","category":["DotNet"],"description":"Json文件配置 创建一个json文件，例如test.json,右键设置“如果较新则复制” NuGet安装Microsoft.Extensions.Configuration和Microsoft.Extensions.Configuration.Json test.json xxx.cs 绑定读取JSON方式 NuGet安装：Microsoft.Ext...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/dotnet/configure-system.html"}],["meta",{"property":"og:title","content":"配置系统"}],["meta",{"property":"og:description","content":"Json文件配置 创建一个json文件，例如test.json,右键设置“如果较新则复制” NuGet安装Microsoft.Extensions.Configuration和Microsoft.Extensions.Configuration.Json test.json xxx.cs 绑定读取JSON方式 NuGet安装：Microsoft.Ext..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-01T04:07:09.000Z"}],["meta",{"property":"article:published_time","content":"2022-10-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-01T04:07:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"配置系统\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-07T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-01T04:07:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"基础知识","slug":"基础知识","link":"#基础知识","children":[]},{"level":2,"title":"注册配置","slug":"注册配置","link":"#注册配置","children":[]},{"level":2,"title":"构建配置","slug":"构建配置","link":"#构建配置","children":[]},{"level":2,"title":"读取配置","slug":"读取配置","link":"#读取配置","children":[]},{"level":2,"title":"ChangeToken","slug":"changetoken","link":"#changetoken","children":[]},{"level":2,"title":"监听更改","slug":"监听更改","link":"#监听更改","children":[]},{"level":2,"title":"自定义","slug":"自定义","link":"#自定义","children":[]}],"git":{"createdTime":1721654851000,"updatedTime":1738382829000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":2}]},"readingTime":{"minutes":6.06,"words":1819},"filePathRelative":"dotnet/configure-system.md","localizedDate":"October 7, 2022","excerpt":"\\n<ul>\\n<li>创建一个json文件，例如test.json,右键设置“如果较新则复制”</li>\\n<li>NuGet安装Microsoft.Extensions.Configuration和Microsoft.Extensions.Configuration.Json</li>\\n</ul>","autoDesc":true}');export{t as comp,F as data};
