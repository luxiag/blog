import{_ as n,c as e,a,o as l}from"./app-D1VpfuCg.js";const t={};function o(i,s){return l(),e("div",null,s[0]||(s[0]=[a(`<div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> static</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> ShowInt</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">int</span><span style="color:#FFB86C;font-style:italic;"> iParameter</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(iParameter);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> static</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> ShowString</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> sParameter</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(sParameter);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// 1.任何父类出现的地方都可以使用子类来代替</span></span>
<span class="line"><span style="color:#6272A4;">// 2.Object是所有类的父类</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 问题</span></span>
<span class="line"><span style="color:#6272A4;">// 1. 装箱拆箱</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> static</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> ShowObject</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">object</span><span style="color:#FFB86C;font-style:italic;"> oParameter</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(oParameter.</span><span style="color:#50FA7B;">GetType</span><span style="color:#F8F8F2;">().Name,oParameter)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设计思想--延迟声明：在声明的时候不指定类型，在调用的时候再指定类型</p>`,3)]))}const r=n(t,[["render",o],["__file","generic.html.vue"]]),c=JSON.parse('{"path":"/dotnet/generic.html","title":"泛型","lang":"en-US","frontmatter":{"title":"泛型","date":"2024-12-05T00:00:00.000Z","category":["DotNet"],"description":"设计思想--延迟声明：在声明的时候不指定类型，在调用的时候再指定类型","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/dotnet/generic.html"}],["meta",{"property":"og:title","content":"泛型"}],["meta",{"property":"og:description","content":"设计思想--延迟声明：在声明的时候不指定类型，在调用的时候再指定类型"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-01T04:07:09.000Z"}],["meta",{"property":"article:published_time","content":"2024-12-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-01T04:07:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"泛型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-05T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-01T04:07:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[],"git":{"createdTime":1733840773000,"updatedTime":1738382829000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":2}]},"readingTime":{"minutes":0.35,"words":106},"filePathRelative":"dotnet/generic.md","localizedDate":"December 5, 2024","excerpt":"<div class=\\"language-cs line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"cs\\" data-title=\\"cs\\" style=\\"background-color:#282A36;color:#F8F8F2\\"><pre class=\\"shiki dracula vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#FF79C6\\">public</span><span style=\\"color:#FF79C6\\"> static</span><span style=\\"color:#FF79C6\\"> void</span><span style=\\"color:#50FA7B\\"> ShowInt</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#FF79C6\\">int</span><span style=\\"color:#FFB86C;font-style:italic\\"> iParameter</span><span style=\\"color:#F8F8F2\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  Console.</span><span style=\\"color:#50FA7B\\">WriteLine</span><span style=\\"color:#F8F8F2\\">(iParameter);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">public</span><span style=\\"color:#FF79C6\\"> static</span><span style=\\"color:#FF79C6\\"> void</span><span style=\\"color:#50FA7B\\"> ShowString</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#FF79C6\\">string</span><span style=\\"color:#FFB86C;font-style:italic\\"> sParameter</span><span style=\\"color:#F8F8F2\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">  Console.</span><span style=\\"color:#50FA7B\\">WriteLine</span><span style=\\"color:#F8F8F2\\">(sParameter);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{r as comp,c as data};
