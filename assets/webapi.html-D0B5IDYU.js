import{_ as n,c as a,a as l,o as e}from"./app-8EmQY2oD.js";const p="/blog/assets/3301481732537389593-B8VuN7jq.png",o={};function t(i,s){return e(),a("div",null,s[0]||(s[0]=[l('<figure><img src="'+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">namespace</span><span style="color:#8BE9FD;font-style:italic;"> webapi</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#6272A4;">    // 定义一个名为 webapi 的命名空间</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> Program</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#6272A4;">        // 公共静态 void Main 方法，它是应用程序的入口点</span></span>
<span class="line"><span style="color:#FF79C6;">        public</span><span style="color:#FF79C6;"> static</span><span style="color:#FF79C6;"> void</span><span style="color:#50FA7B;"> Main</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">[] </span><span style="color:#FFB86C;font-style:italic;">args</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#6272A4;">            // 创建一个 WebApplicationBuilder 实例，用于构建 Web 应用程序</span></span>
<span class="line"><span style="color:#FF79C6;">            var</span><span style="color:#F8F8F2;"> builder </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> WebApplication.</span><span style="color:#50FA7B;">CreateBuilder</span><span style="color:#F8F8F2;">(args);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">            // 使用 builder.Services 添加服务到依赖注入容器中</span></span>
<span class="line"><span style="color:#6272A4;">            // AddControllers 添加控制器服务，这些控制器用于处理 HTTP 请求</span></span>
<span class="line"><span style="color:#F8F8F2;">            builder.Services.</span><span style="color:#50FA7B;">AddControllers</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">            // AddEndpointsApiExplorer 添加 Endpoints API 探索器服务，用于生成 API 文档</span></span>
<span class="line"><span style="color:#F8F8F2;">            builder.Services.</span><span style="color:#50FA7B;">AddEndpointsApiExplorer</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">            // AddSwaggerGen 添加 Swagger 生成服务，用于生成 API 文档和 Swagger UI</span></span>
<span class="line"><span style="color:#F8F8F2;">            builder.Services.</span><span style="color:#50FA7B;">AddSwaggerGen</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">            // 构建 Web 应用程序实例</span></span>
<span class="line"><span style="color:#FF79C6;">            var</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> builder.</span><span style="color:#50FA7B;">Build</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">            // 配置 HTTP 请求管道</span></span>
<span class="line"><span style="color:#6272A4;">            // 如果应用程序环境是开发环境，则启用 Swagger 和 Swagger UI</span></span>
<span class="line"><span style="color:#FF79C6;">            if</span><span style="color:#F8F8F2;"> (app.Environment.</span><span style="color:#50FA7B;">IsDevelopment</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F8F8F2;">                app.</span><span style="color:#50FA7B;">UseSwagger</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">                app.</span><span style="color:#50FA7B;">UseSwaggerUI</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">            // 使用 HttpsRedirection 中间件，确保所有请求都被重定向到 HTTPS</span></span>
<span class="line"><span style="color:#F8F8F2;">            app.</span><span style="color:#50FA7B;">UseHttpsRedirection</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">            // 使用 Authorization 中间件，允许身份验证和授权</span></span>
<span class="line"><span style="color:#F8F8F2;">            app.</span><span style="color:#50FA7B;">UseAuthorization</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">            // MapControllers 中间件将控制器映射到路由，以便处理 HTTP 请求</span></span>
<span class="line"><span style="color:#F8F8F2;">            app.</span><span style="color:#50FA7B;">MapControllers</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">            // 启动应用程序并等待请求</span></span>
<span class="line"><span style="color:#F8F8F2;">            app.</span><span style="color:#50FA7B;">Run</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="restful" tabindex="-1"><a class="header-anchor" href="#restful"><span>Restful</span></a></h1><p>RESTful 是一种基于 REST（Representational State Transfer，表述性状态转移） 架构风格的设计方法，主要用于构建面向资源的网络应用程序（通常是 Web API）。</p><h1 id="apicontroller" tabindex="-1"><a class="header-anchor" href="#apicontroller"><span>apiController</span></a></h1><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">ApiController</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[controller]</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> UsersController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#6272A4;">    // GET /api/users</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetUsers</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> users </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> List</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;">&gt; { </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Alice</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Bob</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Charlie</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> };</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(users);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // GET /api/users/{id}</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">{id}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetUser</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">int</span><span style="color:#FFB86C;font-style:italic;"> id</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> user </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">User</span><span style="color:#E9F284;">&quot;</span><span style="color:#FF79C6;"> +</span><span style="color:#F8F8F2;"> id;</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(user);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // POST /api/users</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpPost</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> CreateUser</span><span style="color:#F8F8F2;">([</span><span style="color:#8BE9FD;font-style:italic;">FromBody</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> userName</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> CreatedAtAction</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">nameof</span><span style="color:#F8F8F2;">(GetUser), </span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;"> { id </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;"> }, userName);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // PUT /api/users/{id}</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpPut</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">{id}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> UpdateUser</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">int</span><span style="color:#FFB86C;font-style:italic;"> id</span><span style="color:#F8F8F2;">, [</span><span style="color:#8BE9FD;font-style:italic;">FromBody</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> userName</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> NoContent</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // DELETE /api/users/{id}</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpDelete</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">{id}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> DeleteUser</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">int</span><span style="color:#FFB86C;font-style:italic;"> id</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> NoContent</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="controllerbase-和-controller" tabindex="-1"><a class="header-anchor" href="#controllerbase-和-controller"><span>ControllerBase 和 Controller</span></a></h2><p>Controller类继承⾃ControllerBase，Controller类在ControllerBase的基础上增加了和视图相关的⽅法</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> HomeController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">Controller</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#6272A4;">    // GET: /Home/Index</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> Index</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> model </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#F8F8F2;"> { Message </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">Welcome to ASP.NET Core MVC!</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> };</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> View</span><span style="color:#F8F8F2;">(model);  </span><span style="color:#6272A4;">// Returns a view with the model data</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // POST: /Home/Submit</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpPost</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> Submit</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> name</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#6272A4;">        // Handle form submission</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> RedirectToAction</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Index</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">); </span><span style="color:#6272A4;">// Redirects to another action (Index)</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="route" tabindex="-1"><a class="header-anchor" href="#route"><span><code>[Route]</code></span></a></h2><h3 id="action" tabindex="-1"><a class="header-anchor" href="#action"><span><code>[action]</code></span></a></h3><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">ApiController</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[controller]/[action]</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> ProductController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{   </span></span>
<span class="line"><span style="color:#6272A4;">  // GET /api/product/getproducts</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetProducts</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;"> { Products </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> new</span><span style="color:#F8F8F2;">[] { </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Laptop</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Phone</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Tablet</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> } });</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#6272A4;">    // GET /api/product/getproductbyid/1</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">{id}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetProductById</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">int</span><span style="color:#FFB86C;font-style:italic;"> id</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;"> { ProductId </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> id, Name </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">Laptop</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id" tabindex="-1"><a class="header-anchor" href="#id"><span><code>{id}</code></span></a></h3><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">ApiController</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[controller]/{id}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> ProductController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{ </span></span>
<span class="line"><span style="color:#6272A4;">  // GET /api/product/1 (where 1 is the id parameter).</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetProductById</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">int</span><span style="color:#FFB86C;font-style:italic;"> id</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;"> { ProductId </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> id, Name </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">Laptop</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="action-id" tabindex="-1"><a class="header-anchor" href="#action-id"><span><code>[action]/{id}</code></span></a></h3><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">ApiController</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[controller]/[action]/{id}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> ProductController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetProductById</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">int</span><span style="color:#FFB86C;font-style:italic;"> id</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;"> { ProductId </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> id, Name </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">Laptop</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="area" tabindex="-1"><a class="header-anchor" href="#area"><span><code>[area]</code></span></a></h3><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">ApiController</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[area]/[controller]/[action]</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Area</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Admin</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> AdminProductController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{   </span></span>
<span class="line"><span style="color:#6272A4;">  // Route: GET /api/admin/adminproduct/getadminproductdetails</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetAdminProductDetails</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;"> { ProductId </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">, AdminAccess </span><span style="color:#FF79C6;">=</span><span style="color:#BD93F9;"> true</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="language" tabindex="-1"><a class="header-anchor" href="#language"><span><code>{language}</code></span></a></h3><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">ApiController</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[controller]/[action]/{language}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> ProductController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetLocalizedProductInfo</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> language</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;"> { Language </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> language, ProductName </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">Laptop</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="routing-attribute-and-action-method-name" tabindex="-1"><a class="header-anchor" href="#routing-attribute-and-action-method-name"><span>Routing Attribute and Action Method Name</span></a></h3><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">forecast</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetForecast</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Forecast data</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Routing Attribute</strong></p><ul><li><code>[HttpGet(&quot;forecast&quot;)]</code> 定义了方法响应的请求路径</li><li>代表处理<code>api/{controller}/forecast</code> 路径的 GET 请求。</li></ul><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[controller]/[action]</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> WeatherController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{   </span></span>
<span class="line"><span style="color:#6272A4;">  // GET /api/weather/forecast2</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">forecast2</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetForecast</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Forecast data</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Action Method Name</strong></p><ul><li>只是方法名</li></ul><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[controller]/[action]</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> WeatherController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{   </span></span>
<span class="line"><span style="color:#6272A4;">  // GET /api/weather/forecast</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetForecast</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Forecast data</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#6272A4;">    // GET /api/weather/getweather</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> GetWeather</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Weather data</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="parameter" tabindex="-1"><a class="header-anchor" href="#parameter"><span>parameter</span></a></h2><h3 id="frombody" tabindex="-1"><a class="header-anchor" href="#frombody"><span><code>[FromBody]</code></span></a></h3><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" data-title="cs" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> WeatherForecast</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Date { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> TemperatureC { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> Summary { </span><span style="color:#FF79C6;">get</span><span style="color:#F8F8F2;">; </span><span style="color:#FF79C6;">set</span><span style="color:#F8F8F2;">; }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">ApiController</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[controller]</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> WeatherController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#6272A4;">    // POST /api/weather</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpPost</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#8BE9FD;font-style:italic;"> IActionResult</span><span style="color:#50FA7B;"> CreateForecast</span><span style="color:#F8F8F2;">([</span><span style="color:#8BE9FD;font-style:italic;">FromBody</span><span style="color:#F8F8F2;">] </span><span style="color:#8BE9FD;font-style:italic;">WeatherForecast</span><span style="color:#FFB86C;font-style:italic;"> forecast</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#6272A4;">        // The &#39;forecast&#39; object will be populated from the request body</span></span>
<span class="line"><span style="color:#6272A4;">        /*</span></span>
<span class="line"><span style="color:#6272A4;">        </span></span>
<span class="line"><span style="color:#6272A4;">          {</span></span>
<span class="line"><span style="color:#6272A4;">            &quot;Date&quot;: &quot;2024-11-25&quot;,</span></span>
<span class="line"><span style="color:#6272A4;">            &quot;TemperatureC&quot;: 22,</span></span>
<span class="line"><span style="color:#6272A4;">            &quot;Summary&quot;: &quot;Sunny&quot;</span></span>
<span class="line"><span style="color:#6272A4;">          }</span></span>
<span class="line"><span style="color:#6272A4;">        */</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(forecast);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31)]))}const r=n(o,[["render",t],["__file","webapi.html.vue"]]),F=JSON.parse('{"path":"/dotnet/webapi.html","title":"WebApi","lang":"en-US","frontmatter":{"title":"WebApi","category":["DotNet"],"date":"2024-12-05T00:00:00.000Z","description":"Restful RESTful 是一种基于 REST（Representational State Transfer，表述性状态转移） 架构风格的设计方法，主要用于构建面向资源的网络应用程序（通常是 Web API）。 apiController ControllerBase 和 Controller Controller类继承⾃ControllerB...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/dotnet/webapi.html"}],["meta",{"property":"og:title","content":"WebApi"}],["meta",{"property":"og:description","content":"Restful RESTful 是一种基于 REST（Representational State Transfer，表述性状态转移） 架构风格的设计方法，主要用于构建面向资源的网络应用程序（通常是 Web API）。 apiController ControllerBase 和 Controller Controller类继承⾃ControllerB..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-01T04:07:09.000Z"}],["meta",{"property":"article:published_time","content":"2024-12-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-01T04:07:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"WebApi\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-05T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-01T04:07:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"headers":[{"level":2,"title":"ControllerBase 和 Controller","slug":"controllerbase-和-controller","link":"#controllerbase-和-controller","children":[]},{"level":2,"title":"[Route]","slug":"route","link":"#route","children":[{"level":3,"title":"[action]","slug":"action","link":"#action","children":[]},{"level":3,"title":"{id}","slug":"id","link":"#id","children":[]},{"level":3,"title":"[action]/{id}","slug":"action-id","link":"#action-id","children":[]},{"level":3,"title":"[area]","slug":"area","link":"#area","children":[]},{"level":3,"title":"{language}","slug":"language","link":"#language","children":[]},{"level":3,"title":"Routing Attribute and Action Method Name","slug":"routing-attribute-and-action-method-name","link":"#routing-attribute-and-action-method-name","children":[]}]},{"level":2,"title":"parameter","slug":"parameter","link":"#parameter","children":[{"level":3,"title":"[FromBody]","slug":"frombody","link":"#frombody","children":[]}]}],"git":{"createdTime":1732626942000,"updatedTime":1738382829000,"contributors":[{"name":"luxiag","email":"luxiag@qq.com","commits":2}]},"readingTime":{"minutes":2.76,"words":828},"filePathRelative":"dotnet/webapi.md","localizedDate":"December 5, 2024","excerpt":"<figure><figcaption></figcaption></figure>\\n<div class=\\"language-cs line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"cs\\" data-title=\\"cs\\" style=\\"background-color:#282A36;color:#F8F8F2\\"><pre class=\\"shiki dracula vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#FF79C6\\">namespace</span><span style=\\"color:#8BE9FD;font-style:italic\\"> webapi</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">    // 定义一个名为 webapi 的命名空间</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">    public</span><span style=\\"color:#FF79C6\\"> class</span><span style=\\"color:#8BE9FD\\"> Program</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">        // 公共静态 void Main 方法，它是应用程序的入口点</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">        public</span><span style=\\"color:#FF79C6\\"> static</span><span style=\\"color:#FF79C6\\"> void</span><span style=\\"color:#50FA7B\\"> Main</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#FF79C6\\">string</span><span style=\\"color:#F8F8F2\\">[] </span><span style=\\"color:#FFB86C;font-style:italic\\">args</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">        {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">            // 创建一个 WebApplicationBuilder 实例，用于构建 Web 应用程序</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">            var</span><span style=\\"color:#F8F8F2\\"> builder </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> WebApplication.</span><span style=\\"color:#50FA7B\\">CreateBuilder</span><span style=\\"color:#F8F8F2\\">(args);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">            // 使用 builder.Services 添加服务到依赖注入容器中</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">            // AddControllers 添加控制器服务，这些控制器用于处理 HTTP 请求</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">            builder.Services.</span><span style=\\"color:#50FA7B\\">AddControllers</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">            // AddEndpointsApiExplorer 添加 Endpoints API 探索器服务，用于生成 API 文档</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">            builder.Services.</span><span style=\\"color:#50FA7B\\">AddEndpointsApiExplorer</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">            // AddSwaggerGen 添加 Swagger 生成服务，用于生成 API 文档和 Swagger UI</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">            builder.Services.</span><span style=\\"color:#50FA7B\\">AddSwaggerGen</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">            // 构建 Web 应用程序实例</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">            var</span><span style=\\"color:#F8F8F2\\"> app </span><span style=\\"color:#FF79C6\\">=</span><span style=\\"color:#F8F8F2\\"> builder.</span><span style=\\"color:#50FA7B\\">Build</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">            // 配置 HTTP 请求管道</span></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">            // 如果应用程序环境是开发环境，则启用 Swagger 和 Swagger UI</span></span>\\n<span class=\\"line\\"><span style=\\"color:#FF79C6\\">            if</span><span style=\\"color:#F8F8F2\\"> (app.Environment.</span><span style=\\"color:#50FA7B\\">IsDevelopment</span><span style=\\"color:#F8F8F2\\">())</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">            {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">                app.</span><span style=\\"color:#50FA7B\\">UseSwagger</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">                app.</span><span style=\\"color:#50FA7B\\">UseSwaggerUI</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">            }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">            // 使用 HttpsRedirection 中间件，确保所有请求都被重定向到 HTTPS</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">            app.</span><span style=\\"color:#50FA7B\\">UseHttpsRedirection</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">            // 使用 Authorization 中间件，允许身份验证和授权</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">            app.</span><span style=\\"color:#50FA7B\\">UseAuthorization</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">            // MapControllers 中间件将控制器映射到路由，以便处理 HTTP 请求</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">            app.</span><span style=\\"color:#50FA7B\\">MapControllers</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#6272A4\\">            // 启动应用程序并等待请求</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">            app.</span><span style=\\"color:#50FA7B\\">Run</span><span style=\\"color:#F8F8F2\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">        }</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{r as comp,F as data};
