import{_ as n,e as a,h as l,o as e}from"./app-DPJYBgB6.js";const o={};function p(t,s){return e(),a("div",null,s[0]||(s[0]=[l(`<p>Redis（Remote Dictionary Server）是一个开源、基于内存、支持多种数据结构的高性能<strong>键值</strong>存储数据库。</p><p><strong>使用场景</strong></p><table><thead><tr><th>场景</th><th>用法简述</th></tr></thead><tbody><tr><td>接口缓存</td><td>key=接口参数，value=接口返回数据，设置 TTL，减少 DB 压力</td></tr><tr><td>用户 Session</td><td>key=sessionId, value=用户数据</td></tr><tr><td>分布式锁</td><td>SET key value NX PX 过期时间</td></tr><tr><td>限流</td><td>INCR 计数器 + EXPIRE 设置时间窗口</td></tr><tr><td>延迟队列</td><td>ZADD + SCORE 设定时间戳，轮询执行</td></tr><tr><td>实时排行榜</td><td>ZINCRBY 增加分数，ZRANGE 查询前 N 名</td></tr><tr><td>消息中间件替代品</td><td>使用 Stream、List 或 Pub/Sub 构建简单的异步消息系统</td></tr></tbody></table><h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型"><span>数据类型</span></a></h2><table><thead><tr><th>数据类型</th><th>描述 / 场景</th><th>常用命令</th><th>.NET 使用示例 (IDatabase)</th></tr></thead><tbody><tr><td>String</td><td>最基本的类型，存储任意文本或数字</td><td>SET / GET / INCR / DECR</td><td>db.StringSet(&quot;key&quot;, &quot;value&quot;);db.StringGet(&quot;key&quot;);</td></tr><tr><td>Hash</td><td>键值对集合，适合用户对象等结构体</td><td>HSET / HGET / HGETALL</td><td>db.HashSet(&quot;user:1&quot;, new HashEntry[] {...});</td></tr><tr><td>List</td><td>双向链表，适合任务队列等顺序操作</td><td>LPUSH / RPUSH / LPOP</td><td>db.ListLeftPush(&quot;queue&quot;, &quot;task1&quot;);</td></tr><tr><td>Set</td><td>无序集合，不重复，适合标签等</td><td>SADD / SMEMBERS / SISMEMBER</td><td>db.SetAdd(&quot;tags&quot;, &quot;redis&quot;);</td></tr><tr><td>Sorted Set</td><td>带分数的有序集合，适合排行榜</td><td>ZADD / ZRANGE / ZREVRANGE</td><td>db.SortedSetAdd(&quot;rank&quot;, &quot;user1&quot;, 100);</td></tr><tr><td>Stream</td><td>消息队列结构，支持持久化订阅等</td><td>XADD / XREAD / XGROUP</td><td>db.StreamAdd(&quot;stream&quot;, &quot;field&quot;, &quot;value&quot;);</td></tr><tr><td>Bitmap</td><td>位数组，适合签到、活跃状态</td><td>SETBIT / GETBIT / BITCOUNT</td><td>db.StringSetBit(&quot;bitmap&quot;, 5, true);</td></tr><tr><td>HyperLogLog</td><td>基数估算，适合UV统计</td><td>PFADD / PFCOUNT</td><td>db.HyperLogLogAdd(&quot;uv&quot;, &quot;user1&quot;);</td></tr><tr><td>Geo</td><td>地理位置，适合LBS应用</td><td>GEOADD / GEODIST / GEORADIUS</td><td>db.GeoAdd(&quot;location&quot;, new GeoEntry(...));</td></tr></tbody></table><h3 id="✅-1-string-类型" tabindex="-1"><a class="header-anchor" href="#✅-1-string-类型"><span>✅ 1. String 类型</span></a></h3><p>📌 用途：用于缓存字符串、数字、JSON 等。是 Redis 中最常用的数据结构</p><hr><h4 id="🧠-方法一-stringset-key-value-expiry-null" tabindex="-1"><a class="header-anchor" href="#🧠-方法一-stringset-key-value-expiry-null"><span>🧠 方法一：<code>StringSet(key, value, expiry = null)</code></span></a></h4><blockquote><p><strong>作用：</strong> 设置一个字符串键值，可以加过期时间。</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#6272A4;">// 设置 key 为 name 的值为 Alice，有效期 10 分钟</span></span>
<span class="line"><span style="color:#F8F8F2;">db.</span><span style="color:#50FA7B;">StringSet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">name</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Alice</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, TimeSpan.</span><span style="color:#50FA7B;">FromMinutes</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">10</span><span style="color:#F8F8F2;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="🧠-方法二-stringget-key" tabindex="-1"><a class="header-anchor" href="#🧠-方法二-stringget-key"><span>🧠 方法二：<code>StringGet(key)</code></span></a></h4><blockquote><p><strong>作用：</strong> 获取字符串键对应的值。</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;"> name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> db.</span><span style="color:#50FA7B;">StringGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">name</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(name); </span><span style="color:#6272A4;">// 输出: Alice</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="🧠-方法三-stringincrement-key" tabindex="-1"><a class="header-anchor" href="#🧠-方法三-stringincrement-key"><span>🧠 方法三：<code>StringIncrement(key)</code></span></a></h4><blockquote><p><strong>作用：</strong> 对一个数字字符串进行 +1 操作（适合计数器）。</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">db.</span><span style="color:#50FA7B;">StringIncrement</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">views:article:123</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="✅-2-hash-类型" tabindex="-1"><a class="header-anchor" href="#✅-2-hash-类型"><span>✅ 2. Hash 类型</span></a></h3><p>📌 用途：类似对象/字典，适合表示用户信息、商品详情</p><hr><h4 id="🧠-方法一-hashset-key-hashentry" tabindex="-1"><a class="header-anchor" href="#🧠-方法一-hashset-key-hashentry"><span>🧠 方法一：<code>HashSet(key, HashEntry[])</code></span></a></h4><blockquote><p><strong>作用：</strong> 设置一个 Hash 对象（键值对集合）</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">db.</span><span style="color:#50FA7B;">HashSet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">user:1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">new</span><span style="color:#8BE9FD;font-style:italic;"> HashEntry</span><span style="color:#F8F8F2;">[] {</span></span>
<span class="line"><span style="color:#FF79C6;">    new</span><span style="color:#8BE9FD;font-style:italic;"> HashEntry</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">name</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Alice</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">),</span></span>
<span class="line"><span style="color:#FF79C6;">    new</span><span style="color:#8BE9FD;font-style:italic;"> HashEntry</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">age</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">30</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="🧠-方法二-hashget-key-field" tabindex="-1"><a class="header-anchor" href="#🧠-方法二-hashget-key-field"><span>🧠 方法二：<code>HashGet(key, field)</code></span></a></h4><blockquote><p><strong>作用：</strong> 获取某个字段的值</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;"> name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> db.</span><span style="color:#50FA7B;">HashGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">user:1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">name</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h4 id="🧠-方法三-hashgetall-key" tabindex="-1"><a class="header-anchor" href="#🧠-方法三-hashgetall-key"><span>🧠 方法三：<code>HashGetAll(key)</code></span></a></h4><blockquote><p><strong>作用：</strong> 获取 Hash 中所有键值对</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> all </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> db.</span><span style="color:#50FA7B;">HashGetAll</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">user:1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">foreach</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> item </span><span style="color:#FF79C6;">in</span><span style="color:#F8F8F2;"> all)</span></span>
<span class="line"><span style="color:#F8F8F2;">    Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">$&quot;</span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">item</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Name</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;"> = </span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">item</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Value</span><span style="color:#FF79C6;">}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="✅-3-list-类型" tabindex="-1"><a class="header-anchor" href="#✅-3-list-类型"><span>✅ 3. List 类型</span></a></h3><p>📌 用途：实现任务队列、消息列表、聊天记录等</p><hr><h4 id="🧠-方法一-listleftpush-key-value" tabindex="-1"><a class="header-anchor" href="#🧠-方法一-listleftpush-key-value"><span>🧠 方法一：<code>ListLeftPush(key, value)</code></span></a></h4><blockquote><p><strong>作用：</strong> 从左边添加一个值（像栈/队列）</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">db.</span><span style="color:#50FA7B;">ListLeftPush</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">chat:room:1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">hello</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h4 id="🧠-方法二-listrightpush-key-value" tabindex="-1"><a class="header-anchor" href="#🧠-方法二-listrightpush-key-value"><span>🧠 方法二：<code>ListRightPush(key, value)</code></span></a></h4><blockquote><p><strong>作用：</strong> 从右边添加（像队列尾部）</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">db.</span><span style="color:#50FA7B;">ListRightPush</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">chat:room:1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">how are you?</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h4 id="🧠-方法三-listleftpop-key" tabindex="-1"><a class="header-anchor" href="#🧠-方法三-listleftpop-key"><span>🧠 方法三：<code>ListLeftPop(key)</code></span></a></h4><blockquote><p><strong>作用：</strong> 从左边取出一个值（消费消息）</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;"> message </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> db.</span><span style="color:#50FA7B;">ListLeftPop</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">chat:room:1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="✅-4-set-类型" tabindex="-1"><a class="header-anchor" href="#✅-4-set-类型"><span>✅ 4. Set 类型</span></a></h3><p>📌 用途：标签、唯一集合、抽奖等（不允许重复）</p><hr><h4 id="🧠-方法一-setadd-key-value" tabindex="-1"><a class="header-anchor" href="#🧠-方法一-setadd-key-value"><span>🧠 方法一：<code>SetAdd(key, value)</code></span></a></h4><blockquote><p><strong>作用：</strong> 添加一个不重复的元素</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">db.</span><span style="color:#50FA7B;">SetAdd</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">post:123:tags</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Redis</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h4 id="🧠-方法二-setmembers-key" tabindex="-1"><a class="header-anchor" href="#🧠-方法二-setmembers-key"><span>🧠 方法二：<code>SetMembers(key)</code></span></a></h4><blockquote><p><strong>作用：</strong> 获取所有元素</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> tags </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> db.</span><span style="color:#50FA7B;">SetMembers</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">post:123:tags</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h4 id="🧠-方法三-setcontains-key-value" tabindex="-1"><a class="header-anchor" href="#🧠-方法三-setcontains-key-value"><span>🧠 方法三：<code>SetContains(key, value)</code></span></a></h4><blockquote><p><strong>作用：</strong> 判断某值是否存在</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">bool</span><span style="color:#F8F8F2;"> hasRedis </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> db.</span><span style="color:#50FA7B;">SetContains</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">post:123:tags</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Redis</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="✅-5-sortedset-有序集合" tabindex="-1"><a class="header-anchor" href="#✅-5-sortedset-有序集合"><span>✅ 5. SortedSet（有序集合）</span></a></h3><p>📌 用途：积分榜、投票榜、排行榜等</p><hr><h4 id="🧠-方法一-sortedsetadd-key-value-score" tabindex="-1"><a class="header-anchor" href="#🧠-方法一-sortedsetadd-key-value-score"><span>🧠 方法一：<code>SortedSetAdd(key, value, score)</code></span></a></h4><blockquote><p><strong>作用：</strong> 添加一个有分数的用户到排行榜</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">db.</span><span style="color:#50FA7B;">SortedSetAdd</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">game:rank</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">player1</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">88.5</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h4 id="🧠-方法二-sortedsetrangebyscorewithscores" tabindex="-1"><a class="header-anchor" href="#🧠-方法二-sortedsetrangebyscorewithscores"><span>🧠 方法二：<code>SortedSetRangeByScoreWithScores(...)</code></span></a></h4><blockquote><p><strong>作用：</strong> 按分数获取前 N 名</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> top </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> db.</span><span style="color:#50FA7B;">SortedSetRangeByScoreWithScores</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">game:rank</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">order</span><span style="color:#F8F8F2;">: Order.Descending, </span><span style="color:#FFB86C;font-style:italic;">take</span><span style="color:#F8F8F2;">: </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">foreach</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">var</span><span style="color:#F8F8F2;"> entry </span><span style="color:#FF79C6;">in</span><span style="color:#F8F8F2;"> top)</span></span>
<span class="line"><span style="color:#F8F8F2;">    Console.</span><span style="color:#50FA7B;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">$&quot;</span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">entry</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Element</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">: </span><span style="color:#FF79C6;">{</span><span style="color:#F8F8F2;">entry</span><span style="color:#F1FA8C;">.</span><span style="color:#F8F8F2;">Score</span><span style="color:#FF79C6;">}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="示例场景" tabindex="-1"><a class="header-anchor" href="#示例场景"><span>示例场景</span></a></h2><h3 id="redis限流器" tabindex="-1"><a class="header-anchor" href="#redis限流器"><span>Redis限流器</span></a></h3><p>限定每个用户每分钟只能访问某个接口 N 次</p><ul><li><p>使用 Redis 的 StringIncrement 实现计数。</p></li><li><p>设定过期时间为 1 分钟。</p></li><li><p>如果计数 &gt; 限制数，返回 429 Too Many Requests</p></li></ul><p><code>Services/RateLimiter.cs</code></p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> RateLimiter</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> IDatabase</span><span style="color:#F8F8F2;"> _redis;</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#FF79C6;"> int</span><span style="color:#F8F8F2;"> _maxCount;</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> TimeSpan</span><span style="color:#F8F8F2;"> _timeWindow;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> RateLimiter</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IConnectionMultiplexer</span><span style="color:#FFB86C;font-style:italic;"> redis</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">int</span><span style="color:#FFB86C;font-style:italic;"> maxCount</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">TimeSpan</span><span style="color:#FFB86C;font-style:italic;"> timeWindow</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _redis </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> redis.</span><span style="color:#50FA7B;">GetDatabase</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        _maxCount </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> maxCount;</span></span>
<span class="line"><span style="color:#F8F8F2;">        _timeWindow </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> timeWindow;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> async</span><span style="color:#8BE9FD;font-style:italic;"> Task</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">bool</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#50FA7B;">IsAllowedAsync</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> key</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> count </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> await</span><span style="color:#F8F8F2;"> _redis.</span><span style="color:#50FA7B;">StringIncrementAsync</span><span style="color:#F8F8F2;">(key);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (count </span><span style="color:#FF79C6;">==</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#6272A4;">            // 第一次请求时设置过期时间</span></span>
<span class="line"><span style="color:#FF79C6;">            await</span><span style="color:#F8F8F2;"> _redis.</span><span style="color:#50FA7B;">KeyExpireAsync</span><span style="color:#F8F8F2;">(key, _timeWindow);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;"> count </span><span style="color:#FF79C6;">&lt;=</span><span style="color:#F8F8F2;"> _maxCount;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Program.cs</code></p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddSingleton</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IConnectionMultiplexer</span><span style="color:#F8F8F2;">&gt;(</span></span>
<span class="line"><span style="color:#F8F8F2;">    ConnectionMultiplexer.</span><span style="color:#50FA7B;">Connect</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">localhost:6379</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddScoped</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">sp</span><span style="color:#FF79C6;"> =&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    var</span><span style="color:#F8F8F2;"> redis </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> sp.</span><span style="color:#50FA7B;">GetRequiredService</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IConnectionMultiplexer</span><span style="color:#F8F8F2;">&gt;();</span></span>
<span class="line"><span style="color:#FF79C6;">    return</span><span style="color:#FF79C6;"> new</span><span style="color:#8BE9FD;font-style:italic;"> RateLimiter</span><span style="color:#F8F8F2;">(redis, </span><span style="color:#FFB86C;font-style:italic;">maxCount</span><span style="color:#F8F8F2;">: </span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">timeWindow</span><span style="color:#F8F8F2;">: TimeSpan.</span><span style="color:#50FA7B;">FromMinutes</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Controller</code></p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">ApiController</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[controller]</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> UploadController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> RateLimiter</span><span style="color:#F8F8F2;"> _rateLimiter;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> UploadController</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">RateLimiter</span><span style="color:#FFB86C;font-style:italic;"> rateLimiter</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _rateLimiter </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> rateLimiter;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpPost</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> async</span><span style="color:#8BE9FD;font-style:italic;"> Task</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IActionResult</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#50FA7B;">Upload</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        string</span><span style="color:#F8F8F2;"> userKey </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> $&quot;</span><span style="color:#F1FA8C;">rate_limit:user:</span><span style="color:#FF79C6;">{</span><span style="color:#50FA7B;">GetUserId</span><span style="color:#F1FA8C;">()</span><span style="color:#FF79C6;">}</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!await</span><span style="color:#F8F8F2;"> _rateLimiter.</span><span style="color:#50FA7B;">IsAllowedAsync</span><span style="color:#F8F8F2;">(userKey))</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#FF79C6;">            return</span><span style="color:#50FA7B;"> StatusCode</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">429</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Too many requests. Please wait a minute.</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">        // 执行上传逻辑</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Upload successful!</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> string</span><span style="color:#50FA7B;"> GetUserId</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#6272A4;">        // 可根据实际情况从 Token 或 Header 中获取用户标识</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;"> HttpContext.Connection.RemoteIpAddress</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">ToString</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">??</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">anonymous</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="排行榜" tabindex="-1"><a class="header-anchor" href="#排行榜"><span>排行榜</span></a></h3><p><code>Services/LeaderboardService.cs</code></p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> LeaderboardService</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> IDatabase</span><span style="color:#F8F8F2;"> _redis;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> LeaderboardService</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">IConnectionMultiplexer</span><span style="color:#FFB86C;font-style:italic;"> connection</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _redis </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> connection.</span><span style="color:#50FA7B;">GetDatabase</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 添加或更新用户得分</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> async</span><span style="color:#8BE9FD;font-style:italic;"> Task</span><span style="color:#50FA7B;"> AddScoreAsync</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> boardKey</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> userId</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">double</span><span style="color:#FFB86C;font-style:italic;"> score</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        await</span><span style="color:#F8F8F2;"> _redis.</span><span style="color:#50FA7B;">SortedSetAddAsync</span><span style="color:#F8F8F2;">(boardKey, userId, score);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 获取用户当前排名（0-based）</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> async</span><span style="color:#8BE9FD;font-style:italic;"> Task</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">long</span><span style="color:#F8F8F2;">?&gt; </span><span style="color:#50FA7B;">GetRankAsync</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> boardKey</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> userId</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> rank </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> await</span><span style="color:#F8F8F2;"> _redis.</span><span style="color:#50FA7B;">SortedSetRankAsync</span><span style="color:#F8F8F2;">(boardKey, userId, Order.Descending);</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;"> rank.HasValue </span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> rank.Value </span><span style="color:#FF79C6;">+</span><span style="color:#BD93F9;"> 1</span><span style="color:#FF79C6;"> :</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 获取用户得分</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> async</span><span style="color:#8BE9FD;font-style:italic;"> Task</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">double</span><span style="color:#F8F8F2;">?&gt; </span><span style="color:#50FA7B;">GetScoreAsync</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> boardKey</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> userId</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#FF79C6;"> await</span><span style="color:#F8F8F2;"> _redis.</span><span style="color:#50FA7B;">SortedSetScoreAsync</span><span style="color:#F8F8F2;">(boardKey, userId);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">    // 获取前 N 名用户（降序）</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> async</span><span style="color:#8BE9FD;font-style:italic;"> Task</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">List</span><span style="color:#F8F8F2;">&lt;(</span><span style="color:#FF79C6;">string</span><span style="color:#F8F8F2;"> userId, </span><span style="color:#FF79C6;">double</span><span style="color:#F8F8F2;"> score)&gt;&gt; </span><span style="color:#50FA7B;">GetTopAsync</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> boardKey</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">int</span><span style="color:#FFB86C;font-style:italic;"> count</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> results </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> await</span><span style="color:#F8F8F2;"> _redis.</span><span style="color:#50FA7B;">SortedSetRangeByRankWithScoresAsync</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">            boardKey, </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">, count </span><span style="color:#FF79C6;">-</span><span style="color:#BD93F9;"> 1</span><span style="color:#F8F8F2;">, Order.Descending);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#F8F8F2;"> results.</span><span style="color:#50FA7B;">Select</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">x</span><span style="color:#FF79C6;"> =&gt;</span><span style="color:#F8F8F2;"> (x.Element.</span><span style="color:#50FA7B;">ToString</span><span style="color:#F8F8F2;">(), x.Score)).</span><span style="color:#50FA7B;">ToList</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Program.cs</code></p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddSingleton</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IConnectionMultiplexer</span><span style="color:#F8F8F2;">&gt;(</span></span>
<span class="line"><span style="color:#F8F8F2;">    ConnectionMultiplexer.</span><span style="color:#50FA7B;">Connect</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">localhost:6379</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">builder.Services.</span><span style="color:#50FA7B;">AddScoped</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">LeaderboardService</span><span style="color:#F8F8F2;">&gt;();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Controller</code></p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" data-title="csharp" style="background-color:#282A36;color:#F8F8F2;"><pre class="shiki dracula vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">ApiController</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#8BE9FD;font-style:italic;">Route</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">api/[controller]</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">public</span><span style="color:#FF79C6;"> class</span><span style="color:#8BE9FD;"> LeaderboardController</span><span style="color:#F8F8F2;"> : </span><span style="color:#8BE9FD;font-style:italic;">ControllerBase</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> readonly</span><span style="color:#8BE9FD;font-style:italic;"> LeaderboardService</span><span style="color:#F8F8F2;"> _leaderboard;</span></span>
<span class="line"><span style="color:#FF79C6;">    private</span><span style="color:#FF79C6;"> const</span><span style="color:#FF79C6;"> string</span><span style="color:#F8F8F2;"> BoardKey </span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">game:leaderboard</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#50FA7B;"> LeaderboardController</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;font-style:italic;">LeaderboardService</span><span style="color:#FFB86C;font-style:italic;"> leaderboard</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        _leaderboard </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> leaderboard;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpPost</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">score</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> async</span><span style="color:#8BE9FD;font-style:italic;"> Task</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IActionResult</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#50FA7B;">AddScore</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> userId</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">double</span><span style="color:#FFB86C;font-style:italic;"> score</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        await</span><span style="color:#F8F8F2;"> _leaderboard.</span><span style="color:#50FA7B;">AddScoreAsync</span><span style="color:#F8F8F2;">(BoardKey, userId, score);</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Score added</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">rank</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> async</span><span style="color:#8BE9FD;font-style:italic;"> Task</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IActionResult</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#50FA7B;">GetRank</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">string</span><span style="color:#FFB86C;font-style:italic;"> userId</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> rank </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> await</span><span style="color:#F8F8F2;"> _leaderboard.</span><span style="color:#50FA7B;">GetRankAsync</span><span style="color:#F8F8F2;">(BoardKey, userId);</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> score </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> await</span><span style="color:#F8F8F2;"> _leaderboard.</span><span style="color:#50FA7B;">GetScoreAsync</span><span style="color:#F8F8F2;">(BoardKey, userId);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        if</span><span style="color:#F8F8F2;"> (rank </span><span style="color:#FF79C6;">==</span><span style="color:#BD93F9;"> null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FF79C6;">            return</span><span style="color:#50FA7B;"> NotFound</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">User not found in leaderboard</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;"> { userId, rank, score });</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#8BE9FD;font-style:italic;">HttpGet</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">top</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#FF79C6;">    public</span><span style="color:#FF79C6;"> async</span><span style="color:#8BE9FD;font-style:italic;"> Task</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">IActionResult</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#50FA7B;">GetTop</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">int</span><span style="color:#FFB86C;font-style:italic;"> count</span><span style="color:#FF79C6;"> =</span><span style="color:#BD93F9;"> 10</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#FF79C6;">        var</span><span style="color:#F8F8F2;"> top </span><span style="color:#FF79C6;">=</span><span style="color:#FF79C6;"> await</span><span style="color:#F8F8F2;"> _leaderboard.</span><span style="color:#50FA7B;">GetTopAsync</span><span style="color:#F8F8F2;">(BoardKey, count);</span></span>
<span class="line"><span style="color:#FF79C6;">        return</span><span style="color:#50FA7B;"> Ok</span><span style="color:#F8F8F2;">(top);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,93)]))}const c=n(o,[["render",p],["__file","base.html.vue"]]),F=JSON.parse('{"path":"/redis/base.html","title":"Redis 基础","lang":"en-US","frontmatter":{"title":"Redis 基础","icon":"redis","date":"2025-04-24T00:00:00.000Z","category":["Redis","DotNet"],"tag":["Redis"],"description":"Redis（Remote Dictionary Server）是一个开源、基于内存、支持多种数据结构的高性能键值存储数据库。 使用场景 数据类型 ✅ 1. String 类型 📌 用途：用于缓存字符串、数字、JSON 等。是 Redis 中最常用的数据结构 🧠 方法一：StringSet(key, value, expiry = null) 作用：...","head":[["meta",{"property":"og:url","content":"https://luxiag.github.io/luxiag/blog/redis/base.html"}],["meta",{"property":"og:title","content":"Redis 基础"}],["meta",{"property":"og:description","content":"Redis（Remote Dictionary Server）是一个开源、基于内存、支持多种数据结构的高性能键值存储数据库。 使用场景 数据类型 ✅ 1. String 类型 📌 用途：用于缓存字符串、数字、JSON 等。是 Redis 中最常用的数据结构 🧠 方法一：StringSet(key, value, expiry = null) 作用：..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-04-24T10:58:50.000Z"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2025-04-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-24T10:58:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis 基础\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-04-24T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-24T10:58:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luxiag\\",\\"url\\":\\"https://luxiag.github.io/luxiag\\"}]}"]]},"git":{"createdTime":1745492330000,"updatedTime":1745492330000,"contributors":[{"name":"luxiag","username":"luxiag","email":"luxiag@qq.com","commits":1,"url":"https://github.com/luxiag"}]},"readingTime":{"minutes":4.63,"words":1389},"filePathRelative":"redis/base.md","localizedDate":"April 24, 2025","excerpt":"<p>Redis（Remote Dictionary Server）是一个开源、基于内存、支持多种数据结构的高性能<strong>键值</strong>存储数据库。</p>\\n<p><strong>使用场景</strong></p>","autoDesc":true}');export{c as comp,F as data};
